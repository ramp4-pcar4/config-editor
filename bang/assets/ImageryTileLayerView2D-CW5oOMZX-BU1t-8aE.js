import{v as u,kJ as Ee,S as C,n as Fe,a1 as Ae,aM as ze,a6 as ke,ag as ms,a2 as gs,ac as ys,bv as fs,o as ws,b0 as bs,l as xs,an as _s,b9 as St,h as vs,ba as Cs,ki as A}from"./index-DRDU_nTl.js";import{C as bt,j as Pt,F as Ts,y as Ce,r as Rs}from"./datasetUtils-DYlC2Qty-B8i6NR3s.js";import{g as Ss,o as Ps,n as Is}from"./RasterVFDisplayObject-CjEe9AcH-ZvKrKDek.js";import{G as zs}from"./LayerView2D-BaefGYf9-DMc36Z1J.js";import{V as ks}from"./pixelRangeUtils-DcEknavd-CueOHV1N.js";import{O as Ms}from"./clipUtils-fw7VCGXU-DKWGgG54.js";import{y as It,m as Fs,e as Me}from"./MapView-DVZSZHRJ-Bmk5RAAw.js";import{Q as Vs,E as zt,R as Bs,D as Qe,G as Os,I as Ds}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{r as De}from"./vec2f32-hTAvipMV-C0AQcwEv.js";import{u as Gs}from"./Container-Dr2EdOEZ-CzLxKNxT.js";import{L as As,P as Xe,G as Ke,H as Us,Y as Ls,U as js,N as Ge}from"./enums-wEDHPbCF-Cf76M5_x.js";import{F as $s,L as qs,M as Es,G as et}from"./rasterUtils-CV4tTwvB-D9apXnPe.js";import{q as kt}from"./WGLContainer-qQmF3DRB-_szZeR5u.js";import{U as xt,k as Ws,a as Ns,j as tt}from"./enums-CQnCd4Rx-MC1jhLeH.js";import{h as Mt}from"./TileContainer-CAC1uSjc-CgfIAAsw.js";import{K as m,F as Ft,V as v,B as pe,o as We,Z as X,p as d,P as w,j as G,h as fe,ae,z as Vt,w as st,G as Zs,b as oe,af as Hs,f as Qs,a1 as Xs,ag as Ys,M as P,ah as Js,N as Ks,ai as ei,aj as ti,T as si,ak as ii,al as ri,am as ai,X as oi,an as ni,q as li,ab as Ne,L as $,ao as ui,ap as ci,aq as pi,ar as hi,as as di,m as D,i as we,y as Bt,at as q,H as Y,e as mi,W as J,au as gi,av as Ye,aw as yi,I as K,s as W,C as ht,ax as fi,O as I,Y as ie,U as x,J as Ot,g as _e,D as Dt,R as b,S as T,r as N,a as B,d as wi,ay as bi,u as E,t as it,n as xi,_ as _i,a5 as Gt,a0 as At,c as dt,az as ee,aA as te,$ as _t,l as mt}from"./GraphShaderModule-Baq-N_YO-DmKQtn5M.js";import{a as k}from"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import{C as vi}from"./bitmapUtils-CAdCGIbP-ytaDNmnl.js";import{A as Ci,T as be}from"./utils-OrDMNKn4-ChKy2ZJJ.js";import{t as ce}from"./definitions-MCCItX4r-o3EUznKY.js";import{d as Ti}from"./FramebufferObject-D3QloItC-BCl1Wh2i.js";import{Y as Ri,_ as Si}from"./Texture-D5XWO2GQ-B9aUQzsa.js";import{g as xe,V as Pi,U as Ii}from"./dataUtils-CfR0oe2x-zUFVQwWy.js";import{i as zi}from"./UpdatingHandles-Bd2FQ26N-CvefNm7m.js";import{a as vt}from"./TileInfo-U28GysF5-Csxj8poM.js";import{t as Ct,X as Tt,P as ki,V as Mi}from"./RawBlockCache-B-F6OWAv-D259vsXd.js";import{E as Fi,H as Vi,g as Bi,c as Rt,j as Oi}from"./rasterProjectionHelper-DGqzGF1m-BmJoAw_B.js";import"./TileKey-_zikB14n-CUHpBhEx.js";import{r as Di}from"./Scheduler-BV4C4cVP-DdlN6Bbf.js";import{s as Gi}from"./capabilities-BaKzUyhi-B84We26i.js";import{c as Ai}from"./timeSupport-BlIpM2Fj-DH_WGqxk.js";import{i as Ui}from"./popupUtils-B9dNptlM-uujZynfI.js";import{t as Li}from"./LayerView-DdANuT-Y-CNsg-F8d.js";import{o as ji}from"./RefreshableLayerView-CqFW21Do-1k-ti87u.js";import"./Field-BIQ-quF4-D9klJRUl.js";import"./fieldType-PhcL4ff8-mKwAUt_F.js";import"./VertexArrayObject-CieliEx4-zmEENbvB.js";import"./memoryEstimations-DeWfxwaV-CXv6j7jy.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./Utils-Co3xiu1z-BxeuuqeG.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./ReactiveMap-iPeM8evD-D_plRwrp.js";import"./layerViewUtils-DLIaYA64-4unvfMZY.js";import"./Cyclical-DgD7_U1C-DW5Gd-GL.js";import"./CollectionFlattener-DyEG1Q6J-CX4KYnzI.js";import"./workers-CeRXsnNJ-CHie0kLD.js";import"./Queue-DV3gpSdl-BBj5GUvp.js";import"./intl-BAA1onnp-DGsLCBho.js";import"./projectionUtils-B-CplN3q-B7QPK1Xx.js";import"./jsxFactory-Cua8zWVZ-C6Sz0VgP.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./asyncUtils-BPUlNCrX-B0y5b9rY.js";import"./utils-Dd8gTonD-CbyytSu2.js";import"./Version-CnwD6MZa-bAZgKPIl.js";import"./Map-7V1pm_Jo-BJlgGPmn.js";import"./Basemap-C_NhFN5u-mtWBZJ1F.js";import"./loadAll-DQWsVoX1-B6Kwb4K3.js";import"./PortalItem-BP-IQXnZ-BpV17zma.js";import"./writeUtils-DAOvycBP-TEGxhpVZ.js";import"./persistable-DgPk2hdg-ByJO8YtM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-C0f9QwIa.js";import"./PolygonCollection-Btw6sA7T-BubY2NyE.js";import"./editableLayers-DFUBlMJy-RfZacUvm.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DudBwkox.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-BORwbVPt-BTmIdbrD.js";import"./Layer-DvVVmz9x-KWeeum0v.js";import"./TimeExtent-Cf2Pienb-B-fbcJgZ.js";import"./GraphicsCollection-uWAVmks7-DTcnCn7t.js";import"./HeightModelInfo-C4voFc4k-ZWt6RJCe.js";import"./timeZoneUtils-d5p0Jda1-BUF1-4-D.js";import"./Query-n1aoaaFC-BPSxItRE.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-B4i-ITaq.js";import"./projectionUtils-Dt6hj1Xh-CqPdsQLe.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-BaTNjyav.js";import"./normalizeUtilsCommon-ClagynAA-CL_yyNFN.js";import"./utils-BO8hgPs3-CHxondnJ.js";import"./utils-DpLVEUvg-DfFfnFbm.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec32-Cj8pVsU0-DklfJOsw.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-D3tfFRL_-CBYTfd6H.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-BBYkjxC8.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./debugFlags-8tOwPnHK-BqltlLcW.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./EffectView-Bpu5U548-BXGJ3-MG.js";import"./parser-CWccHtwJ-8TX6iggd.js";import"./ProgramTemplate-C4wmhGXE-B6rC2P_i.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./StyleDefinition-BOKVAZI1-DGWlgUVE.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./featureConversionUtils-Bjjlcfdo-CwDtXgIk.js";import"./OptimizedFeature-mIz_HhJg-Doe9CXLP.js";import"./OptimizedGeometry-pzfNw1AT-ML0atVKH.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./ShaderBuilder-CU5v4tk1-Bn7BRqDf.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./constants-oLcGh8d3-CJuD0gcX.js";const $i={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};let qi=class extends Gs{constructor(t=null,e=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._maskTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._mask=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(t){this._processedTexture!==t&&(this._disposeTextures(!0),this._processedTexture=t)}get rasterTexture(){return this._rasterTexture}set rasterTexture(t){var e;this._rasterTexture!==t&&((e=this._rasterTexture)==null||e.dispose(),this._rasterTexture=t),t==null&&(this.projected=!1)}get processed(){return this._processed}set processed(t){this._processed=t,t||(this.processedTexture=A(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||$i}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get mask(){return this._mask}set mask(t){this._mask!==t&&(this._mask=t,this._maskTexture=A(this._maskTexture))}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdsChanged(t)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(t||"nearest")==="bilinear"?Ke.LINEAR:Ke.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid!==t&&(this._transformGrid=t,this._transformGridTexture=A(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(t=!1){var s,i;const e=t||this.projected;return[e?this.width:((s=this.source)==null?void 0:s.width)||this.width,e?this.height:((i=this.source)==null?void 0:i.height)||this.height]}getRasterCellSize(){var i;const t=(i=this.rawPixelData)==null?void 0:i.srcPixelSize,{projected:e,resolution:s}=this;return t&&!e?[t.x,t.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:Me()}}setTransform(t){const e=Bs(this.transforms.displayViewScreenMat3),[s,i]=t.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/t.resolution,r=a*this.width,o=a*this.height,n=Math.PI*this.rotation/180;Qe(e,e,De(s,i)),Qe(e,e,De(r/2,o/2)),Os(e,e,-n),Qe(e,e,De(-r/2,-o/2)),Ds(e,e,De(r,o)),zt(this.transforms.displayViewScreenMat3,t.displayViewMat3,e)}getTextures({forProcessing:t=!1,useProcessedTexture:e=!1}={}){const s=e?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),a.push(s),i.push("u_image"),!this._colormapTexture||!e&&t||(a.push(this._colormapTexture),i.push("u_colormap")),this._maskTexture&&(a.push(this._maskTexture),i.push("u_mask")),{names:i,textures:a}):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:t}){if(!this.stage)return void this._disposeTextures();const e=this._isValidSource(this.source);e&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(e?(this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=$s(t,this.transformGrid)),this._mask&&!this._maskTexture&&(this._maskTexture=qs(t,this._mask,[this.width,this.height]))):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:t}=this;t.length!==0&&(this.processedTexture=t.shift(),t.forEach(e=>e==null?void 0:e.dispose()),t.length=0,this.processed=!!this.processedTexture)}_createOrDestroyRasterTexture(t){var r;const e=(r=this.source)==null?void 0:r.extractBands(this.bandIds);if(!this._isValidSource(e))return void(this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!t.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=Es(t,e,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(t){const e=this._rasterTextureBandIds;return!(e==null&&t==null||e&&t&&e.join("")===t.join(""))}_isValidSource(t){var e;return t!=null&&((e=t.pixels)==null?void 0:e.length)>0}_getTextureSamplingMethod(t){const{type:e}=this.symbolizerParameters,s=e==="lut"&&!this.symbolizerParameters.isClassBreaks||e==="hillshade"||e==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||t!=="bilinear"&&t!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(t){const e=this._colormap,s=this.symbolizerParameters.colormap;return s?e?s.length!==e.length||s.some((i,a)=>i!==e[a])?(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),this._colormapTexture=et(t,s),void(this._colormap=s)):void 0:(this._colormapTexture=et(t,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),void(this._colormap=null))}_disposeTextures(t=!1){t?this.projected&&(this._transformGridTexture=A(this._transformGridTexture)):(this._rasterTexture=A(this._rasterTexture),this._colormapTexture=A(this._colormapTexture),this._transformGridTexture=A(this._transformGridTexture),this._maskTexture=A(this._maskTexture),this._rasterTextureBandIds=null,this._colormap=null,this._colormapTextureInvalidated=!0),this._processedTexture=A(this._processedTexture)}},Ei=class extends kt{constructor(t,e,s,i,a,r,o=null){super(t,e,s,i,a,r),this.bitmap=null,this.bitmap=new qi(o,null,null),this.bitmap.coordScale=[a,r],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t){super.setTransform(t),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:Me(),tileMat3:Me()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}};function Wi(t,e,s,i){const a=Y(e.multiply(s)),r=new ee(new P(a.x),new P(a.y)),o=new ee(r.x.add(1),r.y),n=new ee(r.x,r.y.add(1)),l=new ee(r.x.add(1),r.y.add(1)),c=te(t,r,new P(0)),p=te(t,o,new P(0)),h=te(t,n,new P(0)),y=te(t,l,new P(0)),g=dt(e.multiply(s)),f=W(c,p,g.x),_=W(h,y,g.x),R=W(f,_,g.y);if(!i)return R;const z=new w(c.a,p.a,h.a,y.a),S=z.xy.multiply(z.zw),j=Y(S.x.multiply(S.y).add(.5)),Z=R.multiply(j),He=be(j).multiply(T(t,e));return Z.add(He)}class Te extends I{}function Ni(t,e){const s=T(e.transformTexture,t);return new x(s.r,s.g)}function Zi(t,e){const{transformTexture:s,targetImageSize:i,transformSpacing:a}=e,r=Y(t.multiply(i)),o=new x(4,1),n=Y(r.divide(a)).multiply(o),l=dt(r.add(new x(.5,.5)).divide(a)),c=new ee(_t(n.x),_t(n.y)),p=new b(l,1);return $(Vt(l.x,l.y),Hi(s,c,p),Qi(s,c,p))}function Hi(t,e,s){const i=te(t,e,new P(0)),a=new ee(e.x.add(1),e.y),r=te(t,a,new P(0));return new x(E(i.rgb,s),E(r.rgb,s))}function Qi(t,e,s){const i=new ee(e.x.add(2),e.y),a=te(t,i,new P(0)),r=new ee(e.x.add(3),e.y),o=te(t,r,new P(0));return new x(E(a.rgb,s),E(o.rgb,s))}function Xi(t){const e=B(new x(-1e-5,-1e-5),t).multiply(B(t,new x(1.00001,1.00001))),s=be(e.x.multiply(e.y));return new _i(s)}function Ut(t,e,s=!1){return e?s?Ni(t,e):Zi(t,e):t}function Lt(t,e,s){const{bicubic:i=!1,bilinear:a=!1,nearestOnEdge:r=!1}=s??{};return i||a?i?vi(e.texture,t,e.srcImageSize):Wi(e.texture,t,e.srcImageSize,r):T(e.texture,t)}u([m(ie)],Te.prototype,"transformTexture",void 0),u([m(x)],Te.prototype,"targetImageSize",void 0),u([m(x)],Te.prototype,"transformSpacing",void 0),u([m(x)],Te.prototype,"transformGridSize",void 0);let jt=class extends Ot{};u([Ft(0,x)],jt.prototype,"position",void 0);let Yi=class extends Gt{},he=class extends I{};u([m(ie)],he.prototype,"texture",void 0),u([m(_e)],he.prototype,"dvsMat3",void 0),u([m(x)],he.prototype,"coordScale",void 0),u([m(x)],he.prototype,"srcImageSize",void 0),u([m(d)],he.prototype,"opacity",void 0);class $t extends I{}u([m(ie)],$t.prototype,"maskTexture",void 0);class U extends Dt{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const s=e.position,{dvsMat3:i,coordScale:a}=this.config,r=i.multiply(new b(s.multiply(a),1));return{uv:s,glPosition:new w(r,1)}}fragment(e){const s=new At,i=Ut(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),a=$(Xi(i),new w(0,0,0,0),this._colorize(i));let r=a.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);r=r.multiply(o)}return s.fragColor=new w(a.rgb,1).multiply(r),s}_getPixel(e){const{config:s,bicubic:i,bilinear:a,nearestOnEdge:r}=this;return Lt(e,s,{bicubic:i,bilinear:a,nearestOnEdge:r})}_getPixelMask(e){const{maskTexture:s}=this.pixelMaskConfig,i=T(s,e);return q(i.a)}}u([v],U.prototype,"applyProjection",void 0),u([v],U.prototype,"lookupProjection",void 0),u([v],U.prototype,"bilinear",void 0),u([v],U.prototype,"bicubic",void 0),u([v],U.prototype,"nearestOnEdge",void 0),u([v],U.prototype,"applyPixelMask",void 0),u([m(he)],U.prototype,"config",void 0),u([pe(Te)],U.prototype,"projectionConfig",void 0),u([pe($t)],U.prototype,"pixelMaskConfig",void 0),u([Ee(0,We(jt))],U.prototype,"vertex",null),u([Ee(0,We(Yi))],U.prototype,"fragment",null);let se=class extends I{};function Ve(t,e,s,i=!0){const{colormapTexture:a,colormapOffset:r,colormapMaxIndex:o}=s,n=t.r.multiply(e).subtract(r),l=N(n,new d(0),o),c=new x(l.add(.5).divide(o.add(1)),0),p=T(a,c),h=new w(p.rgb,p.a.multiply(t.a));if(i)return h;const y=B(new d(0),n).multiply(B(n,s.colormapMaxIndex));return h.multiply(y)}u([m(ie)],se.prototype,"colormapTexture",void 0),u([m(d)],se.prototype,"colormapOffset",void 0),u([m(d)],se.prototype,"colormapMaxIndex",void 0);let qt=class extends U{constructor(){super(...arguments),this.type="RasterColorizerLUTShader"}_colorize(t){const e=this._getPixel(t);return Ve(e,new d(1),this.colormapConfig,!1)}};u([m(se)],qt.prototype,"colormapConfig",void 0);function Et(t){const e=new w(0,-.3333333333333333,.6666666666666666,-1),s=$(st(t.y,t.z),new w(t.zy,e.wz),new w(t.yz,e.xy)),i=$(st(t.x,s.x),new w(s.xyw,t.x),new w(t.x,s.yzx)),a=i.x.subtract(it(i.w,i.y)),r=new d(1e-10),o=i.w.subtract(i.y),n=a.multiply(6).add(r),l=D(o.divide(n).add(i.z)),c=i.x.add(r),p=it(a.divide(c),new d(1));return new b(l,p,i.x)}function Wt(t){const e=new w(1,.6666666666666666,.3333333333333333,3),s=D(dt(t.xxx.add(e.xyz)).multiply(6).subtract(e.www)),i=N(s.subtract(e.xxx),new b(0,0,0),new b(1));return t.z.multiply(W(e.xxx,i,t.y))}let H=class extends I{};function L(t){const e=D(t),s=B(e,new x(1,1)).multiply(e),i=new d(2).subtract(e),a=B(new d(1),e).multiply(i);return s.add(a)}function Be(t,e,s){const i=new d(1).divide(s),a=T(t,L(i.multiply(new x(-1,-1)).add(e))),r=T(t,L(i.multiply(new x(0,-1)).add(e))),o=T(t,L(i.multiply(new x(1,-1)).add(e))),n=T(t,L(i.multiply(new x(-1,0)).add(e))),l=T(t,L(e)),c=T(t,L(i.multiply(new x(1,0)).add(e))),p=T(t,L(i.multiply(new x(-1,1)).add(e))),h=T(t,L(i.multiply(new x(0,1)).add(e))),y=T(t,L(i.multiply(new x(1,1)).add(e))),g=new w(a.a,r.a,o.a,n.a),f=new w(c.a,p.a,h.a,y.a),_=g.multiply(f),R=_.xy.multiply(_.zw),z=R.x.multiply(R.y).multiply(l.a),S=new X(new d(0),10);return S[0]=a.r,S[1]=r.r,S[2]=o.r,S[3]=n.r,S[4]=l.r,S[5]=c.r,S[6]=p.r,S[7]=h.r,S[8]=y.r,S[9]=z,S}function gt(t,e){const s=new w(t[5],t[3],t[7],t[1]).multiply(2),i=new b(t[2],s[0],t[8]),a=new b(t[0],s[1],t[6]),r=E(i.subtract(a),new b(1)),o=new b(t[6],s[2],t[8]),n=new b(t[0],s[3],t[2]),l=E(o.subtract(n),new b(1));return new x(r,l).multiply(e)}function Nt(t,e,s){const{factor:i}=e,a=gt(t,i),r=K(E(a,a).add(1)),o=t[9],{sinZsinAs:n,sinZcosAs:l,cosZs:c,weights:p}=e;if(!s){const f=Je({sinZsinA:n[0],sinZcosA:l[0],cosZ:c[0],weights:new d(1),dzxy:a,dzd:r});return new w(f,f,f,o)}const h=Je({sinZsinA:new b(n[0],n[1],n[2]),sinZcosA:new b(l[0],l[1],l[2]),cosZ:new b(c[0],c[1],c[2]),weights:new b(p[0],p[1],p[2]),dzxy:a,dzd:r}),y=Je({sinZsinA:new b(n[3],n[4],n[5]),sinZcosA:new b(l[3],l[5],l[5]),cosZ:new b(c[3],c[4],c[5]),weights:new b(p[3],p[4],p[5]),dzxy:a,dzd:r}),g=E(h.add(y),new b(1));return new w(g,g,g,o)}function Je(t){const e=t.sinZsinA.multiply(t.dzxy.y),s=t.sinZcosA.multiply(t.dzxy.x),i=e.subtract(s),a=t.cosZ.add(i).divide(t.dzd);return a.multiply(B(new d(0),a)).multiply(t.weights)}function Zt(t,e){const{pixelSizeFactor:s}=t,i=[t.factor[0]/e[0],t.factor[1]/e[1]];if(s>0){const{zFactor:a,pixelSizePower:r,gcsFactor:o}=t,n=e[0]*o,l=e[1]*o;i[0]=(a+n**r*s)/(8*n),i[1]=(a+l**r*s)/(8*l)}return i}u([m(X.ofType(d,6))],H.prototype,"sinZcosAs",void 0),u([m(X.ofType(d,6))],H.prototype,"sinZsinAs",void 0),u([m(X.ofType(d,6))],H.prototype,"cosZs",void 0),u([m(X.ofType(d,6))],H.prototype,"weights",void 0),u([m(d)],H.prototype,"minValue",void 0),u([m(d)],H.prototype,"maxValue",void 0),u([m(x)],H.prototype,"factor",void 0);let Re=class extends U{constructor(){super(...arguments),this.type="RasterColorizerShadedReliefShader",this.applyColormap=!1,this.isMultidirectional=!1}_colorize(t){const{texture:e}=this.config,s=Be(e,t,this.config.srcImageSize),i=Nt(s,this.hillshadeConfig,this.isMultidirectional);if(!this.applyColormap)return new w(i.x,i.x,i.x,i.a);const{minValue:a,maxValue:r}=this.hillshadeConfig,o=this._getPixel(t),n=r.subtract(a),l=o.r.subtract(a),c=N(l.divide(n),new d(0),new d(1)),p=Ve(new w(c,c,c,1),new d(255),this.colormapConfig),h=Et(p.xyz),y=Wt(new b(h.xy,i.x));return new w(y,p.a.multiply(i.a))}};u([v],Re.prototype,"applyColormap",void 0),u([v],Re.prototype,"isMultidirectional",void 0),u([m(H)],Re.prototype,"hillshadeConfig",void 0),u([pe(se)],Re.prototype,"colormapConfig",void 0);let Q=class extends I{};function Ji(t,e){const{minCutOff:s,maxCutOff:i,factor:a,minOutput:r}=e;return N(t,s,i).subtract(s).multiply(a).add(r)}function Ki(t,e){const{minCutOff:s,maxCutOff:i,minOutput:a,maxOutput:r,gamma:o,gammaCorrection:n}=e,l=N(t,s,i).subtract(s),c=i.subtract(s),p=l.divide(c),h=B(new d(1),o),y=q(o.subtract(1)),g=r.subtract(a),f=new b(1),_=J(f.divide(g),p.multiply(n)),R=be(h.multiply(y).multiply(_)),z=J(p,f.divide(o)),S=R.multiply(g).multiply(z).add(a);return N(S,a,r)}function Ht(t,e,s,i=255){const a=s?Ki(t.rgb,e).divide(i):Ji(t.rgb,e);return new w(a,t.a)}u([m(d)],Q.prototype,"minOutput",void 0),u([m(d)],Q.prototype,"maxOutput",void 0),u([m(b)],Q.prototype,"minCutOff",void 0),u([m(b)],Q.prototype,"maxCutOff",void 0),u([m(b)],Q.prototype,"factor",void 0),u([m(b)],Q.prototype,"gamma",void 0),u([m(b)],Q.prototype,"gammaCorrection",void 0);let ne=class extends U{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(t){const e=this._getPixel(t);if(this.noOp)return e;let s=Ht(e,this.stretchConfig,this.useGamma);if(this.isMultiband)return s;if(s=new w(s.rrr,s.a),this.applyColormap){const i=this.useGamma?255:1;s=Ve(s,new d(i),this.colormapConfig)}return s}};u([v],ne.prototype,"isMultiband",void 0),u([v],ne.prototype,"applyColormap",void 0),u([v],ne.prototype,"useGamma",void 0),u([v],ne.prototype,"noOp",void 0),u([m(Q)],ne.prototype,"stretchConfig",void 0),u([pe(se)],ne.prototype,"colormapConfig",void 0);let er=class extends mt{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=k.RasterColorizer,this.shaders={lut:new qt,stretch:new ne,shadedRelief:new Re}}render(t,e){for(const s of e.bitmaps){if(!s.source||s.suspended)continue;t.timeline.begin(this.name);const{painter:i}=t;i.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:s.stencilRef,compare:As.EQUAL,op:{fail:Xe.KEEP,zFail:Xe.KEEP,zPass:Xe.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),s.updateTexture(t),s.processedTexture||s.updateProcessedTexture();const{type:a}=s.symbolizerParameters,r=a==="stretch"?this._getStretchOptions(s):a==="lut"?this._getLutOptions(s):this._getShadedReliefOptions(s);s.interpolation!=="bilinear"||t.context.capabilities.textureFloatLinear||(r.defines.bilinear=!0),i.submitDrawMesh(t.context,r,i.quadMesh),t.timeline.end(this.name)}}_getLutOptions(t){const{config:e,projectionConfig:s,colormapConfig:i,pixelMaskConfig:a,projectionDefines:r}=this._getCommonConfig(t),o=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:s,config:e,colormapConfig:i,pixelMaskConfig:a},defines:{...r,...o,applyPixelMask:!!a},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(t){const e=t.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:a,pixelMaskConfig:r,projectionDefines:o}=this._getCommonConfig(t),n=this._getInterpolationDefines(t.interpolation,e.bandCount===1);return{shader:this.shaders.stretch,uniforms:{projectionConfig:i,config:s,stretchConfig:e,colormapConfig:a,pixelMaskConfig:r},defines:{...o,...n,isMultiband:e.bandCount>1,applyColormap:!!a,useGamma:e.useGamma,noOp:t.isRendereredSource&&!t.processed,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(t){const e=t.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:a,pixelMaskConfig:r,projectionDefines:o}=this._getCommonConfig(t),n=this._getInterpolationDefines(t.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:i,config:s,hillshadeConfig:e,colormapConfig:a,pixelMaskConfig:r},defines:{...o,...n,isMultidirectional:e.hillshadeType>0,applyColormap:!!a,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(t){const{coordScale:e,computedOpacity:s,transforms:i}=t,{names:a,textures:r}=t.getTextures({useProcessedTexture:t.processed}),o=r[a.indexOf("u_image")],n=t.getRasterTextureSize(),l={texture:{texture:o,unit:0},dvsMat3:i.displayViewScreenMat3,coordScale:e,srcImageSize:n,opacity:s},c=r[a.indexOf("u_transformGrid")],{transformGrid:p}=t,h=!(!c||!p),y=h?{transformTexture:{texture:c,unit:2},targetImageSize:[t.width,t.height],transformSpacing:p.spacing,transformGridSize:p.size}:void 0,g=r[a.indexOf("u_colormap")],{colormap:f,colormapOffset:_}=t.symbolizerParameters,R=g&&f?{colormapTexture:{texture:g,unit:1},colormapOffset:_??0,colormapMaxIndex:f.length/4-1}:void 0,z=r[a.indexOf("u_mask")];return{config:l,projectionConfig:y,colormapConfig:R,pixelMaskConfig:z?{maskTexture:{texture:z,unit:3}}:void 0,projectionDefines:{applyProjection:h,lookupProjection:h&&p.spacing[0]===1}}}_getInterpolationDefines(t,e){const s=t==="bilinear"&&e;return{bilinear:s,bicubic:t==="cubic",nearestOnEdge:s}}};function Qt(t,e){const s=new Ri;return s.width=t,s.height=e,s.internalFormat=Us.RGBA32F,s.samplingMode=Ke.NEAREST,s.dataType=Ls.FLOAT,s.isImmutable=!0,s.wrapMode=js.CLAMP_TO_EDGE,s}function tr(t,e,s){const i=Qt(e,s);return new Si(t,i)}function Xt(t,e,s){const i=Qt(e,s);return new Ti(t,i)}let V=class extends mt{shutdown(t){var e;super.shutdown(t),(e=this._fbo)==null||e.dispose(),this._fbo=void 0}render(t,e){const{rasterFunction:s}=t;if(!s)return;const{context:i}=t,a="indexedColormap"in s.parameters?et(i,s.parameters.indexedColormap):void 0,r=s.name==="Reproject",o=i.getBoundFramebufferObject(),n=i.getViewport();for(const l of e.bitmaps){const c=r?!(l.rasterTexture&&l.projected):!l.processed;if(!l.source||!c||l.suspended)continue;t.timeline.begin(this.name);const{painter:p}=t;p.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:Ge.ONE,dstRGB:Ge.ZERO,srcAlpha:Ge.ONE,dstAlpha:Ge.ZERO}}}),r||(l.processedTexture=A(l.processedTexture)),l.updateTexture(t);const[h,y]=l.getRasterTextureSize(r),g=h===ce&&y===ce,f=g?e.processorFbo:Xt(i,h,y);i.bindFramebuffer(f),i.setViewport(0,0,f.width,f.height),this._process(t,l,a);const _=tr(t.context,h,y);if(f.copyToTexture(0,0,h,y,0,0,_),r)l.rasterTexture=_;else{const R=t.hasBranches?s.id:0;l.functionTextures[R]=_}g||f.dispose(),t.timeline.end(this.name)}a==null||a.dispose(),i.bindFramebuffer(o),i.setViewport(n.x,n.y,n.width,n.height)}_getCommonConfig(t,e){var c,p;const{rasterFunction:s,hasBranches:i}=t,{raster:a,rasters:r}=s.parameters,o=i?(a==null?void 0:a.id)??((p=(c=r==null?void 0:r.filter(h=>h.name!=="Constant"))==null?void 0:c[0])==null?void 0:p.id)??-1:0,n=e.functionTextures[o]??e.rasterTexture,l=s.name==="Reproject";return{texture:{texture:n,unit:0},srcImageSize:e.getRasterTextureSize(l)}}_getMultipleInputConfig(t,e){return e!=null&&e.length?e.length===2?{twoRasterConfig:this._getTwoInputConfig(e,t)}:e.length===3?{threeRasterConfig:this._getThreeInputConfig(e,t)}:{}:{}}_getConstantCount(t){return(t==null?void 0:t.filter(e=>e.name==="Constant").length)??0}_getTextures(t,e){return t.filter(s=>s.name!=="Constant").map(s=>s.id!=null&&s.name!=="Identity"?e.functionTextures[s.id]:e.rasterTexture)}_getTwoInputConfig(t,e){const s=this._getTextures(t,e),i=s[1]?{texture:s[1],unit:1}:void 0,a=t.findIndex(o=>o.name==="Constant"),r=a===0?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:i,image1Const:a>-1?t[a].parameters.value:0,imageSwap:r}}_getThreeInputConfig(t,e){const s=this._getTextures(t,e);let i=0,a=0,r=new Float32Array([1,0,0,0,1,0,0,0,1]);const o=s[1]?{texture:s[1],unit:1}:void 0,n=s[2]?{texture:s[2],unit:2}:void 0,l=[];if(t.forEach((c,p)=>c.name==="Constant"&&l.push(p)),l.length===1)i=t[l[0]].parameters.value,r=l[0]===0?new Float32Array([0,1,0,0,0,1,1,0,0]):l[0]===1?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(l.length===2){i=t[l[0]].parameters.value,a=t[l[1]].parameters.value;const c=t.findIndex(p=>p.name!=="Constant");r=c===0?new Float32Array([1,0,0,0,1,0,0,0,1]):c===1?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:o,image2:n,image1Const:i,image2Const:a,imageSwap:r}}},Yt=class extends Ot{};u([Ft(0,x)],Yt.prototype,"position",void 0);let sr=class extends Gt{},rt=class extends I{};u([m(ie)],rt.prototype,"texture",void 0),u([m(x)],rt.prototype,"srcImageSize",void 0);let M=class extends Dt{vertex(t){return{uv:t.position,glPosition:new w(Ci(t.position),0,1)}}fragment(t){const e=new At,s=Ut(t.uv),i=this._process(s);return e.fragColor=new w(i.rgb,1).multiply(i.a),e}_getPixel(t){return Lt(t,this.config)}};u([m(rt)],M.prototype,"config",void 0),u([Ee(0,We(Yt))],M.prototype,"vertex",null),u([Ee(0,We(sr))],M.prototype,"fragment",null);let Jt=class extends I{};u([m(x)],Jt.prototype,"cellSize",void 0);let Kt=class extends M{constructor(){super(...arguments),this.type="AspectShader"}_process(t){const{texture:e}=this.config,s=Be(e,t,this.config.srcImageSize),i=new x(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:a,y:r}=gt(s,i),o=we(r),n=s[9].multiply(q(D(a).add(D(o)))),l=D(q(a)),c=new d(3.14159265359),p=new d(0),h=B(p,o).multiply(.5).multiply(c).add(B(o,p).multiply(1.5).multiply(c)),y=Bt(new d(2.5).multiply(c).add(Ne(o,we(a))),new d(2).multiply(c)),g=W(h,y,l).multiply(180).divide(c);return new w(g,g,g,n)}};u([m(Jt)],Kt.prototype,"aspectConfig",void 0);let ir=class extends V{constructor(){super(...arguments),this.name="RasterAspectProcessor",this.type=k.Aspect,this.shaders={aspect:new Kt}}_process(t,e){const s={cellSize:e.getRasterCellSize()},i=this._getCommonConfig(t,e),a={shader:this.shaders.aspect,uniforms:{config:i,aspectConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:r,context:o}=t;r.submitDrawMesh(o,a,r.quadMesh)}};function F(t){const e=q(t),s=t.add(D(e).subtract(1));return e.multiply(e).divide(s)}function ve(t){return new w(Y(t.rgb.add(.5)),t.a)}function es(t,e){return B(e.x,t).multiply(B(t,e.y))}function rr(t,e,s){const i=new b(t);let a=new b(0,0,0),r=new d(0);for(let o=0;o<s/3;o++){const n=9*o,l=new b(e[n],e[n+3],e[n+6]),c=new b(e[n+1],e[n+4],e[n+7]),p=B(l,i).multiply(B(i,c)),h=new b(e[n+2],e[n+5],e[n+8]);r=W(r,h.x,p.x),r=W(r,h.y,p.y),r=W(r,h.z,p.z),a=a.add(p)}return{mapValue:r,includeMask:q(E(a,new b(1,1,1)))}}class ts extends I{}u([m(_e)],ts.prototype,"bandIndexMat3",void 0);let ss=class extends I{};u([m(b)],ss.prototype,"adjustments",void 0);let Se=class extends M{constructor(){super(...arguments),this.type="BandArithmeticShader",this.isOutputRounded=!1}_process(t){const e=this._getPixel(t),s=this.bandArithmeticConfig.bandIndexMat3.multiply(e.rgb),i=this._processIndex(s),a=new w(i,i,i,e.a);return this.isOutputRounded?ve(a):a}_processIndex(t){var a;const{r:e,g:s}=t,i=(a=this.adjustmentConfig)==null?void 0:a.adjustments;switch(this.indexType){case"ndxi":{const r=e.subtract(s),o=e.add(s);return r.multiply(F(o))}case"sr":return e.multiply(F(s));case"ci":return e.multiply(F(s)).subtract(1);case"savi":{const{x:r}=i,o=e.subtract(s),n=e.add(s).add(r);return o.multiply(F(n)).multiply(r.add(1))}case"tsavi":{const{x:r,y:o,z:n}=i,l=n.multiply(r.multiply(r).add(1)).subtract(o.multiply(r)),c=r.multiply(e.subtract(r.multiply(s)).subtract(o)),p=o.multiply(e).add(s).add(l);return c.multiply(F(p))}case"msavi":{const r=e.multiply(2).add(1),o=r.multiply(r).subtract(e.subtract(s).multiply(8));return r.subtract(K(o)).multiply(.5)}case"gemi":{const r=e.multiply(e).subtract(s.multiply(s)).multiply(2).add(e.multiply(1.5)).add(s.multiply(.5)),o=e.add(s).add(.5),n=r.multiply(F(o)),l=n.multiply(be(n.multiply(.25))),c=s.subtract(.125).multiply(F(be(s)));return l.subtract(c)}case"pvi":{const{x:r,y:o}=i,n=K(r.multiply(r).add(1));return e.subtract(s.multiply(r)).subtract(o).multiply(F(n))}case"vari":{const r=t.g.subtract(t.r),o=t.g.add(t.r).subtract(t.b);return r.multiply(F(o))}case"rtvicore":return e.subtract(s).multiply(100).subtract(e.subtract(t.b).multiply(10));case"bai":{const r=J(new d(.1).subtract(s),new d(2)),o=J(new d(.06).subtract(e),new d(2));return F(r.add(o))}case"evi":{const r=t.b,o=e.add(s.multiply(6)).subtract(r.multiply(7.5)).add(1);return e.subtract(s).multiply(2.5).multiply(F(o))}case"wndwi":{const{r,g:o,b:n}=t,l=i.x,c=l.multiply(o),p=l.multiply(n),h=r.add(c).add(n).subtract(p);return r.subtract(c).subtract(n).add(p).multiply(F(h))}case"mtvi":{const r=t.b,o=J(e.multiply(2).add(1),new d(2)),n=e.multiply(6).subtract(K(s).multiply(5)),l=K(o.subtract(n).subtract(.5)),c=e.subtract(r).multiply(1.2),p=s.subtract(r).multiply(2.5);return c.subtract(p).multiply(1.5).multiply(F(l))}default:return e}}};u([v],Se.prototype,"indexType",void 0),u([v],Se.prototype,"isOutputRounded",void 0),u([m(ts)],Se.prototype,"bandArithmeticConfig",void 0),u([pe(ss)],Se.prototype,"adjustmentConfig",void 0);let ar=class extends V{constructor(){super(...arguments),this.name="RasterBandArithmeticProcessor",this.type=k.BandArithmetic,this.shaders={bandArithmetic:new Se}}_process(t,e){const s=t.rasterFunction.parameters,i={indexType:s.indexType,isOutputRounded:s.isOutputRounded},a={bandIndexMat3:s.bandIndexMat3},r=s.adjustments?{adjustments:[...s.adjustments]}:void 0,o=this._getCommonConfig(t,e),n={shader:this.shaders.bandArithmetic,uniforms:{config:o,bandArithmeticConfig:a,adjustmentConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=t;l.submitDrawMesh(c,n,l.quadMesh)}},is=class extends M{constructor(){super(...arguments),this.type="ColormapToRGBShader"}_process(t){const e=this._getPixel(t),s=Ve(e,new d(1),this.colormapConfig,!1);return new w(s.xyz.multiply(255),s.a)}};u([m(se)],is.prototype,"colormapConfig",void 0);class or extends V{constructor(){super(...arguments),this.name="RasterColormapToRGBProcessor",this.type=k.ColormapToRGB,this.shaders={colormapToRGB:new is}}_process(e,s,i){const a=e.rasterFunction.parameters,r={colormapTexture:{texture:i,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},o=this._getCommonConfig(e,s),n={shader:this.shaders.colormapToRGB,uniforms:{config:o,colormapConfig:r},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}let Ue=class extends I{};u([m(ie)],Ue.prototype,"image1",void 0),u([m(d)],Ue.prototype,"image1Const",void 0),u([m(_e)],Ue.prototype,"imageSwap",void 0);let de=class extends I{};u([m(ie)],de.prototype,"image1",void 0),u([m(ie)],de.prototype,"image2",void 0),u([m(d)],de.prototype,"image1Const",void 0),u([m(d)],de.prototype,"image2Const",void 0),u([m(_e)],de.prototype,"imageSwap",void 0);const yt=t=>{class e extends t{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(i){const{imageCount:a}=this;if(a===1){const r=T(this.config.texture,i);return{a:r.r,b:r.g,c:r.b,alpha:r.a}}if(a===2){const r=this._getTwoValues(i);return{a:r.a,b:r.b,c:r.b,alpha:r.alpha}}return this._getThreeValues(i)}_getTwoValues(i){const a=T(this.config.texture,i);if(this.constantCount===1){const{imageSwap:n,image1Const:l}=this.twoRasterConfig,c=n.multiply(new b(a.r,l,0));return{a:c.x,b:c.y,alpha:a.a}}const{image1:r}=this.twoRasterConfig,o=T(r,i);return{a:a.r,b:o.r,alpha:a.a.multiply(o.a)}}_getThreeValues(i){const a=T(this.config.texture,i),{imageSwap:r,image1:o,image2:n,image1Const:l,image2Const:c}=this.threeRasterConfig;if(this.constantCount===2){const y=r.multiply(new b(a.r,l,c));return{a:y.x,b:y.y,c:y.z,alpha:a.a}}if(this.constantCount===1){const y=T(o,i),g=r.multiply(new b(a.r,y.r,l));return{a:g.x,b:g.y,c:g.z,alpha:a.a.multiply(y.a)}}const p=T(o,i),h=T(n,i);return{a:a.r,b:p.r,c:h.r,alpha:a.a.multiply(p.a).multiply(h.a)}}}return u([v],e.prototype,"constantCount",void 0),u([v],e.prototype,"imageCount",void 0),u([pe(Ue)],e.prototype,"twoRasterConfig",void 0),u([pe(de)],e.prototype,"threeRasterConfig",void 0),e};let nr=class extends yt(M){constructor(){super(...arguments),this.type="CompositeBandShader"}_process(t){const{a:e,b:s,c:i,alpha:a}=this._getRasterValues(t);return new w(e,s,i,a)}},lr=class extends V{constructor(){super(...arguments),this.name="RasterCompositeBandProcessor",this.type=k.CompositeBand,this.shaders={compositeBand:new nr}}_process(t,e){const{rasters:s}=t.rasterFunction.parameters,i={constantCount:this._getConstantCount(s),imageCount:(s==null?void 0:s.length)??1},a=this._getMultipleInputConfig(e,s),r=this._getCommonConfig(t,e),o={shader:this.shaders.compositeBand,uniforms:{config:r,...a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}};class ft extends I{}u([m(x)],ft.prototype,"domainRange",void 0);class Le extends yt(M){constructor(){super(...arguments),this.type="LocalShader",this.isOutputRounded=!1}_process(e){if(this.operationName==="conditional")return this._conditional(e);const{a:s,b:i,alpha:a}=this._getRasterValues(e),{value:r,alpha:o}=this._compute(s,i,a);return this._processResult(r,o)}_processResult(e,s){const i=es(e,this.domainRangeConfig.domainRange),a=new w(e,e,e,s).multiply(i);return this.isOutputRounded?ve(a):a}_compute(e,s,i){const{operationName:a}=this;let r;switch(a){case"plus":r=e.add(s);break;case"minus":r=e.subtract(s);break;case"times":r=e.multiply(s);break;case"divide":case"floatdivide":r=e.multiply(F(s)),i=i.multiply(G(D(q(s))));break;case"floordivide":r=Y(e.multiply(F(s))),i=i.multiply(G(D(q(s))));break;case"square":r=e.multiply(e);break;case"sqrt":r=K(e);break;case"power":r=J(e,s);break;case"ln":r=$(oe(e,new d(0)),yi(e),new d(0)),i=i.multiply(this._isAboveZero(e));break;case"log10":r=$(oe(e,new d(0)),Ye(e).multiply(F(Ye(new d(10)))),new d(0)),i=i.multiply(this._isAboveZero(e));break;case"log2":r=$(oe(e,new d(0)),Ye(e),new d(0)),i=i.multiply(this._isAboveZero(e));break;case"exp":r=gi(e);break;case"exp10":r=J(new d(10),e);break;case"exp2":r=J(new d(2),e);break;case"rounddown":r=Y(e);break;case"roundup":r=mi(e);break;case"int":r=q(e).multiply(Y(D(e)));break;case"mod":r=Bt(e,s);break;case"negate":r=we(e);break;case"abs":r=D(e);break;case"acos":{const o=this._isAbsBiggerThanOne(e);r=$(o,new d(0),di(e)),i=$(o,new d(0),i);break}case"acosh":r=hi(e);break;case"asin":{const o=this._isAbsBiggerThanOne(e);r=$(o,new d(0),pi(e)),i=$(o,new d(0),i);break}case"asinh":r=ci(e);break;case"atan":r=Ne(e);break;case"atanh":{const o=this._isAbsBiggerThanOne(e);r=$(o,new d(0),ui(e)),i=$(o,new d(0),i);break}case"atan2":r=Ne(e,s);break;case"cos":r=li(e);break;case"cosh":r=ni(e);break;case"sin":r=oi(e);break;case"sinh":r=ai(e);break;case"tan":r=ri(e);break;case"tanh":r=ii(e);break;case"bitwiseand":r=new d(si(new P(e),new P(s)));break;case"bitwiseor":r=new d(ti(new P(e),new P(s)));break;case"bitwiseleftshift":r=new d(ei(new P(e),new P(s)));break;case"bitwiserightshift":r=new d(Ks(new P(e),new P(s)));break;case"bitwisenot":r=new d(Js(new P(e)));break;case"bitwisexor":r=new d(Ys(new P(e),new P(s)));break;case"booleanand":r=G(Xs(ae(e,new d(0)),ae(s,new d(0))));break;case"booleanor":r=G(Qs(ae(e,new d(0)),ae(s,new d(0))));break;case"booleannot":r=G(fe(e,new d(0)));break;case"booleanxor":r=G(Hs(ae(e,new d(0)),ae(s,new d(0))));break;case"greaterthan":r=G(oe(e,s));break;case"greaterthanequal":r=G(Zs(e,s));break;case"lessthan":r=G(st(e,s));break;case"lessthanequal":r=G(Vt(e,s));break;case"equalto":r=G(fe(e,s));break;case"notequal":r=G(ae(e,s));break;case"isnull":r=G(fe(i,new d(0))),i=new d(1);break;case"setnull":{const o=G(fe(e,new d(0)));r=o.multiply(s),i=i.multiply(o);break}default:r=e}return{value:r,alpha:i}}_conditional(e){const{a:s,b:i,c:a,alpha:r}=this._getRasterValues(e),o=new d(D(q(s))),n=W(a,i,o);return this._processResult(n,r)}_isAboveZero(e){return G(oe(e,new d(0)))}_isAbsBiggerThanOne(e){return oe(D(e),new d(1))}}u([v],Le.prototype,"operationName",void 0),u([v],Le.prototype,"isOutputRounded",void 0),u([m(ft)],Le.prototype,"domainRangeConfig",void 0);let je=class extends yt(M){constructor(){super(...arguments),this.type="ComputeChangeShader",this.isOutputRounded=!1}_process(t){const{a:e,b:s,alpha:i}=this._getRasterValues(t);let a=e.subtract(s);this.method==="relative-difference"&&(a=a.multiply(F(ht(D(e),D(s)))));const r=es(a,this.domainRangeConfig.domainRange),o=new w(a,a,a,i).multiply(r);return this.isOutputRounded?ve(o):o}};u([v],je.prototype,"method",void 0),u([v],je.prototype,"isOutputRounded",void 0),u([m(ft)],je.prototype,"domainRangeConfig",void 0);let ur=class extends V{constructor(){super(...arguments),this.name="RasterComputeChangeProcessor",this.type=k.ComputeChange,this.shaders={computeChange:new je}}_process(t,e){const s=t.rasterFunction.parameters,{rasters:i}=s,a={constantCount:this._getConstantCount(i),imageCount:i.length,method:s.method,isOutputRounded:s.isOutputRounded},r={domainRange:s.domainRange},{twoRasterConfig:o}=this._getMultipleInputConfig(e,i),n=this._getCommonConfig(t,e),l={shader:this.shaders.computeChange,uniforms:{config:n,domainRangeConfig:r,twoRasterConfig:o},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:p}=t;c.submitDrawMesh(p,l,c.quadMesh)}},at=class extends I{};u([m(d)],at.prototype,"contrastOffset",void 0),u([m(d)],at.prototype,"brightnessOffset",void 0);let rs=class extends M{constructor(){super(...arguments),this.type="ContrastBrightnessShader"}_process(t){const{rgb:e,a:s}=this._getPixel(t),{contrastOffset:i,brightnessOffset:a}=this.contrastBrightnessConfig,r=new d(255),o=new d(128),n=e.multiply(200),l=r.multiply(100),c=r.multiply(2).multiply(a),p=n.subtract(l).add(c),h=wi([fe(i,new d(-100)),new b(o)],[fe(i,new d(100)),q(p).add(1).divide(2).multiply(r)],[oe(i,new d(0)),p.divide(new d(100).subtract(i).multiply(2)).add(o)],[!0,p.multiply(i.add(100)).divide(2e4).add(o)]);return ve(new w(h,s))}};u([m(at)],rs.prototype,"contrastBrightnessConfig",void 0);class cr extends V{constructor(){super(...arguments),this.name="RasterContrastBrightnessProcessor",this.type=k.ContrastBrightness,this.shaders={contrastBrightness:new rs}}_process(e,s){const i=this._getCommonConfig(e,s),a=e.rasterFunction.parameters,r={shader:this.shaders.contrastBrightness,uniforms:{config:i,contrastBrightnessConfig:a},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,r,o.quadMesh)}}let ot=class extends I{};u([m(fi.ofType(d,5,5,!0))],ot.prototype,"kernel",void 0),u([m(x)],ot.prototype,"clampRange",void 0);let $e=class extends M{constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(t){const{rows:e,cols:s}=this,i=new x(Math.floor(e/2),Math.floor(s/2)),{texture:a,srcImageSize:r}=this.config,o=new d(1).divide(r),{kernel:n}=this.convolutionConfig,l=bi(n,{initialValue:new w(0,0,0,1),xRange:[0,e],yRange:[0,s],callback:(p,h,y,g)=>{const f=new x(new d(y),new d(g)).subtract(i).multiply(o),_=T(a,L(t.add(f))),R=_.rgb.multiply(h).add(p.rgb),z=_.a.multiply(p.a);return new w(R,z)}}),{clampRange:c}=this.convolutionConfig;return new w(N(l.rgb,c.x,c.y),1).multiply(l.a)}};u([v],$e.prototype,"rows",void 0),u([v],$e.prototype,"cols",void 0),u([m(ot)],$e.prototype,"convolutionConfig",void 0);let pr=class extends V{constructor(){super(...arguments),this.name="RasterConvolutionProcessor",this.type=k.Convolution,this.shaders={convolution:new $e}}_process(t,e){const s=t.rasterFunction.parameters,i={rows:s.kernelRows,cols:s.kernelCols},a={kernel:[...s.kernel],clampRange:s.clampRange},r=this._getCommonConfig(t,e),o={shader:this.shaders.convolution,uniforms:{config:r,convolutionConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}},as=class extends I{};u([m(d)],as.prototype,"zlFactor",void 0);let nt=class extends M{constructor(){super(...arguments),this.type="CurvatureShader"}_process(t){const{texture:e}=this.config,s=Be(e,t,this.config.srcImageSize),i=s[3].add(s[5]).multiply(.5).subtract(s[4]),a=s[1].add(s[7]).multiply(.5).subtract(s[4]),{zlFactor:r}=this.curvatureConfig,{curvatureType:o}=this;let n;if(o==="standard")n=we(r).multiply(i.add(a));else{const l=s[2].subtract(s[0]).add(s[6]).subtract(s[8]).divide(4),c=s[5].subtract(s[3]).divide(2),p=s[1].subtract(s[7]).divide(2),h=c.multiply(c),y=p.multiply(p),g=c.multiply(p),f=r.divide(h.add(y));n=o==="profile"?E(new b(i,a,l),new b(h,y,g)).multiply(f):E(new b(i,a,we(l)),new b(y,h,g)).multiply(we(f))}return new w(n,n,n,s[9])}};u([v],nt.prototype,"curvatureType",void 0),u([m(as)],nt.prototype,"curvatureConfig",void 0);let hr=class extends V{constructor(){super(...arguments),this.name="RasterCurvatureProcessor",this.type=k.Curvature,this.shaders={curvature:new nt}}_process(t,e){const s=t.rasterFunction.parameters,i={curvatureType:s.curvatureType},a=e.getRasterCellSize(),r={zlFactor:200*s.zFactor/a[0]/a[1]},o=this._getCommonConfig(t,e),n={shader:this.shaders.curvature,uniforms:{config:o,curvatureConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=t;l.submitDrawMesh(c,n,l.quadMesh)}},os=class extends I{};u([m(_e)],os.prototype,"bandIndexMat3",void 0);let ns=class extends M{constructor(){super(...arguments),this.type="ExtractBandShader"}_process(t){const e=this._getPixel(t),s=this.extractBandConfig.bandIndexMat3.multiply(e.rgb);return new w(s,e.a)}};u([m(os)],ns.prototype,"extractBandConfig",void 0);let dr=class extends V{constructor(){super(...arguments),this.name="RasterExtractBandProcessor",this.type=k.ExtractBand,this.shaders={extractBand:new ns}}_process(t,e){const s={bandIndexMat3:t.rasterFunction.parameters.bandIndexMat3},i=this._getCommonConfig(t,e),a={shader:this.shaders.extractBand,uniforms:{config:i,extractBandConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:r,context:o}=t;r.submitDrawMesh(o,a,r.quadMesh)}},ls=class extends I{};u([m(x)],ls.prototype,"clampRange",void 0);class me extends M{constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(e){const s=this._process1(e),i=B(new d(1),s.a);if(!this.fill)return this._clamp(s.rgb,i);const a=this._getPixel(e),r=W(s.rgb,a.rgb,a.a);return this._clamp(r,i)}_clamp(e,s){const{clampRange:i}=this.focalStatisticsConfig;return new w(N(e,i.x,i.y),1).multiply(s)}_process1(e){const{texture:s,srcImageSize:i}=this.config,{rows:a,cols:r}=this,o=new x(Math.floor(a/2),Math.floor(r/2)),n=new d(1).divide(i),l=this._getPixel(e),{statisticsType:c}=this,p=c==="min"||c==="max"?new w(l.rgb,0):new w(0,0,0,0);switch(c){case"min":return this._stat(a,r,p,(h,y,g)=>{const f=new x(new d(y),new d(g)).subtract(o).multiply(n),_=T(s,L(e.add(f))),R=it(h.rgb,_.rgb);return new w(R,h.a.add(_.a))});case"max":return this._stat(a,r,p,(h,y,g)=>{const f=new x(new d(y),new d(g)).subtract(o).multiply(n),_=T(s,L(e.add(f))),R=ht(h.rgb,_.rgb);return new w(R,h.a.add(_.a))});case"mean":{const h=this._stat(a,r,p,(g,f,_)=>{const R=new x(new d(f),new d(_)).subtract(o).multiply(n),z=T(s,L(e.add(R))),S=g.rgb.add(z.rgb.multiply(z.a));return new w(S,g.a.add(z.a))}),y=h.rgb.multiply(F(h.a));return new w(y,h.a)}case"stddev":{const h=this._stat(a,r,p,(_,R,z)=>{const S=new x(new d(R),new d(z)).subtract(o).multiply(n),j=T(s,L(e.add(S))),Z=_.rgb.add(j.rgb.multiply(j.a));return new w(Z,_.a.add(j.a))}),y=this._stat(a,r,p,(_,R,z)=>{const S=new x(new d(R),new d(z)).subtract(o).multiply(n),j=T(s,L(e.add(S))),Z=_.rgb.add(j.a.multiply(j.rgb).multiply(j.rgb));return new w(Z,_.a.add(j.a))}),g=F(y.a),f=K(y.subtract(h.multiply(h).multiply(g)).multiply(g));return new w(f.rgb,h.a)}default:return l}}_stat(e=3,s=3,i,a){const r=new P(0).setMutable().setDebugName("StatColIterator"),o=new P(0).setMutable().setDebugName("StatRowIterator"),n=i.setMutable().setDebugName("StatAccumulator"),l=a(n,r,o).setDebugName("StatPredicate");return xi({iterX:r,iterY:o,accumulator:n},w,l,({out:c,iterX:p,iterY:h,accumulator:y,subgraph:g})=>`
  for (${h} = 0; ${h} < ${e}; ${h}++) {
    for (${p} = 0; ${p} < ${s}; ${p}++) {
  
    ${g.body}
  
    ${y} = ${g.varName};
    }
  }
  ${c} = ${y};
  `).setDebugName("statBody")}}u([v],me.prototype,"rows",void 0),u([v],me.prototype,"cols",void 0),u([v],me.prototype,"statisticsType",void 0),u([v],me.prototype,"fill",void 0),u([m(ls)],me.prototype,"focalStatisticsConfig",void 0);class mr extends V{constructor(){super(...arguments),this.name="RasterFocalStatisticsProcessor",this.type=k.Statistics,this.shaders={focalStatistics:new me}}_process(e,s){const i=e.rasterFunction.parameters,a={rows:i.kernelRows,cols:i.kernelCols,statisticsType:i.statisticsType,fill:i.fillNoDataOnly},r={clampRange:i.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.focalStatistics,uniforms:{config:o,focalStatisticsConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}class us extends I{}u([m(b)],us.prototype,"weights",void 0);let cs=class extends M{constructor(){super(...arguments),this.type="GrayscaleShader"}_process(t){const e=this._getPixel(t),{weights:s}=this.grayscaleConfig,i=E(s,e.rgb);return new w(i,i,i,e.a)}};u([m(us)],cs.prototype,"grayscaleConfig",void 0);let gr=class extends V{constructor(){super(...arguments),this.name="RasterGrayscaleProcessor",this.type=k.Grayscale,this.shaders={grayscale:new cs}}_process(t,e){const s={weights:t.rasterFunction.parameters.weights},i=this._getCommonConfig(t,e),a={shader:this.shaders.grayscale,uniforms:{config:i,grayscaleConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:r,context:o}=t;r.submitDrawMesh(o,a,r.quadMesh)}},Ze=class extends M{constructor(){super(...arguments),this.type="HillshadeShader",this.isMultidirectional=!1}_process(t){const{texture:e}=this.config,s=Be(e,t,this.config.srcImageSize),i=Nt(s,this.hillshadeConfig,this.isMultidirectional);return new w(i.rgb.multiply(255),i.a)}};u([v],Ze.prototype,"isMultidirectional",void 0),u([m(H)],Ze.prototype,"hillshadeConfig",void 0);let yr=class extends V{constructor(){super(...arguments),this.name="RasterHillshadeProcessor",this.type=k.Hillshade,this.shaders={hillshade:new Ze}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultidirectional:s.hillshadeType>0},a=e.getRasterCellSize(),r=Zt(s,a),o={...s,factor:r,minValue:0,maxValue:8e3},n=this._getCommonConfig(t,e),l={shader:this.shaders.hillshade,uniforms:{config:n,hillshadeConfig:o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:p}=t;c.submitDrawMesh(p,l,c.quadMesh)}},fr=class extends V{constructor(){super(...arguments),this.name="RasterLocalProcessor",this.type=k.Local,this.shaders={local:new Le}}_process(t,e){var h;const s=t.rasterFunction.parameters,i={constantCount:this._getConstantCount(s.rasters),imageCount:s.imageCount,operationName:s.operationName,isOutputRounded:s.isOutputRounded},a={domainRange:s.domainRange},r=s.operationName==="conditional"?s.rasters:(h=s.rasters)==null?void 0:h.slice(0,2),o=this._getMultipleInputConfig(e,r),n=this._getCommonConfig(t,e),l={shader:this.shaders.local,uniforms:{config:n,domainRangeConfig:a,...o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:p}=t;c.submitDrawMesh(p,l,c.quadMesh)}};class lt extends I{}u([m(X.ofType(d,6))],lt.prototype,"includedRanges",void 0),u([m(X.ofType(d,xe))],lt.prototype,"noDataValues",void 0);let ut=class extends M{constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(t){const e=this._getPixel(t),s=this._computeNoDataFactor(e.r),i=this._computeRangeFactor(e.rgb);let a;if(this.isMultiband){const r=this._computeNoDataFactor(e.g),o=this._computeNoDataFactor(e.b),n=new b(s,r,o).multiply(i);a=n.x.multiply(n.y).multiply(n.z)}else a=s.multiply(i.x);return e.multiply(a)}_computeNoDataFactor(t){const{noDataValues:e}=this.maskConfig;let s=new b(1);for(let i=0;i<xe/3;i++){const a=3*i,r=new b(e[a+0],e[a+1],e[a+2]),o=D(q(r.subtract(t)));s=s.multiply(o)}return s.x.multiply(s.y).multiply(s.z)}_computeRangeFactor(t){const{includedRanges:e}=this.maskConfig,s=new b(e[0],e[2],e[4]),i=new b(e[1],e[3],e[5]);return B(s,t).multiply(B(t,i))}};u([v],ut.prototype,"isMultiband",void 0),u([m(lt)],ut.prototype,"maskConfig",void 0);let wr=class extends V{constructor(){super(...arguments),this.name="RasterMaskProcessor",this.type=k.Mask,this.shaders={mask:new ut}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultiband:s.bandCount>1},a={includedRanges:[...s.includedRanges],noDataValues:[...s.noDataValues]},r=this._getCommonConfig(t,e),o={shader:this.shaders.mask,uniforms:{config:r,maskConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}};class ps extends I{}u([m(_e)],ps.prototype,"bandIndexMat3",void 0);class ct extends M{constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const s=this._getPixel(e),{r:i,g:a}=this.ndviConfig.bandIndexMat3.multiply(s.rgb),r=i.subtract(a),o=i.add(a),n=r.multiply(F(o));if(!this.scaled)return new w(n,n,n,s.a);const l=Y(n.multiply(100).add(100.5));return new w(l,l,l,s.a)}}u([v],ct.prototype,"scaled",void 0),u([m(ps)],ct.prototype,"ndviConfig",void 0);let br=class extends V{constructor(){super(...arguments),this.name="RasterNDVIProcessor",this.type=k.NDVI,this.shaders={ndvi:new ct}}_process(t,e){const s=t.rasterFunction.parameters,i={scaled:s.scaled},a={bandIndexMat3:s.bandIndexMat3},r=this._getCommonConfig(t,e),o={shader:this.shaders.ndvi,uniforms:{config:r,ndviConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}},ge=class extends I{};u([m(X.ofType(d,3*xe))],ge.prototype,"rangeMaps",void 0),u([m(X.ofType(d,2*xe))],ge.prototype,"noDataRanges",void 0),u([m(d)],ge.prototype,"unmatchMask",void 0),u([m(d)],ge.prototype,"replacementValue",void 0),u([m(x)],ge.prototype,"clampRange",void 0);class pt extends M{constructor(){super(...arguments),this.type="RemapShader"}_process(e){const s=this._getPixel(e),{rangeMaps:i,unmatchMask:a,clampRange:r,replacementValue:o}=this.remapConfig,{mapValue:n,includeMask:l}=rr(s.r,i,xe),c=this.replaceUnmatched?o:a.multiply(s.r),p=W(c,n,l),h=N(p,r.x,r.y),y=this._computeNoDataFactor(s.rrr).multiply(ht(a,l));return new w(h,h,h,s.a).multiply(y)}_computeNoDataFactor(e){const{noDataRanges:s}=this.remapConfig;let i=new b(0,0,0);for(let a=0;a<xe/3;a++){const r=6*a,o=new b(s[r],s[r+2],s[r+4]),n=new b(s[r+1],s[r+3],s[r+5]);i=i.add(B(o,e).multiply(B(e,n)))}return be(q(E(i,new b(1,1,1))))}}u([m(ge)],pt.prototype,"remapConfig",void 0),u([v],pt.prototype,"replaceUnmatched",void 0);let xr=class extends V{constructor(){super(...arguments),this.name="RasterRemapProcessor",this.type=k.Remap,this.shaders={remap:new pt}}_process(t,e){const s=t.rasterFunction.parameters,i={replaceUnmatched:s.allowUnmatched&&s.replacementValue!=null},a={rangeMaps:[...s.rangeMaps],noDataRanges:[...s.noDataRanges],unmatchMask:s.allowUnmatched?1:0,replacementValue:s.replacementValue??0,clampRange:s.clampRange},r=this._getCommonConfig(t,e),o={shader:this.shaders.remap,uniforms:{config:r,remapConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}},_r=class extends U{constructor(){super(...arguments),this.type="ReprojectShader"}_colorize(t){return this._getPixel(t)}},vr=class extends V{constructor(){super(...arguments),this.name="RasterReprojectProcessor",this.type=k.Reproject,this.shaders={reproject:new _r}}_process(t,e){const s=t.rasterFunction.parameters,i=this._getInterpolationDefines(e.interpolation,!!s.requireNNEdge),{config:a,projectionConfig:r,projectionDefines:o}=this._getReprojectConfig(e),n={shader:this.shaders.reproject,uniforms:{config:a,projectionConfig:r},defines:{...o,...i,applyPixelMask:!1},optionalAttributes:null,useComputeBuffer:!1},{interpolation:l}=e;e.interpolation="nearest";const{painter:c,context:p}=t;c.submitDrawMesh(p,n,c.quadMesh),e.interpolation=l,e.projected=!0}_getReprojectConfig(t){const{source:e}=t,{names:s,textures:i}=t.getTextures({forProcessing:!0}),a={texture:{texture:i[s.indexOf("u_image")],unit:0},dvsMat3:new Float32Array([2,0,0,0,2,0,-1,-1,0]),coordScale:[1,1],srcImageSize:[e.width,e.height],opacity:1},r=i[s.indexOf("u_transformGrid")],{transformGrid:o}=t,n=!(!r||!o);return{config:a,projectionConfig:n?{transformTexture:{texture:r,unit:1},targetImageSize:[t.width,t.height],transformSpacing:o.spacing,transformGridSize:o.size}:void 0,projectionDefines:{applyProjection:n,lookupProjection:n&&o.spacing[0]===1}}}_getInterpolationDefines(t,e){const s=t==="bilinear"&&e;return{bilinear:s,bicubic:t==="cubic",nearestOnEdge:s}}};class hs extends Ze{constructor(){super(...arguments),this.type="ShadedReliefShader"}_process(e){const s=super._process(e),{minValue:i,maxValue:a}=this.hillshadeConfig,r=this._getPixel(e),o=a.subtract(i),n=r.r.subtract(i),l=N(n.divide(o),new d(0),new d(1)),c=Ve(new w(l,l,l,1),new d(255),this.colormapConfig),p=Et(c.xyz),h=Wt(new b(p.xy,s.x.divide(255))).multiply(255);return new w(h,c.a.multiply(s.a))}}u([m(se)],hs.prototype,"colormapConfig",void 0);class Cr extends V{constructor(){super(...arguments),this.name="RasterShadedReliefProcessor",this.type=k.ShadedRelief,this.shaders={shadedRelief:new hs}}_process(e,s,i){const a=e.rasterFunction.parameters,r={isMultidirectional:a.hillshadeType>0},o=s.getRasterCellSize(),n=Zt(a,o),l={...a,factor:n},c={colormapTexture:{texture:i,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},p=this._getCommonConfig(e,s),h={shader:this.shaders.shadedRelief,uniforms:{config:p,hillshadeConfig:l,colormapConfig:c},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:y,context:g}=e;y.submitDrawMesh(g,h,y.quadMesh)}}let Pe=class extends I{};u([m(d)],Pe.prototype,"pixelSizePower",void 0),u([m(d)],Pe.prototype,"pixelSizeFactor",void 0),u([m(d)],Pe.prototype,"zFactor",void 0),u([m(x)],Pe.prototype,"cellSize",void 0);class qe extends M{constructor(){super(...arguments),this.type="SlopeShader",this.isOutputRounded=!1,this.percentRise=!1}_process(e){const{cellSize:s,pixelSizePower:i,pixelSizeFactor:a,zFactor:r}=this.slopeConfig,o=J(s,new x(i)).multiply(a).add(r).divide(s.multiply(8)),{texture:n}=this.config,l=Be(n,e,this.config.srcImageSize),{x:c,y:p}=gt(l,o),h=K(c.multiply(c).add(p.multiply(p))),y=this.percentRise?h.multiply(100):Ne(h).multiply(57.2957795),g=new w(y,y,y,l[9]);return this.isOutputRounded?ve(g):g}}u([v],qe.prototype,"isOutputRounded",void 0),u([v],qe.prototype,"percentRise",void 0),u([m(Pe)],qe.prototype,"slopeConfig",void 0);let Tr=class extends V{constructor(){super(...arguments),this.name="RasterSlopeProcessor",this.type=k.Slope,this.shaders={slope:new qe}}_process(t,e){const s=t.rasterFunction.parameters,i={isOutputRounded:s.isOutputRounded,percentRise:s.slopeType==="percent-rise"},a={cellSize:e.getRasterCellSize(),pixelSizePower:s.slopeType==="adjusted"?s.pixelSizePower:0,pixelSizeFactor:s.slopeType==="adjusted"?s.pixelSizeFactor:0,zFactor:s.zFactor},r=this._getCommonConfig(t,e),o={shader:this.shaders.slope,uniforms:{config:r,slopeConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=t;n.submitDrawMesh(l,o,n.quadMesh)}};class Ie extends M{constructor(){super(...arguments),this.type="StretchShader",this.isMultiband=!0,this.isOutputRounded=!1,this.useGamma=!1}_process(e){const s=this._getPixel(e);let i=Ht(s,this.stretchConfig,this.useGamma,1);return this.isMultiband||(i=new w(i.rrr,i.a)),this.isOutputRounded?ve(i):i}}u([v],Ie.prototype,"isMultiband",void 0),u([v],Ie.prototype,"isOutputRounded",void 0),u([v],Ie.prototype,"useGamma",void 0),u([m(Q)],Ie.prototype,"stretchConfig",void 0);let Rr=class extends V{constructor(){super(...arguments),this.name="RasterStretchProcessor",this.type=k.Stretch,this.shaders={stretch:new Ie}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultiband:s.bandCount>1,isOutputRounded:s.isOutputRounded,useGamma:s.useGamma},a=this._getCommonConfig(t,e),r={shader:this.shaders.stretch,uniforms:{config:a,stretchConfig:s},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=t;o.submitDrawMesh(n,r,o.quadMesh)}};const Sr=new Map([["Aspect",ir],["BandArithmetic",ar],["ColormapToRGB",or],["CompositeBand",lr],["ComputeChange",ur],["ContrastBrightness",cr],["Convolution",pr],["Curvature",hr],["ExtractBand",dr],["Grayscale",gr],["Hillshade",yr],["Local",fr],["Mask",wr],["NDVI",br],["Remap",xr],["Reproject",vr],["ShadedRelief",Cr],["Slope",Tr],["Statistics",mr],["Stretch",Rr]]);class Pr extends mt{constructor(){super(...arguments),this.type=k.RasterProcessor,this.shaders={},this._techniques=new Map}shutdown(e){var s;super.shutdown(e),(s=this._fbo)==null||s.dispose(),this._fbo=void 0;for(const i of this._techniques.values())i.shutdown();this._techniques.clear()}render(e,s){this._fbo??(this._fbo=Xt(e.context,ce,ce));let{name:i}=e.rasterFunction;if(i==="Arithmetic"&&(i="Local"),!this._techniques.has(i)){const a=Sr.get(i);if(!a)return;this._techniques.set(i,new a)}this._techniques.get(i).render(e,{...s,processorFbo:this._fbo})}}let Ir=class extends Mt{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const e=this._getTileBounds(t),[s,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(t.level);return new Ei(t,a,e[0],e[3],s,i)}onAttach(){super.onAttach(),this._colorizerTechnique=new er,this._processorTechnique=new Pr}onDetach(){var t,e;super.onDetach(),(t=this._colorizerTechnique)==null||t.shutdown(),this._colorizerTechnique=void 0,(e=this._processorTechnique)==null||e.shutdown(),this._processorTechnique=void 0}doRender(t){var i;if(!this.visible||t.drawPhase!==tt.MAP||!this._colorizerTechnique)return;const{rasterFunctionChain:e}=this;if((i=e==null?void 0:e.functions)!=null&&i.length){if(!this._processorTechnique)return;const{functions:a,hasBranches:r}=e;for(const o of a){if(o.name==="Constant"||o.name==="Identity")continue;t.rasterFunction=o,t.hasBranches=r,super.doRender(t);const n=this.children.map(l=>l.bitmap);this._processorTechnique.render(t,{bitmaps:n})}}t.rasterFunction=null,super.doRender(t);const s=this.children.map(a=>a.bitmap);this._colorizerTechnique.render(t,{bitmaps:s})}_getTileBounds(t){const e=this.tileInfoView.getTileBounds(St(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:s}=this.tileInfoView,i=Fs(s.spatialReference);if(i){const a=s.lodAt(t.level);if(!a)return e;const{resolution:r}=a,o=r*s.size[0];e[0]=i*t.world+s.origin.x+t.col*o,e[2]=e[0]+o}}return e}};const zr=[0,0];let O=class extends ys{constructor(){super(...arguments),this._updatingHandles=new zi,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=fs(async(t={})=>{const e=this._rasterFunctionState,s=t.reprocess||e==="gpu"&&!this.canUseWebGLForProcessing||e==="cpu"&&this.canUseWebGLForProcessing;if(s&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const i=this._rasterFunctionState,{type:a}=this;return t.refetch||a!=="raster"&&s||i==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(t.signal))})}destroy(){this._updatingHandles.destroy()}get canUseWebGLForProcessing(){return!1}get canUseLocalSymbolizerParams(){return(this.canUseWebGLForProcessing||this.type==="rasterVF")&&!this.layerView.hasTilingEffects}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(t){this._set("useWebGLForProcessing",t)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(t){if(this._tileStrategy&&this.useProgressiveUpdate!==t){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(t);this._tileStrategy=new xt({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",t),this.layerView.requestUpdate()}}update(t){var r;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume();const{extent:e,resolution:s,scale:i}=t.state,a=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const o=this._srcResolutions[a.level],n="toJSON"in e?e:ws.fromJSON(e);Ct(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,s,o,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((r=this.previousLOD)==null?void 0:r.level)!==a.level&&(this.previousLOD=a,this._symbolizerParams!=null&&this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(t),this.layerView.requestUpdate()}get updating(){var t;return this._globalUpdateRequested||((t=this._updatingHandles)==null?void 0:t.updating)}attach(){const t=Gi();this._maxIndexedColormapSize=4*(t.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new Ws(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Ns({tileInfoView:this._tileInfoView,concurrency:e,process:(i,a)=>this._fetchTile(i,a),priority:Di.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new xt({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,Tt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(t){const e=this.container.createTile(t);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(t){this._fetchQueue.abort(t.key.id),this.container.removeChild(t),t.once("detach",()=>{t.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(t=null){const e=t==null||t.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;t=t||this._tileInfoView.tileInfo.size;const[s,i]=t,a=new Pi({width:s,height:i,pixels:[new Uint8Array(s*i)],mask:new Uint8Array(s*i),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=a),a}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:t,raster:e}=this.layer,s="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return t!=null&&t.length&&(s!=null&&s.length)&&e.rasterInfo.bandCount!==1?t.map(i=>s[Math.min(i,s.length-1)]):"rasterFunction"in e?s:t}updateRasterFunctionParameters(){}_fetchTile(t,e){const s=this._getFetchOptions(t.level,e.signal);return this.fetchTile(t,s)}_getFetchOptions(t,e){var c;const{canUseWebGLForProcessing:s}=this,{layerView:i}=this,{tileInfo:a}=i,r=!a.isWrappable&&Fi(i.view.spatialReference)!=null,o=s&&this.layer.raster.hasUniqueSourceStorageInfo,{layer:n}=this.layerView,l=(c=n.serviceRasterInfo)!=null&&c.storageInfo.isBsqTile?n.bandIds:void 0;return{allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[t],timeExtent:i.timeExtent,tileInfo:a,bandIds:l,disableWrapAround:r}}_getCacheSize(t){return t?40:0}_initializeTileInfo(){const{layerView:t}=this,e=t.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:p}=this.layer.tileInfo,h=p.map(({scale:g})=>g),y=vt.create({spatialReference:e,size:ce,scales:h,origin:c});return t.set("tileInfo",y),void(this._srcResolutions=p.map(({resolution:g})=>({x:g,y:g})))}const{scales:s,srcResolutions:i,isCustomTilingScheme:a}=Vi(this.layer.serviceRasterInfo,e,{tileSize:ce,alignGlobalDatasetWithAGOL:!0}),r=vt.create({spatialReference:e,size:ce,scales:s}),o=r.origin.x===0;bs(t.fullExtent);const{xmin:n,ymax:l}=t.fullExtent;(o||a&&r.origin.x>n)&&(r.origin=new xs({x:n,y:l,spatialReference:e})),this._isCustomTilingScheme=a,t.set("tileInfo",r),this._srcResolutions=i??[]}_canUseLayerLODs(){var a;const{layer:t,layerView:e}=this;if(t.raster.tileType!=="Map")return!1;const{lods:s}=t.tileInfo,i=(a=e.view.constraints)==null?void 0:a.effectiveLODs;return(i==null?void 0:i.length)===s.length&&i.every(({scale:r},o)=>Math.abs(r-s[o].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:t}=this.layer.serviceRasterInfo.storageInfo,e=t[t.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(t,e){var s;if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key),a=this._getBandIds();let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){r=!1;try{await this._redrawImage((s=this._abortController)==null?void 0:s.signal)}catch(l){ze(l)&&ke.getLogger(this).error(l)}this._globalUpdateRequested=!1}this.canUseLocalSymbolizerParams&&this._symbolizerParams==null&&this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(zr,t.key),n=this._tileInfoView.getTileResolution(t.key);await this.updateTileSource(t,{source:i,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:a,coords:o,resolution:n}),t.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(t)}catch(i){ze(i)||ke.getLogger(this).error(i)}this.layerView.requestUpdate()}}async _redrawImage(t){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(t):(this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async s=>this.updateTileSymbolizerParameters(s,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(t){const e=this._getFetchOptions(this.previousLOD.level,t),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!(s!=null&&s.pixelBlock))return;const{resolution:i}=this.previousLOD,a=this._getBandIds(),r=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(a),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:i,y:i},bandIds:a});!this.canUseWebGLForProcessing&&r&&r.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(r.factor=r.factor.map(o=>255*o),r.minOutput=Math.round(255*r.minOutput),r.maxOutput=Math.round(255*r.maxOutput)),this._globalSymbolizerParams=r}_updateSymbolizerParams(){const{resolution:t}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:e})}_updateBlockCacheRegistry(t=!1){var l;const{layer:e,layerView:s}=this,{raster:i}=e,{multidimensionalDefinition:a}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:s.timeExtent}),r=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(a):null,o=i.rasterInfo.storageInfo.isBsqTile&&((l=e.bandIds)!=null&&l.length)?e.bandIds:null,n=ki(i.rasterId,r,o);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&Tt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Mi(n,i.rasterInfo),t){const{view:c}=s,p=this._tileInfoView.getClosestInfoForScale(c.scale),h=this._srcResolutions[p.level];Ct(n,this._blockCacheRegistryId,c.extent,c.resolution,h,i.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const t=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>t.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(t))}};u([C()],O.prototype,"_globalUpdateRequested",void 0),u([C()],O.prototype,"attached",void 0),u([C()],O.prototype,"canUseWebGLForProcessing",null),u([C()],O.prototype,"canUseLocalSymbolizerParams",null),u([C()],O.prototype,"container",void 0),u([C()],O.prototype,"layer",void 0),u([C()],O.prototype,"layerView",void 0),u([C()],O.prototype,"scheduler",void 0),u([C()],O.prototype,"type",void 0),u([C()],O.prototype,"useWebGLForProcessing",null),u([C()],O.prototype,"useProgressiveUpdate",null),u([C()],O.prototype,"timeExtent",void 0),u([C()],O.prototype,"updating",null),O=u([Fe("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],O);let le=class extends O{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){var r;const{loaded:t,symbolizer:e}=this.layer;if(!t||!e)return!1;const s=(r=e.lookup.colormapLut)==null?void 0:r.indexedColormap,i=s&&s.length>this._maxIndexedColormapSize,a=ks(this.layer.serviceRasterInfo);return!(_s("ios")&&a>4)&&this.useWebGLForProcessing&&e.canRenderInWebGL&&!i&&!(this.layer.interpolation==="majority"&&It(this.layer))}attach(){super.attach(),this.container=new Ir(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(t,e){return this.layer.fetchTile(t.level,t.row,t.col,e)}updateRasterFunctionParameters(){var y;const{raster:t,type:e}=this.layer,{container:s}=this;if(t.datasetFormat!=="Function"||e==="wcs")return s.rasterFunctionChain=null,s.children.forEach(g=>{const{bitmap:f}=g;f&&(f.suspended=!0,f.processed=!1,f.projected&&(f.invalidateTexture(),f.rasterTexture=null))}),void(this._rasterFunctionState="na");const i=this._rasterFunctionState,{rasterFunction:a,primaryRasters:r}=t,o=a.supportsGPU&&(!r||r.rasters.length<=1),n=o?a.flatWebGLFunctionChain:null,{renderer:l}=this.layer,c=!o||!(n!=null&&n.functions.length)||(l==null?void 0:l.type)==="raster-stretch"&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;s.rasterFunctionChain=c?null:this._addProjection(n);const p=a==null?"na":s.rasterFunctionChain?"gpu":"cpu",h=i===p||i==="na"&&p==="cpu"&&((y=n==null?void 0:n.functions)==null?void 0:y.length)===0;s.children.forEach(g=>{const{bitmap:f}=g;f&&(f.suspended=!h,f.processed=!1,f.processedTexture=null)}),this._rasterFunctionState=p}async updateTileSource(t,e){const s=this._getBandIds(),i=this._getLayerInterpolation(),{canUseWebGLForProcessing:a}=this,{source:r,globalSymbolizerParams:o,suspended:n,coords:l,resolution:c}=e,p=this.layerView.hasTilingEffects?o:e.symbolizerParams,{bitmap:h}=t;if([h.x,h.y]=l,h.resolution=c,(r==null?void 0:r.pixelBlock)!=null){const g={extent:r.extent,pixelBlock:r.pixelBlock,srcPixelSize:r.srcTilePixelSize};if(h.rawPixelData=g,a)h.source=r.pixelBlock,h.isRendereredSource=!1;else{const f=await this.layer.applyRenderer(g,(o==null?void 0:o.type)==="stretch"?o:void 0);h.source=f,h.isRendereredSource=!0}h.symbolizerParameters=a?p:null,h.transformGrid=a?r.transformGrid:null}else{const g=this.createEmptyTilePixelBlock();h.source=g,h.symbolizerParameters=a?p:null,h.transformGrid=null}h.bandIds=a?s:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=i,h.suspended=n;const{raster:y}=this.layer;if(Pt(y)){const g=y.getClippingGeometry(this.layerView.view.spatialReference);if(g){const f=y.getTileExtentFromTileInfo(t.key.level,t.key.row,t.key.col,this._tileInfoView.tileInfo);h.mask=Ms({srcExtent:f,geometry:g,size:[h.width,h.height]})}}h.invalidateTexture()}async updateTileSymbolizerParameters(t,e){const{local:s,global:i}=e,a=this._getBandIds(),r=this._getLayerInterpolation(),{canUseWebGLForProcessing:o}=this,{bitmap:n}=t,{rawPixelData:l}=n;o||l==null?(n.isRendereredSource&&l!=null&&(n.source=l.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(l,(i==null?void 0:i.type)==="stretch"?i:void 0),n.isRendereredSource=!0),n.symbolizerParameters=o?this.layerView.hasTilingEffects?i:s:null,n.bandIds=o?a:null,n.interpolation=r,n.suspended=!1}_getLayerInterpolation(){const{interpolation:t,renderer:e}=this.layer;if(!e)return t;const s=e.type;return s==="raster-colormap"||s==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}_addProjection(t){var e;return(e=t==null?void 0:t.functions)!=null&&e.length&&!t.hasFocalFunction&&t.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),t}};u([C()],le.prototype,"canUseWebGLForProcessing",null),u([C()],le.prototype,"container",void 0),u([C()],le.prototype,"layer",void 0),u([C()],le.prototype,"type",void 0),le=u([Fe("esri.views.2d.layers.imagery.ImageryTileView2D")],le);class kr extends kt{constructor(e,s,i,a,r,o,n=null){super(e,s,i,a,r,o),this.tileData=new Is(n),this.tileData.coordScale=[r,o],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:Me(),tileMat3:Me()}}setTransform(e){super.setTransform(e);const s=this.resolution/(e.resolution*e.pixelRatio),i=this.transforms.tileMat3,[a,r]=this.tileData.offset,o=[this.x+a*this.resolution,this.y-r*this.resolution],[n,l]=e.toScreenNoRotation([0,0],o),{symbolTileSize:c}=this.tileData.symbolizerParameters,p=Math.round((this.width-this.tileData.offset[0])/c)*c,h=Math.round((this.height-this.tileData.offset[1])/c)*c,y=p/this.rangeX*s,g=h/this.rangeY*s;Vs(i,y,0,0,0,g,0,n,l,1),zt(this.transforms.displayViewScreenMat3,e.displayViewMat3,i),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Mr extends Mt{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const s=this.tileInfoView.getTileBounds(St(),e),[i,a]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(e.level);return new kr(e,r,s[0],s[3],i,a)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Ps],target:()=>this.children.map(i=>i.tileData),drawPhase:tt.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===tt.MAP&&this.symbolTypes.forEach(s=>{e.renderPass=s,super.doRender(e)})}}let ye=class extends O{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}async fetchTile(t,e){var i;e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(t.level,t.row,t.col,e);return((i=this.layer.serviceRasterInfo)==null?void 0:i.dataType)==="vector-magdir"&&(s!=null&&s.pixelBlock)&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,"vector-magdir",e)),s}updateTileSource(t,e){const s=e.symbolizerParams,{tileData:i}=t;i.key=t.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:a}=s,{source:r}=e;if(i.offset=this._getTileSymbolOffset(i.key,a),(r==null?void 0:r.pixelBlock)!=null){const o={extent:r.extent,pixelBlock:r.pixelBlock};i.rawPixelData=o,i.symbolizerParameters=s,i.source=this._sampleVectorFieldData(r.pixelBlock,s,i.offset)}else{const o=[Math.round((this._tileInfoView.tileInfo.size[0]-i.offset[0])/a),Math.round((this._tileInfoView.tileInfo.size[1]-i.offset[1])/a)],n=this.createEmptyTilePixelBlock(o);i.source=n,i.symbolizerParameters=s}return i.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(t,e){var n;const s=e.local,{symbolTileSize:i}=s,{tileData:a}=t;a.offset=this._getTileSymbolOffset(a.key,i);const r=a.symbolizerParameters.symbolTileSize;a.symbolizerParameters=s;const o=(n=a.rawPixelData)==null?void 0:n.pixelBlock;return o!=null&&r!==i&&(a.source=this._sampleVectorFieldData(o,a.symbolizerParameters,a.offset)),Promise.resolve()}attach(){super.attach(),this.container=new Mr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Ae(()=>this.layer.renderer,t=>this._updateSymbolType(t))}detach(){var t;super.detach(),this.container.removeAllChildren(),(t=this._handle)==null||t.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(t,e){const s=t.col*this._tileInfoView.tileInfo.size[0]%e,i=t.row*this._tileInfoView.tileInfo.size[1]%e;return[s>e/2?e-s:-s,i>e/2?e-i:-i]}_sampleVectorFieldData(t,e,s){const{symbolTileSize:i}=e;return Ii(t,"vector-uv",i,s)}_updateSymbolType(t){(t==null?void 0:t.type)==="vector-field"&&(this.container.symbolTypes=t.style==="wind-barb"?["scalar","triangle"]:t.style==="simple-scalar"?["scalar"]:["triangle"])}};u([C()],ye.prototype,"container",void 0),u([C()],ye.prototype,"layer",void 0),u([C()],ye.prototype,"type",void 0),ye=u([Fe("esri.views.2d.layers.imagery.VectorFieldTileView2D")],ye);const Fr=t=>{let e=class extends t{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){var s;return Ai(this.layer,(s=this.view)==null?void 0:s.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?Bi(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(s){try{return!this.layer.loaded||!!Rt(this.layer.serviceRasterInfo,s)}catch{return!1}}async fetchPopupFeaturesAtLocation(s,i){var y,g;const{layer:a}=this;if(!s)throw new vs("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:r}=a,o=Ui(a,i);if(!r||o==null)return[];const n=[],{value:l,magdirValue:c,processedValue:p}=await a.identify(s,{timeExtent:this.timeExtent,signal:i==null?void 0:i.signal});let h="";if(l!=null&&l.length){h=a.type==="imagery-tile"&&a.hasStandardTime()&&l[0]!=null?l.map(Z=>a.getStandardTimeValue(Z)).join(", "):l.join(", ");const f={ObjectId:0};f[Ce.servicePixelValue]=a.type==="imagery-tile"&&Pt(a.raster)?p==null?void 0:p.join(", "):h,f[Ce.rawServicePixelValue]=h;const _=((y=a.raster)==null?void 0:y.rasterInfo)??a.serviceRasterInfo,R=_==null?void 0:_.attributeTable;if(R!=null){const{fields:Z,features:He}=R,wt=Z.find(({name:re})=>re.toLowerCase()==="value"),ds=f[Ce.servicePixelValue],Oe=wt?He.find(re=>String(re.attributes[wt.name])===ds):null;if(Oe)for(const re in Oe.attributes)Oe.attributes.hasOwnProperty(re)&&(f[Ts+re]=Oe.attributes[re])}const z=_==null?void 0:_.dataType;z!=="vector-magdir"&&z!=="vector-uv"||(f[Ce.magnitude]=c==null?void 0:c[0],f[Ce.direction]=c==null?void 0:c[1]);const{multidimensionalDefinition:S}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});Rs(a.rasterFields,f,S);const j=new Cs({geometry:(g=this.fullExtent)==null?void 0:g.clone(),attributes:f,layer:a,sourceLayer:a});n.push(j)}return n}async getSourceScale(){return await this.layer.load(),Oi(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return Rt(this.layer.serviceRasterInfo,this.view.spatialReference)}};return u([C()],e.prototype,"fullExtent",null),u([C()],e.prototype,"layer",void 0),u([C({readOnly:!0})],e.prototype,"timeExtent",null),u([C()],e.prototype,"tileInfo",void 0),u([C({readOnly:!0})],e.prototype,"hasTilingEffects",null),u([C()],e.prototype,"datumTransformation",null),e=u([Fe("esri.views.layers.ImageryTileLayerView")],e),e};let ue=class extends Fr(ji(zs(Li))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(t){this._useWebGLForProcessing=t,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=t)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(t){this._useProgressiveUpdate=t,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=t)}get displayParameters(){const{layer:t}=this,e=this._get("displayParameters");return t.renderer&&t.visible?{bandIds:t.bandIds,renderer:t.renderer,interpolation:t.interpolation,multidimensionalDefinition:t.multidimensionalDefinition,rasterFunction:t.type==="imagery-tile"?t.rasterFunction:null}:e}update(t){var e;(e=this.subview)==null||e.update(t),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([Ae(()=>this.displayParameters,(t,e)=>{var c,p,h,y;const s=t.interpolation!==(e==null?void 0:e.interpolation)&&(t.interpolation==="majority"||(e==null?void 0:e.interpolation)==="majority")&&It(this.layer),i=!!((p=(c=this.layer.serviceRasterInfo)==null?void 0:c.storageInfo)!=null&&p.isBsqTile)&&((h=t.bandIds)==null?void 0:h.join())!==((y=e==null?void 0:e.bandIds)==null?void 0:y.join()),a=t.renderer!==(e==null?void 0:e.renderer)&&this._getSubviewType(e==null?void 0:e.renderer)!==this._getSubviewType(t.renderer);a&&this._updateSubview();const r=t.multidimensionalDefinition!==(e==null?void 0:e.multidimensionalDefinition),o=t.rasterFunction!==(e==null?void 0:e.rasterFunction),n=o&&!this._useWebGLForProcessing,l=r||s||a||n||i;this.subview.redrawOrRefetch({refetch:l,reprocess:o}).catch(g=>{ze(g)||ke.getLogger(this).error(g)}),this.notifyChange("updating")}),Ae(()=>this.layer.multidimensionalSubset??null,(t,e)=>{const{multidimensionalDefinition:s}=this.layer;s!=null&&bt(s,t)!==bt(s,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(i=>{ze(i)||ke.getLogger(this).error(i)}),this.notifyChange("updating"))},ms),Ae(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(t=>{ze(t)||ke.getLogger(this).error(t)})},gs)])}detach(){var t;this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){var a;const{renderer:t}=this.layer;if(!t)return;const e=this._getSubviewType(t);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(a=this.subview)==null||a.destroy(),this.subview=null}const{layer:s}=this;let i;if(i=e==="rasterVF"?new ye({layer:s,layerView:this,scheduler:this.scheduler}):e==="flow"?new Ss({layer:s,layerView:this,scheduler:this.scheduler}):new le({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i){const{subview:r}=this;i.previousLOD=r&&"previousLOD"in r?r.previousLOD:null}this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}_getSubviewType(t){const e=t==null?void 0:t.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};u([C()],ue.prototype,"subview",void 0),u([C()],ue.prototype,"useWebGLForProcessing",null),u([C()],ue.prototype,"useProgressiveUpdate",null),u([C({readOnly:!0})],ue.prototype,"displayParameters",null),ue=u([Fe("esri.views.2d.layers.ImageryTileLayerView2D")],ue);const jo=ue;export{jo as default};
