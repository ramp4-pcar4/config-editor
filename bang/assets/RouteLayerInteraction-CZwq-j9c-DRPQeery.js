import{ac as b,a1 as d,a2 as w,lz as k,ak as g,v as p,S as c,n as _}from"./index-DRDU_nTl.js";import{i as v}from"./UpdatingHandles-Bd2FQ26N-CvefNm7m.js";import f from"./GraphicsLayer-BiEC2-gS-CmDrjRCP.js";import{b as B,h as M,u as S,s as V}from"./Stop-BdaAbrQ2-wWroFENs.js";import{E as L}from"./SketchViewModel-B0qFHK0t-CV5B7V3w.js";import"./GraphicsCollection-uWAVmks7-DTcnCn7t.js";import"./Layer-DvVVmz9x-KWeeum0v.js";import"./TimeExtent-Cf2Pienb-B-fbcJgZ.js";import"./BlendLayer-DjW_5k0v-B-iv8FvS.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-Bs5cxcDn.js";import"./parser-CWccHtwJ-8TX6iggd.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DudBwkox.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ScaleRangeLayer-x42fwED3-_jUPFtou.js";import"./ElevationInfo-DE5to86a-BmmpBl1B.js";import"./lengthUtils-C61nRlXw-ttxBda7R.js";import"./networkEnums-DHCOt6o_-VQMMPcgJ.js";import"./projectionUtils-B-CplN3q-B7QPK1Xx.js";import"./elevationInfoUtils-Ccn2Wfoe-BOQP6U4t.js";import"./editableLayers-DFUBlMJy-RfZacUvm.js";import"./utils-Dd8gTonD-CbyytSu2.js";import"./Queue-DV3gpSdl-BBj5GUvp.js";import"./Version-CnwD6MZa-bAZgKPIl.js";import"./Cyclical-DgD7_U1C-DW5Gd-GL.js";import"./quantityUtils-B1Ov7DZK-BZZNLW5X.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec32-Cj8pVsU0-DklfJOsw.js";import"./projectVectorToVector-DcyiGOWJ-BlW1hJxB.js";import"./projectPointToVector-BZJhoF_5-BgraziZx.js";import"./geodesicUtils-DKS2UG72-BeLlhs-V.js";import"./asyncUtils-BPUlNCrX-B0y5b9rY.js";import"./Query-n1aoaaFC-BPSxItRE.js";import"./Field-BIQ-quF4-D9klJRUl.js";import"./fieldType-PhcL4ff8-mKwAUt_F.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./plane-Cf3Koz3c-vg3LHRKP.js";import"./vectorStacks-5ZZtmT9E-sM-Ke9dk.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./sphere-zPMQWhGG-DMKyrtm8.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./geodeticLengthOperator-DHGBHzf3-D6koT1yu.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-an25mZpf.js";import"./lineSegment-BAWQVP9P-BUURTzys.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-CSt5Xbmv.js";function y(e,r){e.networkFeature=r}function F(e){const r=l(e.graphic);return{...e,networkFeature:r}}function G(e){const r=e.graphics.map(o=>l(o));return{...e,networkFeatures:r}}function l(e){return e.networkFeature}function N(e){return(e==null?void 0:e.type)==="point"||(e==null?void 0:e.type)==="polyline"||(e==null?void 0:e.type)==="polygon"}let s=class extends b{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new f({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new v,this.enabled=!0,this._handleSketchViewModelEvents=async r=>{var o,a;switch(r.type){case"update":switch(r.state){case"active":case"complete":for(const t of r.graphics)l(t).geometry=N(t.geometry)?t.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const t of r.graphics){const n=l(t);this._removeNetworkFeature(n)}break;case"create":if(r.graphic&&r.state==="complete"&&this._createMode){const t=(o=r.graphic.geometry)==null?void 0:o.clone(),n=(a=r.graphic.symbol)==null?void 0:a.clone();if(!t)break;switch(this._createMode){case"stop":{if(t.type!=="point")break;const{stops:i}=this.layer;if(i.length>0&&i.every(({geometry:h})=>!h)){i.at(0).geometry=t;break}if(i.length>1&&i.filter((h,u)=>u!==0).every(({geometry:h})=>!h)){i.at(1).geometry=t;break}const m=new V({geometry:t});i.add(m),y(r.graphic,m);break}case"point-barrier":{if(t.type!=="point")break;const i=new S({geometry:t,symbol:n});this.layer.pointBarriers.add(i),y(r.graphic,i);break}case"polyline-barrier":{if(t.type!=="polyline")break;const i=new M({geometry:t,symbol:n});this.layer.polylineBarriers.add(i),y(r.graphic,i);break}case"polygon-barrier":{if(t.type!=="polygon")break;const i=new B({geometry:t,symbol:n});this.layer.polygonBarriers.add(i),y(r.graphic,i);break}}}}(await this.view.whenLayerView(this.layer)).emit(r.type,r.type==="create"?F(r):G(r))}}initialize(){this._sketchViewModel=new L({layer:this._graphicsLayer,view:this.view}),this.addHandles([d(()=>this.enabled,e=>{e?this._activate():this._deactivate()},w),d(()=>{const{stops:e,pointBarriers:r,polylineBarriers:o,polygonBarriers:a}=this.layer;return{stops:e,pointBarriers:r,polylineBarriers:o,polygonBarriers:a}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),k(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=g(this._graphicsLayer),this._sketchViewModel=g(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(e=>l(e))}get updating(){return this._updatingHandles.updating}create(e){var r;switch(this._createMode=e,e){case"stop":(r=this.layer.defaultSymbols.stops)!=null&&r.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const r=this._graphicsLayer.graphics.find(o=>l(o)===e);r&&this._graphicsLayer.remove(r),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){var e;this._sketchViewModel.cancel(),(e=this.view.map)==null||e.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(r=>r.toArray().map(o=>{const a=o.toGraphic();return a.networkFeature=o,a}));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};p([c()],s.prototype,"enabled",void 0),p([c({constructOnly:!0})],s.prototype,"layer",void 0),p([c({readOnly:!0})],s.prototype,"selectedNetworkFeatures",null),p([c()],s.prototype,"updating",null),p([c({constructOnly:!0})],s.prototype,"view",void 0),s=p([_("esri.views.2d.layers.support.RouteLayerInteraction")],s);export{s as RouteLayerInteraction};
