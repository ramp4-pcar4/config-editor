import{aD as g,ap as w,aM as l,d5 as y,a6 as I,v as n,S as f,n as T}from"./index-CQ8-0QQp.js";import{o as V}from"./GraphicsCollection-uWAVmks7-DZTgsLMB.js";import"./colorUtils-Eg6lOlXm-7UV7YEXV.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./floatRGBA-DRFmbkvz-DfeZyJQq.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./UpdateTracking2D-GEad80KZ-CfnXxtsL.js";import"./GeometryUtils-B8e3Iwyx-BftZgfY6.js";import"./CIMSymbolHelper-34UsTwam-Ch--OD_s.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./OverrideHelper-DgyARgwI-PDmAzQ2V.js";import"./EffectView-Bpu5U548-BPRWRXI3.js";import"./Container-Dr2EdOEZ-C2Q6gnmv.js";import{k as H,a as v,U as C}from"./enums-CQnCd4Rx-DgRIovtR.js";import"./WGLContainer-qQmF3DRB-DZ4wYbOe.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./Texture-D5XWO2GQ-DRXXGeMw.js";import"./Utils-Co3xiu1z-B-PRl040.js";import"./MapView-DVZSZHRJ-BWPsYTmX.js";import"./StyleDefinition-BOKVAZI1-DGWlgUVE.js";import"./constants-BgwgMQXd-By4voKYl.js";import"./GridShader-DnwGuLhq-CFVdasdd.js";import"./pbf-hoLeQyp2-K8z08ScL.js";import"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import"./FramebufferObject-D3QloItC-DZsNfhcJ.js";import"./FeatureCommandQueue-C2MKcQFq-Bjvotzqd.js";import"./PieChartMeshWriter-C17AlSWx-CePt0fl5.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./TimeOnly-CGkId3bj-JDOpcZSO.js";import"./UnknownTimeZone-DxjyzFvs-Bj2Ovyjw.js";import"./renderState-BM-MCKUz-CkGIEsl7.js";import"./glsl-Z5uYj8ka-BRgh2Cgo.js";import"./testSVGPremultipliedAlpha-silsadBl-ed8gbonV.js";import{b as U}from"./GraphicsView2D-D4hKcKkn-DDrqJk1v.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./normalizeUtilsCommon-ClagynAA-C1rBYP54.js";import"./asyncUtils-BPUlNCrX-C7s4Eh4u.js";import"./UpdatingHandles-Bd2FQ26N-C9WmxyOD.js";import"./projectionUtils-B-CplN3q-DW663dnS.js";import{F as q,u as m,S as d}from"./imageUtils-BkF1paOz-DmrxAYB-.js";import{G as S}from"./LayerView2D-BaefGYf9-Mm8jTcLy.js";import{s as b}from"./HighlightGraphicContainer-yIQjvQv5-Bl84ktPI.js";import{s as _}from"./TileKey-_zikB14n-C-4kO8eC.js";import{t as G}from"./LayerView-DdANuT-Y-D5ToDM5t.js";import{o as Q}from"./RefreshableLayerView-CqFW21Do-kN1Y9VUs.js";import{T as P,O as k,P as L}from"./MapServiceLayerViewHelper-BFEkAhCr-B1rujiRX.js";import{x as F}from"./drapedUtils-DARF9dbf-DqnXkkZI.js";import{d as W}from"./utils-Dd8gTonD-Bmstp3bu.js";import{r as x}from"./Scheduler-BV4C4cVP-CBy-rr-e.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./ReactiveMap-iPeM8evD-CNyf_XEr.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-DMSXfgA3.js";import"./OptimizedGeometry-pzfNw1AT-Ckm1nrtQ.js";import"./memoryEstimations-DeWfxwaV-D8kkh29b.js";import"./utils-BfXZnjCE-CopoHYAx.js";import"./rasterizingUtils-1wASRzSP-DxFaW1Ru.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./FieldsIndex-Bt0Y8aWr-Dy7qhi0q.js";import"./timeZoneUtils-d5p0Jda1-CK3w7ysb.js";import"./ArcadeExpression-XjY3x7KV-BmzhFoaj.js";import"./callExpressionWithFeature-Bk8k1lJI-tiLb6kma.js";import"./quantizationUtils-D907S7Bm-GtM-hh0K.js";import"./enum-g1DWyQyu-Ak-qLf19.js";import"./parser-CWccHtwJ-CeF_pdxX.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-_RgowJk9.js";import"./Queue-DV3gpSdl-n6S4F6IF.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./Query-n1aoaaFC-CzM-0Osn.js";import"./Field-BIQ-quF4-kqmmAHwF.js";import"./fieldType-PhcL4ff8-X0HNaUrC.js";import"./TimeExtent-Cf2Pienb-Yfjpk5DQ.js";import"./ProgramTemplate-C4wmhGXE-BXAXJHLK.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./VertexArrayObject-CieliEx4-D3vFIhaw.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec32-Cj8pVsU0-Zd1nuWax.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./featureConversionUtils-Bjjlcfdo-CpGOkH2T.js";import"./OptimizedFeature-mIz_HhJg-BomJ3mxO.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./Cyclical-DgD7_U1C-Cid2rFMP.js";import"./CollectionFlattener-DyEG1Q6J-BIPxG7ll.js";import"./workers-CeRXsnNJ-N8jhRv1L.js";import"./intl-BAA1onnp-CmgFU7qQ.js";import"./TileInfo-U28GysF5-CarTsF4H.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-CUIB-Lcq.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./Map-7V1pm_Jo-2_txnp9J.js";import"./Basemap-C_NhFN5u-B_-Y7ek_.js";import"./loadAll-DQWsVoX1-YltGOOVs.js";import"./PortalItem-BP-IQXnZ-BVF3QtiG.js";import"./writeUtils-DAOvycBP-CK8XAc9H.js";import"./persistable-DgPk2hdg-DsAgw-2q.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-BCI848xw.js";import"./PolygonCollection-Btw6sA7T-BB60BqoQ.js";import"./editableLayers-DFUBlMJy-CU9B0Bi-.js";import"./TablesMixin-BORwbVPt-BbmBmJd4.js";import"./Layer-DvVVmz9x--HAWlOUX.js";import"./HeightModelInfo-C4voFc4k-JlexhaZp.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-CzyV0bKh.js";import"./projectionUtils-Dt6hj1Xh-BZpp-Km9.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./normalizeUtils-u00NGW3M-Cj_eBFoN.js";import"./utils-BO8hgPs3-DAcioTpx.js";import"./utils-DpLVEUvg-WAf4cKk5.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-D3tfFRL_-Dq8cPdlp.js";import"./capabilities-BaKzUyhi-B84We26i.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-DrLsdHgz.js";import"./Version-CnwD6MZa-BnQab16p.js";import"./debugFlags-8tOwPnHK-CtShftaq.js";import"./GraphShaderModule-Baq-N_YO-DU-1ZU8S.js";import"./ShaderBuilder-CU5v4tk1-BUH-Kkrb.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./utils-OrDMNKn4-Cqmpo4m0.js";import"./CircularArray-DaQg3PQl-BXS52LZy.js";import"./SymbolFader-R3zz-rtA-JGfj55Ek.js";import"./lengthUtils-C61nRlXw-C-u5HD5x.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-C4Iz1QYE.js";import"./libtess-C6mGekL8-BTy5rVD7.js";import"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";import"./AttributeStore-Oa0mwyTc-egoFc2TY.js";import"./labelUtils-Oapo6DRu-Dhl_kaoD.js";import"./diffUtils-BxG8DCnW-B0jtYcuY.js";import"./queryUtils-DZy8hWx3-BdCCngVM.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-DHvCszUH.js";import"./normalizeUtilsSync-DslYq1HB-Cf__piAB.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./dehydratedFeatures-CE8L86IW-DLhDldrB.js";import"./BitmapTechnique-CHUhq2KJ-CmAiUftq.js";import"./bitmapUtils-CAdCGIbP-MrMyqMub.js";import"./TileContainer-CAC1uSjc-Cn7xaxoy.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-DLIaYA64-C1LoqlpV.js";import"./AGraphicContainer-DtNijdEa-BmhudeiA.js";import"./TechniqueInstance-CwLUZ8IR-_Bdy5JSl.js";import"./scaleUtils-Br-smv3A-BbNlrp6M.js";import"./floorFilterUtils-4r-vVdzs-u-jw2p7F.js";import"./sublayerUtils-DUalPlkE-B3bmEHh3.js";import"./popupUtils-B9dNptlM-CAnD2elT.js";const z=[0,0];let s=class extends Q(q(S(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:x.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,o)=>F(r,o,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:r,property:o})=>e.graphicUpdateHandler({graphic:r,property:o}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=L(t);if(e.length===0)return g();const r=(i==null?void 0:i.name)??W;return this._addHighlightGraphics(e,r),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return w((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(z,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(o){if(l(o))throw o;if(!this.resampling)return m(this._tileInfoView.tileInfo.size);if(r<3){const h=this._tileInfoView.getTileParentId(t.id);if(h){const p=new _(h),a=await this._fetchTileWithoutTilemapCache(p,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,p,t)}}return m(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:o=0}=i,h=new _(0,0,0,0);let p,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,h,{signal:r}),!this.resampling&&h.level!==t.level)return await y(i),m(this._tileInfoView.tileInfo.size);p=await this._fetchImage(h,r)}catch(c){if(l(c))throw c;if(this.resampling&&a==="unknown"&&o<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){h.set(u);try{p=await this._fetchTileWithTilemapCache(h,{...i,resamplingLevel:o+1})}catch{}}}}return p?this.resampling?d(this._tileInfoView,p,h,t):p:m(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],s.prototype,"resampling",null),n([f()],s.prototype,"tilemapCache",null),s=n([T("esri.views.2d.layers.TileLayerView2D")],s);const Ee=s;export{Ee as default};
