const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-DHYzIRVX-tya_JN7S.js","./utils-DyDDSDvN-CXjxoIS8.js","./index-1o7Uo5_u.js","./index-CyocM74Y.css","./originUtils-BLsWtgV9-CGkwp8uO.js","./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js","./PortalItem-BP-IQXnZ-BgLaZTp-.js","./jsonContext-C9WBVzLb-BnUu4g2-.js","./portalItemUtils-BfWDJg-S-hGo01CtV.js","./projectionUtils-B-CplN3q-D6LxMKAS.js","./saveUtils-W0sSii7v-Bxc11gev.js","./datasetUtils-DYlC2Qty-BmOVAuGo.js","./Field-BIQ-quF4-X7Arem4z.js","./fieldType-PhcL4ff8-C5l4Xhbr.js"])))=>i.map(i=>d[i]);
import{v as s,S as o,F as N,n as b,x as ye,X as P,l as E,ar as se,bh as ke,aA as Mt,br as be,bs as ot,bt as lt,R as W,w as $,bu as ie,$ as oe,bf as Ht,bv as kt,_ as Wt,t as Zt,h as F,bw as Kt,q,Z as ft,o as ze,M as Xt,a6 as ct,bx as Yt,N as D,by as vt,aF as V,a1 as ei,ba as ti,bz as ii,E as ri}from"./index-1o7Uo5_u.js";import{w as si}from"./MultiOriginJSONSupport-BqiFJbbt-CCS4L-FE.js";import{e as ni}from"./Layer-DvVVmz9x-DPmiazsV.js";import{u as ai,a as oi,r as li,T as ui,i as pi}from"./OperationalLayer-CbXUnTH0-C_BIXjgc.js";import{l as mi,y as Ne,g as ci,K as di,_ as yi,X as hi,e as gi,n as fi,t as vi,i as Ri,a as wi,c as dt,f as bi,v as Si,b as xi,I as Ii,r as Fi,F as Di}from"./datasetUtils-DYlC2Qty-BmOVAuGo.js";import{d as te,g as T,s as Ti,V as Ni,S as Pi,T as ji,a as Ci,_ as Oi,O as _i,r as Mi,W as Ai,n as Vi,D as qi,b as Ei,N as Ji}from"./RasterJobHandlerMixin-DESVihMQ-35jhNCid.js";import{N as Gi}from"./pixelRangeUtils-DcEknavd-CueOHV1N.js";import{B as Be,V as Qe,U as Pe,Z as At,Y as Vt,a as qt,b as Li,c as Ui,K as $i,k as zi,d as Pt,e as Bi,Q as Qi}from"./RasterSymbolizer-BN6RVtx9-CACsJYHQ.js";import{l as Hi}from"./commonProperties-CJLeiNuA-B57nEdDs.js";import{m as ki}from"./Field-BIQ-quF4-X7Arem4z.js";import{o as Wi}from"./FieldsIndex-Bt0Y8aWr-kDDZWN53.js";import{i as jt}from"./imageBitmapUtils-wCApjb1B-B42LQECu.js";import{V as yt,w as Zi}from"./dataUtils-CfR0oe2x-CIuimT25.js";import{B as je}from"./normalizeUtils-u00NGW3M-CuGOcFat.js";import{m as L,f as z,d as B}from"./utils-BO8hgPs3-BIQC0bAi.js";import{s as Ki,R as ht}from"./Query-n1aoaaFC-DhJp6MZC.js";import{l as Et}from"./TimeExtent-Cf2Pienb-Cf2x6jj_.js";import{c as Jt}from"./FeatureSet-BVGGhhH9--3F1wfTn.js";import{n as Xi,i as Ct,s as Yi,r as er}from"./RasterPresetRendererMixin-CdHfKJ2u-DGZ47lu8.js";import{e as tr,m as ir}from"./executeForIds-CRDS8hwo-C3isU4AN.js";import{d as rr}from"./executeQueryJSON-D8fHgTZN-DSjmgrGJ.js";import{a as sr}from"./ArcGISService-B6M5rzsr-D51W3xAF.js";import{u as nr}from"./BlendLayer-DjW_5k0v-DgxuS404.js";import{i as ar}from"./CustomParametersMixin-CSMgHDaw-ClcOy8Rh.js";import{x as or}from"./PortalLayer-B34ZUA2x-CZImSeF1.js";import{T as lr}from"./RefreshableLayer-Qpvyi8qY-BFGD8tAl.js";import{S as ur}from"./ScaleRangeLayer-x42fwED3-c1Sh0jcs.js";import{x as pr}from"./TemporalLayer-lQRje9wB-3BARggL9.js";import{a as mr}from"./versionUtils-BwTR8Ufq-DCUicLXf.js";import{y as cr}from"./popupUtils-B99PyAFi-DLRstfP1.js";import{E as Ke}from"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DE5to86a-DfRaXhJc.js";import"./lengthUtils-C61nRlXw-BPUb7D8_.js";import"./ClassBreaksRenderer-Bq2XGpfI-BGIOPrke.js";import"./RendererLegendOptions-Bil_IDab-CO-qzgzx.js";import"./UniqueValueRenderer-CLXHFtg9-B-2_86Aj.js";import"./diffUtils-BxG8DCnW-BP8PIZl7.js";import"./styleUtils-DBPDLVBX-C-OU7vt2.js";import"./workers-CeRXsnNJ-DvG5AvTn.js";import"./Queue-DV3gpSdl-CaOyhJy3.js";import"./intl-BAA1onnp-CqFGGOQF.js";import"./colorRamps-trM-CPFS-CxTICjQY.js";import"./visualVariableUtils-BTS148WR-DrdlS1qy.js";import"./utils-Cb2uXNfG-N4lwuwOV.js";import"./asyncUtils-BPUlNCrX-CkkepdUd.js";import"./jsonUtils-BwLwuQj7-BLDGVziL.js";import"./parser-CWccHtwJ-CpOFcNhd.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-C2pUVsZe.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./cimSymbolUtils-DCedSSCN-CkIAwps7.js";import"./utils-BfXZnjCE-KKs7VQT0.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./ColorStop-CL7v3R-A-HwkvGV7I.js";import"./ClassBreaksDefinition-BZ4FJdWb-CnX9g6KV.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./colorUtils-Eg6lOlXm-Cbeg6A4h.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./fieldType-PhcL4ff8-C5l4Xhbr.js";import"./UnknownTimeZone-DxjyzFvs-_hTnE99V.js";import"./timeZoneUtils-d5p0Jda1-DOnF-q59.js";import"./normalizeUtilsCommon-ClagynAA-Tfm8XoVn.js";import"./utils-DpLVEUvg-CaXyb1MK.js";import"./query-COAsogFA-BtTtV_Pk.js";import"./pbfQueryUtils-aBcHX3TJ-Dqcg77UE.js";import"./pbf-hoLeQyp2-HcRAOC-g.js";import"./memoryEstimations-DeWfxwaV-BkHZOUz_.js";import"./OptimizedGeometry-pzfNw1AT-xA5ExCXo.js";import"./OptimizedFeature-mIz_HhJg-C57oCGL9.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-DAAMSYUp.js";import"./projectionUtils-B-CplN3q-D6LxMKAS.js";import"./PortalItem-BP-IQXnZ-BgLaZTp-.js";import"./portalItemUtils-BfWDJg-S-hGo01CtV.js";import"./TimeInfo-COHxjenm-GdqtjLsW.js";const dr={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},yr=new Set(["u1","u2","u4","u8","s8","u16","s16"]),hr={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},gr=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Gt(r){return gr.has(r.type)}function Rt(r,i){var e;if(!r||!i)return q(r||i);const a=q(r);if(a.functionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),Lt(a.functionDefinition.arguments,i),a.rasterFunctionDefinition=a.functionDefinition.toJSON()}else((e=i.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Ut(a.functionArguments).Raster=i);return a}function Lt(r,i){for(const a in r)a.toLowerCase()==="raster"&&(r[a].type==="RasterFunctionVariable"?(r[a]=i.rasterFunctionDefinition,r[a].type="RasterFunctionTemplate"):r[a].type==="RasterFunctionTemplate"&&Lt(r[a].arguments,i))}function ne(r){const i=q(dr[r.functionName+"Function"]),a=r.functionArguments;for(const e in a)e.toLowerCase()==="raster"?(i.arguments[e]=ne(a[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=Ir(a[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=a[e];return i}function fr(r,i){switch(i=i||{},r.type){case"raster-stretch":return wr(r,i);case"class-breaks":return br(r,i);case"unique-value":return Sr(r,i);case"raster-colormap":return xr(r,i);case"vector-field":return vr(r,i);case"raster-shaded-relief":return Rr(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function Ut(r){const i=(r==null?void 0:r.Raster)??(r==null?void 0:r.raster);return i&&i.declaredClass==="esri.layers.support.RasterFunction"?Ut(i.functionArguments):r}const Je={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function vr(r,i){const a=new T;a.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=i,n=e==="vector-uv";let l,u;if(t&&t.length===2){const g=t.map(f=>f.toLowerCase());l=g.indexOf("magnitude"),u=g.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const m=r.rotationType==="arithmetic"?1:2,c=r.flowRepresentation==="flow-from"?0:1,p=r.visualVariables?r.visualVariables.find(g=>g.field==="Magnitude"):new Hi,d={magnitudeBandID:l,directionBandID:u,isUVComponents:n,referenceSystem:m,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:hr[r.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};a.functionArguments=d;const y=ne(a);return i.convertToRFT?T.fromJSON({rasterFunctionDefinition:y}):a}function Rr(r,i){const a=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new T;const e=new T;e.functionName="Hillshade";const t=r.hillshadeType==="traditional"?0:1,n=r.scalingType==="none"?1:3,l={HillshadeType:t,SlopeType:n,ZFactor:r.zFactor};return t===0&&(l.Azimuth=r.azimuth,l.Altitude=r.altitude),n===3&&(l.PSPower=r.pixelSizePower,l.PSZFactor=r.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",r.colorRamp&&(e.functionName="ShadedRelief",a?l.ColorRamp=Vt(r.colorRamp):l.Colormap=qt(r.colorRamp)),a?new T({rasterFunctionDefinition:ne(e)}):e}function wr(r,i){var m,c;const a=i.convertToRFT,e=new T;e.functionName="Stretch";const t=Je[Li.toJSON(r.stretchType)],n="u8",l=(m=r.customStatistics)==null?void 0:m.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:t,Statistics:l,DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(u.Min=r.outputMin),r.outputMax!=null&&(u.Max=r.outputMax),t===Je.standardDeviation?(u.NumberOfStandardDeviations=r.numberOfStandardDeviations,e.outputPixelType=n):t===Je.percentClip?(u.MinPercent=r.minPercent,u.MaxPercent=r.maxPercent,e.outputPixelType=n):t===Je.minMax?e.outputPixelType=n:t===Je.sigmoid&&(u.SigmoidStrengthLevel=r.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",r.colorRamp){const p=r.colorRamp,d=new T;if(a)d.functionArguments={ColorRamp:Vt(p)};else{const y=Ui(p,!0);if(y)d.functionArguments={colorRampName:y};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const g=r.colorRamp.toJSON();g.type==="algorithmic"?g.algorithm=g.algorithm||"esriCIELabAlgorithm":g.type==="multipart"&&((c=g.colorRamps)!=null&&c.length)&&g.colorRamps.forEach(f=>f.algorithm=f.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:g}}else d.functionArguments={Colormap:qt(p)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=e,a?new T({rasterFunctionDefinition:ne(d)}):d}return a?new T({rasterFunctionDefinition:ne(e)}):e}function br(r,i){const a=[],e=[],t=[],n=[],{pixelType:l,rasterAttributeTable:u}=i,m=u==null?null:u.features,c=$t(u);if(c&&m&&Array.isArray(m)&&r.classBreakInfos){r.classBreakInfos.forEach((v,R)=>{var A;const w=(A=v.symbol)==null?void 0:A.color;let h;w!=null&&w.a&&v.minValue!=null&&v.maxValue!=null&&m.forEach(S=>{v.minValue!=null&&v.maxValue!=null&&(h=S.attributes[r.field],(h>=v.minValue&&h<v.maxValue||R===r.classBreakInfos.length-1&&h>=v.minValue)&&n.push([S.attributes[c],w.r,w.g,w.b]))})});const g=l?ut(n,l):n,f=new T;return f.functionName="Colormap",f.functionArguments={},f.functionArguments.Colormap=g,f.variableName="Raster",i.convertToRFT?new T({rasterFunctionDefinition:ne(f)}):f}r.classBreakInfos.forEach((g,f)=>{if(g.minValue==null||g.maxValue==null)return;const v=g.symbol&&g.symbol.color;v!=null&&v.a?(f===0?a.push(g.minValue,g.maxValue+1e-4):a.push(g.minValue+1e-4,g.maxValue+1e-4),e.push(f),n.push([f,v.r,v.g,v.b])):t.push(g.minValue,g.maxValue)});const p=l?ut(n,l):n,d=new T;d.functionName="Remap",d.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:t},d.variableName="Raster";const y=new T;return y.functionName="Colormap",y.functionArguments={Colormap:p,Raster:d},i.convertToRFT?new T({rasterFunctionDefinition:ne(y)}):y}function ut(r,i){const a=yr.has(i)?Gi(i):null;return a&&r.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),r}function $t(r){var a;if(r==null)return;const{fields:i}=r;return(a=i==null?void 0:i.find(e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value"))==null?void 0:a.name}function Sr(r,i){var d,y;const a=[],{pixelType:e,rasterAttributeTable:t}=i,n=t==null?null:t.features,l=$t(t),u=(y=(d=r.defaultSymbol)==null?void 0:d.color)==null?void 0:y.toRgb(),m=r.uniqueValueInfos;if(m)if(n){if(l){const g=new Map;m.forEach(v=>{const R=v.value,w=Ot(v);R!=null&&(w!=null&&w.a)&&g.set(String(R),w.toRgb())});const f=r.field;f&&n.forEach(({attributes:v})=>{const R=String(v[f]),w=v[l],h=g.get(R);h?a.push([w,...h]):u&&a.push([w,...u])})}}else for(let g=0;g<m.length;g++){const f=m[g],v=Ot(f),R=+f.value;if(v!=null&&v.a){if(isNaN(R))return null;a.push([R,v.r,v.g,v.b])}}const c=e?ut(a,e):a,p=new T;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=c,p.variableName="Raster",i.convertToRFT?new T({rasterFunctionDefinition:ne(p)}):p}function Ot(r){var i,a,e,t,n;return((i=r.symbol)==null?void 0:i.type)==="polygon-3d"?(t=(e=(a=r.symbol.symbolLayers)==null?void 0:a.find(l=>l.type==="fill"))==null?void 0:e.material)==null?void 0:t.color:(n=r.symbol)==null?void 0:n.color}function xr(r,i){const a=r.extractColormap();if(!a||a.length===0)return null;const{pixelType:e}=i,t=e?ut(a,e):a,n=new T;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,i.convertToRFT?new T({rasterFunctionDefinition:ne(n)}):n}function Ir(r){const i=[],a=[];return r.forEach(e=>{i.push(e[0]),a.push($i([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:a}}let O=class extends P{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(r,i,a){this.layer.version<10.3||(i[a]=r)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(r,i,a){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(i[a]=r)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(r,i,a){this.format==="lerc"&&r!=null&&(i[a]=r)}get format(){var r;return this.requestRawData||((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:r}=this;return r.pixelType!==r.serviceRasterInfo.pixelType?r.pixelType:void 0}writeLercVersion(r,i,a){this.format==="lerc"&&this.layer.version>=10.5&&(i[a]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("rasterFunction"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("pixelType"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const a=r.definitionExpression;return i?a&&a!==i.where&&(i=i.clone(),i.where=a):a&&(i=new te({where:a})),i}get rasterFunction(){var n,l;const r=this.layer;let{rasterFunction:i}=r;const a=r.pixelFilter,e=!r.format||r.format.includes("jpg")||r.format.includes("png");this.requestRawData||(i=this._addResampleRasterFunction(i));const t=(n=r.multidimensionalSubset)==null?void 0:n.areaOfInterest;return t&&(i=Fr(i,t)),this.requestRawData||!e||a||((l=r.renderer)==null?void 0:l.type)==="vector-field"||(i=this.combineRendererWithRenderingRule(i)),i}combineRendererWithRenderingRule(r){const i=this.layer,{rasterInfo:a,renderer:e}=i;return r=r||i.rasterFunction,!e||!Gt(e)?r:Rt(fr(e,{rasterAttributeTable:a.attributeTable,pixelType:a.pixelType,dataType:a.dataType,bandNames:a.bandInfos.map(({name:t})=>t),convertColorRampToColormap:i.version<10.6,convertToRFT:!!(r!=null&&r.rasterFunctionDefinition),bandCount:a.bandCount}),r)}_addResampleRasterFunction(r){var t;if(((t=this.layer.renderer)==null?void 0:t.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,a=this.layer.serviceRasterInfo.pixelSize;let e=new T({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:a}});return e=r!=null&&r.rasterFunctionDefinition?new T({rasterFunctionDefinition:ne(e)}):e,Rt(e,r)}};function Fr(r,i){const a=new T({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return Rt(a,r)}s([o()],O.prototype,"layer",void 0),s([o()],O.prototype,"requestRawData",void 0),s([o({json:{write:!0}})],O.prototype,"adjustAspectRatio",null),s([N("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),s([o({json:{write:!0}})],O.prototype,"bandIds",null),s([o({json:{write:!0}})],O.prototype,"compression",void 0),s([o({json:{write:!0}})],O.prototype,"compressionQuality",null),s([N("compressionQuality")],O.prototype,"writeCompressionQuality",null),s([o({json:{write:!0}})],O.prototype,"compressionTolerance",null),s([N("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),s([o({json:{write:!0}})],O.prototype,"format",null),s([o({type:String,json:{read:{reader:Be.read},write:{writer:Be.write}}})],O.prototype,"interpolation",null),s([o({json:{write:!0}})],O.prototype,"noData",null),s([o({type:String,json:{read:{reader:Qe.read},write:{writer:Qe.write}}})],O.prototype,"noDataInterpretation",null),s([o({type:Pe.apiValues,json:{read:Pe.read,write:Pe.write}})],O.prototype,"pixelType",null),s([o({json:{write:!0}})],O.prototype,"lercVersion",void 0),s([N("lercVersion")],O.prototype,"writeLercVersion",null),s([o({type:Number})],O.prototype,"version",null),s([o({json:{write:!0}})],O.prototype,"mosaicRule",null),s([o({json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),O=s([b("esri.layers.support.ExportImageServiceParameters")],O);let fe=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([o({type:E,json:{read:!0}})],fe.prototype,"fromGeometry",void 0),s([o({type:E,json:{read:!0,write:!0}})],fe.prototype,"toGeometry",void 0),s([o({json:{write:!0}})],fe.prototype,"objectIds",void 0),s([o({type:String,json:{write:!0}})],fe.prototype,"where",void 0),s([o({type:Number,json:{write:!0}})],fe.prototype,"maxCount",void 0),fe=s([b("esri.rest.support.FindImagesParameters")],fe);const zt=r=>{let i=class extends r{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([o({json:{write:!0}})],i.prototype,"make",void 0),s([o({json:{write:!0}})],i.prototype,"model",void 0),s([o({json:{write:!0}})],i.prototype,"focalLength",void 0),s([o({json:{write:!0}})],i.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],i.prototype,"rows",void 0),s([o({json:{write:!0}})],i.prototype,"cols",void 0),i=s([b("esri.rest.support.CameraInfoMixin")],i),i};let Z=class extends zt(P){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(r,i){i.acquisitionDate=r==null?void 0:r.getTime()}};s([o({json:{write:!0}})],Z.prototype,"id",void 0),s([o({json:{name:"uri",write:!0}})],Z.prototype,"referenceUri",void 0),s([o({type:Date,json:{write:!0}})],Z.prototype,"acquisitionDate",void 0),s([N("acquisitionDate")],Z.prototype,"writeAcquisitionDate",null),s([o({json:{write:!0}})],Z.prototype,"cameraID",void 0),s([o({type:E,json:{write:!0}})],Z.prototype,"center",void 0),s([o({type:E,json:{write:!0}})],Z.prototype,"perspectiveCenter",void 0),s([o({json:{write:!0}})],Z.prototype,"orientation",void 0),Z=s([b("esri.rest.support.ImageInspectionInfo")],Z);const Dr=Z;let Xe=class extends P{constructor(){super(...arguments),this.images=null}};s([o({type:[Dr],json:{write:!0}})],Xe.prototype,"images",void 0),Xe=s([b("esri.rest.support.FindImagesResult")],Xe);var wt;let Ie=wt=class extends P{constructor(r){super(r),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new wt(q({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([o({type:[String],json:{name:"angleName",write:!0}})],Ie.prototype,"angleNames",void 0),s([o({type:E,json:{write:!0}})],Ie.prototype,"point",void 0),s([o({type:se,json:{write:!0}})],Ie.prototype,"spatialReference",void 0),s([o({type:ke,json:{write:!0}})],Ie.prototype,"rasterId",void 0),Ie=wt=s([b("esri.rest.support.ImageAngleParameters")],Ie);let Ce=class extends P{constructor(r){super(r),this.north=null,this.up=null,this.spatialReference=null}};s([o({type:Number,json:{write:!0}})],Ce.prototype,"north",void 0),s([o({type:Number,json:{write:!0}})],Ce.prototype,"up",void 0),s([o({type:se,json:{write:!0}})],Ce.prototype,"spatialReference",void 0),Ce=s([b("esri.rest.support.ImageAngleResult")],Ce);const k=new Mt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Re=class extends P{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([o({type:Number,json:{read:!0,write:!0}})],Re.prototype,"value",void 0),s([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"displayValue",void 0),s([o({type:Number,json:{read:!0,write:!0}})],Re.prototype,"uncertainty",void 0),Re=s([b("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Re);let Ve=class extends Re{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:be.read,write:be.write}})],Ve.prototype,"unit",void 0),Ve=s([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],Ve);let Ye=class extends Re{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:ot.read,write:ot.write}})],Ye.prototype,"unit",void 0),Ye=s([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Ye);let He=class extends Re{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:lt.read,write:lt.write}})],He.prototype,"unit",void 0),He=s([b("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],He);let ee=class extends P{constructor(r){super(r),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([o()],ee.prototype,"type",void 0),s([o({type:k.apiValues,json:{read:k.read,write:k.write}})],ee.prototype,"measureOperation",void 0),s([o({type:te,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),s([o({type:E,json:{write:!0}})],ee.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],ee.prototype,"raster",void 0),ee=s([b("esri.rest.support.BaseImageMeasureParameters")],ee);var bt;let ue=bt=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=r.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new bt(q({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({types:W,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),s([N("geometry")],ue.prototype,"writeGeometry",null),s([o({type:k.apiValues,json:{write:k.write}})],ue.prototype,"measureOperation",null),s([o({json:{read:!0}})],ue.prototype,"is3D",void 0),s([o({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),s([o({type:String,json:{read:ot.read,write:ot.write}})],ue.prototype,"areaUnit",void 0),ue=bt=s([b("esri.rest.support.ImageAreaParameters")],ue);let we=class extends P{constructor(r){super(r),this.name=null,this.sensorName=null}};s([o({type:String,json:{read:!0,write:!0}})],we.prototype,"name",void 0),s([o({type:String,json:{read:!0,write:!0}})],we.prototype,"sensorName",void 0),we=s([b("esri.rest.support.BaseImageMeasureResult")],we);let Ge=class extends we{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([o({type:Ye,json:{read:!0,write:!0}})],Ge.prototype,"area",void 0),s([o({type:Ve,json:{read:!0,write:!0}})],Ge.prototype,"perimeter",void 0),Ge=s([b("esri.rest.support.ImageAreaResult")],Ge);let et=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.outSpatialReference=null}};s([o({type:se,json:{name:"outSR",write:!0}})],et.prototype,"outSpatialReference",void 0),et=s([b("esri.rest.support.ImageBoundaryParameters")],et);let Oe=class extends P{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(r,i){return r==null?null:r.rings?ft.fromJSON(r):ze.fromJSON(r)}};s([o({type:Number,json:{write:!0}})],Oe.prototype,"area",void 0),s([o({types:W,json:{name:"shape",write:!0}})],Oe.prototype,"geometry",void 0),s([$("geometry")],Oe.prototype,"readGeometry",null),Oe=s([b("esri.rest.support.ImageBoundaryResult")],Oe);var St;let re=St=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=r.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new St(q({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({type:E,json:{read:!0,write:!0}})],re.prototype,"fromGeometry",void 0),s([N("fromGeometry")],re.prototype,"writeFromGeometry",null),s([o({type:E,json:{read:!0,write:!0}})],re.prototype,"toGeometry",void 0),s([o({type:k.apiValues,json:{write:k.write}})],re.prototype,"measureOperation",null),s([o({json:{read:!0}})],re.prototype,"is3D",void 0),s([o({type:String,json:{read:be.read,write:be.write}})],re.prototype,"linearUnit",void 0),s([o({type:String,json:{read:lt.read,write:lt.write}})],re.prototype,"angularUnit",void 0),re=St=s([b("esri.rest.support.ImageDistanceParameters")],re);let _e=class extends we{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([o({type:Ve,json:{read:!0,write:!0}})],_e.prototype,"distance",void 0),s([o({type:He,json:{read:!0,write:!0}})],_e.prototype,"azimuthAngle",void 0),s([o({type:He,json:{read:!0,write:!0}})],_e.prototype,"elevationAngle",void 0),_e=s([b("esri.rest.support.ImageDistanceResult")],_e);let pe=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=JSON.stringify(r.toJSON()))}};s([o({types:W,json:{read:oe,write:!0}})],pe.prototype,"geometry",void 0),s([N("geometry")],pe.prototype,"writeGeometry",null),s([o({json:{write:!0}})],pe.prototype,"objectIds",void 0),s([Ht(Ki,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),s([o({type:Et,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),s([o({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=s([b("esri.rest.support.ImageGPSInfoParameters")],pe);let tt=class extends zt(P){constructor(){super(...arguments),this.id=null}};s([o({json:{write:!0}})],tt.prototype,"id",void 0),tt=s([b("esri.rest.support.CameraInfo")],tt);const Tr=tt;let K=class extends P{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(r,i){i.acquisitionDate=r==null?void 0:r.getTime()}};s([o({json:{write:!0}})],K.prototype,"id",void 0),s([o({json:{write:!0}})],K.prototype,"name",void 0),s([o({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),s([N("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),s([o({json:{write:!0}})],K.prototype,"cameraID",void 0),s([o({type:E,json:{write:!0}})],K.prototype,"center",void 0),s([o({json:{write:!0}})],K.prototype,"gps",void 0),s([o({json:{write:!0}})],K.prototype,"orientation",void 0),K=s([b("esri.rest.support.ImageGPSInfo")],K);const Nr=K;let Le=class extends P{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([o({type:[Nr],json:{write:!0}})],Le.prototype,"images",void 0),s([o({type:[Tr],json:{write:!0}})],Le.prototype,"cameras",void 0),Le=s([b("esri.rest.support.ImageGPSInfoResult")],Le);var xt;let me=xt=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=r.toJSON())}get measureOperation(){return this.operationType}clone(){return new xt(q({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({type:E,json:{read:!0}})],me.prototype,"fromGeometry",void 0),s([N("fromGeometry")],me.prototype,"writeFromGeometry",null),s([o({type:E,json:{read:!0,write:!0}})],me.prototype,"toGeometry",void 0),s([o({type:k.apiValues,json:{write:k.write}})],me.prototype,"measureOperation",null),s([o({json:{read:!0}})],me.prototype,"operationType",void 0),s([o({type:String,json:{read:be.read,write:be.write}})],me.prototype,"linearUnit",void 0),me=xt=s([b("esri.rest.support.ImageHeightParameters")],me);let it=class extends we{constructor(){super(...arguments),this.height=null}};s([o({type:Ve,json:{read:!0,write:!0}})],it.prototype,"height",void 0),it=s([b("esri.rest.support.ImageHeightResult")],it);var It;let M=It=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i!=null&&i.mosaicMethod&&(i=te.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(r,i,a){r!=null&&(i[a]=JSON.stringify(r.toJSON()))}set rasterFunction(r){let i=r;i!=null&&i.rasterFunction&&(i=T.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(r,i,a){r!=null&&(i[a]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[a]=JSON.stringify(r.rasterFunctionDefinition))}writeRasterFunctions(r,i,a){r!=null&&(i[a]=JSON.stringify(r.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(r,i,a){r!=null&&(i[a]=JSON.stringify(r))}writeTimeExtent(r,i,a){if(r!=null){const e=r.start!=null?r.start.getTime():null,t=r.end!=null?r.end.getTime():null;i[a]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new It(q({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([o({types:W,json:{write:!0}})],M.prototype,"geometry",void 0),s([N("geometry")],M.prototype,"writeGeometry",null),s([o({type:te,json:{write:!0}})],M.prototype,"mosaicRule",null),s([N("mosaicRule")],M.prototype,"writeMosaicRule",null),s([o({type:T,json:{write:!0,name:"renderingRule"}})],M.prototype,"rasterFunction",null),s([N("rasterFunction")],M.prototype,"writeRasterFunction",null),s([o({type:[T],json:{write:!0,name:"renderingRules"}})],M.prototype,"rasterFunctions",void 0),s([N("rasterFunctions")],M.prototype,"writeRasterFunctions",null),s([o({type:E,json:{write:!0}})],M.prototype,"pixelSize",void 0),s([N("pixelSize")],M.prototype,"writePixelSize",null),s([o({type:Boolean,json:{write:!0}})],M.prototype,"returnGeometry",void 0),s([o({type:Boolean,json:{write:!0}})],M.prototype,"returnCatalogItems",void 0),s([o({type:Boolean,json:{write:!0}})],M.prototype,"returnPixelValues",void 0),s([o({type:Number,json:{write:!0}})],M.prototype,"maxItemCount",void 0),s([o({type:Et,json:{write:{target:"time"}}})],M.prototype,"timeExtent",void 0),s([N("timeExtent")],M.prototype,"writeTimeExtent",null),s([o({json:{write:!0}})],M.prototype,"raster",void 0),s([o({json:{write:!0}})],M.prototype,"viewId",void 0),s([o({type:Boolean,json:{write:!0}})],M.prototype,"processAsMultidimensional",void 0),M=It=s([b("esri.rest.support.ImageIdentifyParameters")],M);let X=class extends P{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([o({json:{write:!0}})],X.prototype,"catalogItemVisibilities",void 0),s([o({type:Jt,json:{write:!0}})],X.prototype,"catalogItems",void 0),s([o({type:E,json:{write:!0}})],X.prototype,"location",void 0),s([o({json:{write:!0}})],X.prototype,"name",void 0),s([o({json:{write:!0}})],X.prototype,"objectId",void 0),s([o({json:{write:!0}})],X.prototype,"processedValues",void 0),s([o({json:{write:!0}})],X.prototype,"properties",void 0),s([o({json:{write:!0}})],X.prototype,"value",void 0),X=s([b("esri.rest.support.ImageIdentifyResult")],X);var Ft;let Me=Ft=class extends P{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,a){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(e=>e.toJSON())}}clone(){var r;return new Ft({geometries:((r=this.geometries)==null?void 0:r.map(i=>i.clone()))??[],rasterId:this.rasterId})}};s([o({type:[E],json:{write:!0}})],Me.prototype,"geometries",void 0),s([N("geometries")],Me.prototype,"writeGeometry",null),s([o({type:ke,json:{write:!0}})],Me.prototype,"rasterId",void 0),Me=Ft=s([b("esri.rest.support.ImagePixelLocationParameters")],Me);let rt=class extends P{constructor(){super(...arguments),this.geometries=null}};s([o({json:{write:!0}})],rt.prototype,"geometries",void 0),rt=s([b("esri.rest.support.ImagePixelLocationResult")],rt);var Dt;let Fe=Dt=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=r.toJSON())}get measureOperation(){const{is3D:r,geometry:i}=this;return i.type==="point"?r?"point-3D":"point":r?"centroid-3D":"centroid"}clone(){return new Dt(q({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({types:W,json:{name:"fromGeometry",read:oe}})],Fe.prototype,"geometry",void 0),s([N("geometry")],Fe.prototype,"writeGeometry",null),s([o({type:k.apiValues,json:{read:k.read,write:k.write}})],Fe.prototype,"measureOperation",null),s([o({json:{read:!0}})],Fe.prototype,"is3D",void 0),Fe=Dt=s([b("esri.rest.support.ImagePointParameters")],Fe);let st=class extends we{constructor(){super(...arguments),this.point=null}};s([o({type:E,json:{name:"point.value",read:!0,write:!0}})],st.prototype,"point",void 0),st=s([b("esri.rest.support.ImagePointResult")],st);let De=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(r,i,a){i.geometries=r!=null&&r.length?{geometryType:ie(r[0]),geometries:r.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};s([o({types:[W]})],De.prototype,"geometries",void 0),s([N("geometries")],De.prototype,"writeGeometries",null),s([o({type:[ke],json:{write:!0}})],De.prototype,"rasterIds",void 0),s([o({type:se,json:{name:"outSR",write:!0}})],De.prototype,"outSpatialReference",void 0),De=s([b("esri.rest.support.ImageToMapMultirayParameters")],De);let ce=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]={...r.toJSON(),spatialReference:void 0})}};s([o({types:W,json:{read:oe,write:!0}})],ce.prototype,"geometry",void 0),s([N("geometry")],ce.prototype,"writeGeometry",null),s([o({json:{write:!0}})],ce.prototype,"rasterId",void 0),s([o({type:se,json:{name:"outSR",write:!0}})],ce.prototype,"outSpatialReference",void 0),s([o({json:{name:"options.DOff",write:!0}})],ce.prototype,"depthOffset",void 0),s([o({json:{name:"options.Adjust",write:!0}})],ce.prototype,"adjust",void 0),ce=s([b("esri.rest.support.ImageToMapParameters")],ce);let Ue=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([o({type:String,json:{name:"uri",write:!0}})],Ue.prototype,"referenceUri",void 0),s([o({type:Number,json:{write:!0}})],Ue.prototype,"rasterId",void 0),Ue=s([b("esri.rest.support.ImageUrlParameters")],Ue);let nt=class extends P{constructor(){super(...arguments),this.url=null}};s([o({json:{name:"imageURL",write:!0}})],nt.prototype,"url",void 0),nt=s([b("esri.rest.support.ImageUrlResult")],nt);const gt=new Mt({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let de=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(r,i,a){r!=null&&r.length&&(i.geometryType=ie(r[0]),i.geometries=r.map(e=>e.toJSON()))}};s([o({types:[W]})],de.prototype,"geometries",void 0),s([N("geometries")],de.prototype,"writeGeometries",null),s([o({type:te,json:{write:!0}})],de.prototype,"mosaicRule",void 0),s([o({type:E,json:{write:!0}})],de.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],de.prototype,"constantZ",void 0),s([o({type:gt.apiValues,json:{read:gt.read,write:gt.write}})],de.prototype,"baseType",void 0),de=s([b("esri.rest.support.ImageVolumeParameters")],de);let Y=class extends P{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};s([o({json:{write:!0}})],Y.prototype,"area",void 0),s([o({json:{write:!0}})],Y.prototype,"cut",void 0),s([o({json:{write:!0}})],Y.prototype,"fill",void 0),s([o({json:{name:"maxz",write:!0}})],Y.prototype,"maxZ",void 0),s([o({json:{name:"minz",write:!0}})],Y.prototype,"minZ",void 0),s([o({json:{name:"meanz",write:!0}})],Y.prototype,"meanZ",void 0),s([o({json:{write:!0}})],Y.prototype,"cutCellCount",void 0),s([o({json:{write:!0}})],Y.prototype,"fillCellCount",void 0),Y=s([b("esri.rest.support.ImageVolume")],Y);const Pr=Y;let at=class extends P{constructor(){super(...arguments),this.volumes=[]}};s([o({type:[Pr],json:{write:!0}})],at.prototype,"volumes",void 0),at=s([b("esri.rest.support.ImageVolumeResult")],at);let Te=class extends ye.ClonableMixin(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]=JSON.stringify(r))}};s([o({types:W,json:{read:oe,write:!0}})],Te.prototype,"geometry",void 0),s([N("geometry")],Te.prototype,"writeGeometry",null),s([o({json:{write:!0}})],Te.prototype,"rasterId",void 0),s([o({json:{name:"options.VisibleOnly",write:!0}})],Te.prototype,"visibleOnly",void 0),Te=s([b("esri.rest.support.MapToImageParameters")],Te);let ve=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(r,i){return r.spatialReference||(r={...r,spatialReference:i.Shape.spatialReference}),E.fromJSON(r)}};s([o({types:W,json:{name:"Shape",read:oe,write:!0}})],ve.prototype,"geometry",void 0),s([o({json:{name:"Length",write:!0}})],ve.prototype,"length",void 0),s([o({json:{name:"Area",write:!0}})],ve.prototype,"area",void 0),s([o({type:E,json:{name:"Center",write:!0}})],ve.prototype,"center",void 0),s([$("center")],ve.prototype,"readCenter",null),ve=s([b("esri.rest.support.MeasureAreaFromImageResult")],ve);var Tt;let Ae=Tt=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(r,i,a){r!=null&&(i.geometryType=ie(r),i[a]={...r.toJSON(),spatialReference:void 0})}clone(){const r=q({geometry:this.geometry,rasterId:this.rasterId});return new Tt(r)}};s([o({types:W,json:{name:"fromGeometry",read:oe,write:!0}})],Ae.prototype,"geometry",void 0),s([N("geometry")],Ae.prototype,"writeGeometry",null),s([o({json:{write:!0}})],Ae.prototype,"rasterId",void 0),Ae=Tt=s([b("esri.rest.support.MeasureFromImageParameters")],Ae);let $e=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([o({types:W,json:{name:"Shape",read:oe,write:!0}})],$e.prototype,"geometry",void 0),s([o({json:{name:"Length",write:!0}})],$e.prototype,"length",void 0),$e=s([b("esri.rest.support.MeasureLengthFromImageResult")],$e);function Nt(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const a=[];i.start!=null&&a.push(i.start),i.end==null||a.includes(i.end)||a.push(i.end),r.time=a.join(",")}}async function Bt(r,i,a){i=V(Ji,i);const e=L(r),t=i.geometry?[i.geometry]:[],n=await je(t),l=i.toJSON();Nt(l);const u=n==null?void 0:n[0];u!=null&&(l.geometry=ae(u));const m=z({...e.query,f:"json",...l});return B(m,a)}async function jr(r,i,a){const e=(i=V(de,i)).toJSON();e.geometries=JSON.stringify(e.geometries);const t=L(r),n=z({...t.query,f:"json",...e}),l=B(n,a),{data:u}=await D(`${t.path}/calculateVolume`,l);return at.fromJSON({volumes:u.results})}async function Cr(r,i,a){var m,c,p;const e=(i=V(Ie,i)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(c=(m=i==null?void 0:i.point)==null?void 0:m.spatialReference)!=null&&c.imageCoordinateSystem&&(e.point.spatialReference=mt(i.point.spatialReference)),(p=i==null?void 0:i.spatialReference)!=null&&p.imageCoordinateSystem&&(e.spatialReference=qe(i.spatialReference));const t=L(r),n=z({...t.query,f:"json",...e}),l=B(n,a),{data:u}=await D(`${t.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new Ce(u)}async function Or(r,i,a){var c;const e=(i=V(Me,i)).toJSON(),{geometries:t}=i;if(t)for(let p=0;p<t.length;p++)(c=t[p].spatialReference)!=null&&c.imageCoordinateSystem&&(e.geometries.geometries[p].spatialReference=mt(t[p].spatialReference));const n=L(r),l=z({...n.query,f:"json",...e}),u=B(l,a),{data:m}=await D(`${n.path}/computePixelLocation`,u);return rt.fromJSON(m)}async function _r(r,i,a){const e=await Bt(r,i,a),t=L(r),{data:n}=await D(`${t.path}/computeStatisticsHistograms`,e),{statistics:l}=n;return l!=null&&l.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:n.histograms}}async function Mr(r,i,a){const e=await Bt(r,i,a),t=L(r),{data:n}=await D(`${t.path}/computeHistograms`,e);return{histograms:n.histograms}}async function Ar(r,i,a){var d;const e=(i=V(qi,i)).toJSON();Nt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await je(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const l=L(r),u=z({...l.query,f:"json",...e}),m=B(u,a),{data:c}=await D(`${l.path}/getSamples`,m),p=c.samples.map(y=>{const g=y.value==="NaN"||y.value===""?null:y.value.split(" ").map(f=>Number(f));return{...y,pixelValue:g}});return Ei.fromJSON({samples:p})}async function _t(r,i,a){i=V(M,i);const e=L(r),t=i.geometry?[i.geometry]:[];return je(t).then(n=>{const l=i.toJSON(),u=n==null?void 0:n[0];u!=null&&(l.geometry=JSON.stringify(ae(u)));const m=z({...e.query,f:"json",...l}),c=B(m,a);return D(e.path+"/identify",c)}).then(n=>X.fromJSON(n.data))}async function Vr(r,i,a){i=V(me,i);const e=await pt(r,i,[i.fromGeometry,i.toGeometry],a);return it.fromJSON(e)}async function qr(r,i,a){i=V(ue,i);const e=await pt(r,i,[i.geometry],a);return Ge.fromJSON(e)}async function Er(r,i,a){i=V(Fe,i);const e=await pt(r,i,[i.geometry],a);return st.fromJSON(e)}async function Jr(r,i,a){i=V(re,i);const e=await pt(r,i,[i.fromGeometry,i.toGeometry],a);return _e.fromJSON(e)}async function pt(r,i,a,e){const t=L(r),n=await je(a),l=i.toJSON();n[0]!=null&&(l.fromGeometry=JSON.stringify(ae(n[0]))),n[1]!=null&&(l.toGeometry=JSON.stringify(ae(n[1])));const u=z({...t.query,f:"json",...l}),m=B(u,e),{data:c}=await D(t.path+"/measure",m);return c}async function Gr(r,i,a){const e=await Qt(r,i,a);return $e.fromJSON(e)}async function Lr(r,i,a){const e=await Qt(r,i,a);return ve.fromJSON(e)}async function Qt(r,i,a){i=V(Ae,i);const e=L(r),t=i.toJSON(),n=z({...e.query,f:"json",...t}),l=B(n,a),{data:u}=await D(e.path+"/measureFromImage",l);return u}function ae(r){var a;const i=r.toJSON();return(a=r.spatialReference)!=null&&a.imageCoordinateSystem&&(i.spatialReference=mt(r.spatialReference)),i}function mt(r){const{imageCoordinateSystem:i}=r;if(i){const{id:a,referenceServiceName:e}=i;return a!=null?e?{icsid:a,icsns:e}:{icsid:a}:{ics:i}}return r.toJSON()}function qe(r,i){if(!r.imageCoordinateSystem)return vt(r);const a=mt(r),{icsid:e,icsns:t}=a;return e==null||t!=null&&!(i!=null&&i.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(a):`0:${e}`}async function Ur(r,i,a){i=V(et,i);const e=L(r),t=i.toJSON();i.outSpatialReference&&(t.outSR=qe(i.outSpatialReference));const n=z({...e.query,f:"json",...t}),l=B(n,a),{data:u}=await D(e.path+"/queryBoundary",l);return Oe.fromJSON(u)}async function $r(r,i,a){var d,y;const e=(i=V(pe,i)).toJSON();Nt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await je(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const l=(n==null?void 0:n.spatialReference)??((y=i.geometry)==null?void 0:y.spatialReference);l&&(e.inSR=qe(l));const u=L(r),m=z({...u.query,f:"json",...e}),c=B(m,a),{data:p}=await D(`${u.path}/queryGPSInfo`,c);return Le.fromJSON(p)}async function zr(r,i,a){const e=(i=V(ce,i)).toJSON();i.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ae(i.geometry)),i.depthOffset&&i.adjust||delete e.options;const t=L(r),n=z({...t.query,f:"json",...e}),l=B(n,a),{data:u}=await D(`${t.path}/imageToMap`,l);return oe(u)}async function Br(r,i,a){var m;const e=(i=V(De,i)).toJSON();(m=i.rasterIds)!=null&&m.length&&(e.rasterIds=i.rasterIds.join(","));const t=L(r),n=z({...t.query,f:"json",...e}),l=B(n,a),{data:u}=await D(`${t.path}/imageToMapMultiray`,l);return oe(u)}async function Qr(r,i,a){var d;const e=(i=V(Te,i)).toJSON(),t=await je(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n)),i.visibleOnly||delete e.options;const l=(n==null?void 0:n.spatialReference)??((d=i.geometry)==null?void 0:d.spatialReference);l&&(e.inSR=qe(l));const u=L(r),m=z({...u.query,f:"json",...e}),c=B(m,a),{data:p}=await D(`${u.path}/mapToImage`,c);return oe(p)}async function Hr(r,i,a){const e=(i=V(Ue,i)).toJSON(),t=L(r),n=z({...t.query,f:"json",...e}),l=B(n,a),{data:u}=await D(`${t.path}/getImageUrl`,l);return nt.fromJSON(u)}async function kr(r,i,a){var c;const e=(i=V(fe,i)).toJSON(),t=await je([i.fromGeometry,i.toGeometry]);t[0]!=null&&(e.fromGeometry=ae(t[0]),t[0].spatialReference&&(e.inSR=qe(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ae(t[1])),(c=i.objectIds)!=null&&c.length&&(e.objectIds=e.objectIds.join(","));const n=L(r),l=z({...n.query,f:"json",...e}),u=B(l,a),{data:m}=await D(`${n.path}/find`,u);return Xe.fromJSON(m)}async function Wr(r,i,a){var S,j;const e=L(r),t=z({...e==null?void 0:e.query,f:"json"}),n=B(t,a),l=`${e==null?void 0:e.path}/${i}/info`,u=D(`${l}`,n),m=D(`${l}/keyProperties`,n),c=await Promise.allSettled([u,m]),p=c[0].status==="fulfilled"?c[0].value.data:null,d=c[1].status==="fulfilled"?c[1].value.data:null;let y=null;(S=p.statistics)!=null&&S.length&&(y=p.statistics.map(x=>({min:x[0],max:x[1],avg:x[2],stddev:x[3]})));const g=ze.fromJSON(p.extent),f=Math.ceil(g.width/p.pixelSizeX-.1),v=Math.ceil(g.height/p.pixelSizeY-.1),R=g.spatialReference,w=new E({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:R}),h=(j=p.histograms)!=null&&j.length?p.histograms:null,A=new Qi({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new At({width:f,height:v,bandCount:p.bandCount,extent:g,spatialReference:R,pixelSize:w,pixelType:p.pixelType.toLowerCase(),statistics:y,histograms:h,keyProperties:d,storageInfo:A})}const Zr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Kr=ii(ri,{min:0,max:255});function Xr(r){const i=JSON.stringify(r),a=i.includes('"rasterFunctionDefinition":{'),e=a?i.match(/"type":"(.*?FunctionArguments")/gi):i.match(/"rasterFunction":"(.*?")/gi),t=e==null?void 0:e.map(n=>a?n.slice(8,-18):n.slice(18,-1));return t?t.join("/"):null}const Yr=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,n){e!=null&&this.format!=="lerc"&&(t[n]=e)}writeCompressionTolerance(e,t,n){this.format==="lerc"&&e!=null&&(t[n]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?te.fromJSON(t):null}get fieldsIndex(){return this.fields?new Wi(this.fields):null}set format(e){e&&Zr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=te.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const n=e||t.mosaicRule;return n?te.fromJSON(n):this._isMosaicRuleSupported(t)?te.fromJSON(t):null}writeMosaicRule(e,t,n){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(t[n]=l.toJSON())}writeNoData(e,t,n){e!=null&&typeof e=="number"&&(t[n]=Kr(e))}readObjectIdField(e,t){var n;return e||(e=(n=t.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid"))==null?void 0:n.name),e}get parsedUrl(){return Xt(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){var n;const{activePresetRendererName:e,presetRenderers:t}=this;return e?(n=t==null?void 0:t.find(({name:l})=>l===e))==null?void 0:n.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,n){var m,c;const l=(c=(m=t==null?void 0:t.layerDefinition)==null?void 0:m.drawingInfo)==null?void 0:c.renderer,u=Ci(l,n);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Gt(u)||ct.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,n){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var l,u,m,c;const e=((l=this.fields)==null?void 0:l.map(p=>p.clone()))??[];e.push(di()),this.sourceType==="mosaic-dataset"&&((u=this.fields)!=null&&u.length)&&e.push(yi()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:p})=>p.toLowerCase()==="none")&&e.push(hi()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:p})=>p.toLowerCase()!=="none").forEach(({name:p})=>e.push(gi(p)));const{rasterInfo:t}=this;if(this._isVectorDataSet()){const p=(c=(m=t==null?void 0:t.multidimensionalInfo)==null?void 0:m.variables[0].unit)==null?void 0:c.trim(),d=fi(p),y=vi();e.push(d,y)}if(t!=null&&t.multidimensionalInfo&&this.sourceType==="raster-dataset"){const p=Ri(t.multidimensionalInfo);e.push(...p)}const n=t==null?void 0:t.attributeTable;if(n!=null){const p=wi(n);e.push(...p)}return e}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=T.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const n=t.rasterFunctionInfos;return t.renderingRule||n!=null&&n.length&&n[0].name!=="None"?this._isRFTJson(t.renderingRule)?T.fromJSON({rasterFunctionDefinition:t.renderingRule}):T.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const n=e||t.extent.spatialReference;return n?se.fromJSON(n):null}writePixelType(e,t,n){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[n]=Pe.toJSON(e))}readVersion(e,t){let n=t.currentVersion;return n||(n=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let n=e;const{renderer:l,symbolizer:u,pixelFilter:m}=this;if(!this._isPicture()&&l&&u&&!m){await this._updateSymbolizer(u,l);const{bandIds:c}=this;n=await this._symbolize({pixelData:e,bandIds:c,symbolizer:u},t)}return n}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsCalculateVolume)throw new F("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=q(e),this.mosaicRule&&e.mosaicRule==null&&(e.mosaicRule=this.mosaicRule),jr(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new F("imagery-layer:compute-angles","this operation is not supported on the input image service");return Cr(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new F("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Or(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new F("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=q(e),this._applyMosaicAndRenderingRules(e),Mr(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new F("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=q(e),this._applyMosaicAndRenderingRules(e),_r(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new F("imagery-layer:measure-height","this operation is not supported on the input image service");return e=q(e),this._applyMosaicRule(e),Vr(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new F("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=q(e),this._applyMosaicRule(e),qr(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new F("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=q(e),this._applyMosaicRule(e),Jr(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new F("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=q(e),this._applyMosaicRule(e),Er(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new F("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new F("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Gr(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new F("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new F("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Lr(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t==null?void 0:t.get(e)}getFieldDomain(e,t){const n=this.getField(e);return n?n.domain:null}fetchImage(e,t,n,l={}){if(Yt(ct.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),e==null||t==null||n==null)throw new F("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,n,l)}async internalFetchImage(e,t,n,l={}){await this._updateCurrentRasterInfo();const u=this.getExportImageServiceParameters(e,t,n,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const w=document.createElement("canvas");return w.width=t,w.height=n,l.returnImageBitmap?{imageBitmap:await jt(w,`${a(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:w}}const{bandIds:d,rasterInfo:y}=this,g=((d==null?void 0:d.length)||y.bandCount)??0,f=t*n,v=y.pixelType,R=[];for(let w=0;w<g;w++)R.push(yt.createEmptyBand(v,f));return{pixelData:{pixelBlock:new yt({width:t,height:n,pixels:R,mask:new Uint8Array(f),pixelType:v}),extent:e}}}const m=!!l.requestAsImageElement&&!this.pixelFilter,c=m&&!!l.returnImageBitmap,p={imageServiceParameters:u,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:m,returnImageBitmap:c,signal:l.signal};return this._requestArrayBuffer(p)}async fetchPixels(e,t,n,l={}){await this._initJobHandler(),l.applyRendering&&await this._updateCurrentRasterInfo();const u=l.applyRendering?void 0:new O({layer:this,requestRawData:!0,interpolation:l.interpolation??"nearest",bandIds:l.bandIds??[]}),m=this.getExportImageServiceParameters(e,t,n,l.timeExtent,u);if(m==null)return{extent:e,pixelBlock:null};delete m.pixelType,delete m.bandIds,delete m.compressionQuality;const c={imageServiceParameters:m,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:l.signal},{pixelData:p}=await this._requestArrayBuffer(c);return p??{extent:e,pixelBlock:null}}fetchKeyProperties(e){return D(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new F("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):D(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>Jt.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const n={...t,query:this._getQueryParams()};return Wr(a(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var We,Ze,xe,ge,le;const{data:n}=await D(a(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),l=n==null?void 0:n.ics;if(!l)return;let u=null;try{u=(await D(a(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const m=this.version>=10.7?D(a(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(I=>I.data).catch(()=>({})):{},c=u.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:vt(c),outSR:"0:"+e},d=D(a(this.parsedUrl)+"/project",{query:this._getQueryParams(p),...t}).then(I=>I.data).catch(()=>({})),y=5,g=(u.xmin+u.xmax)/2,f=(u.ymax-u.ymin)/(y+1),v=u.ymin+f,R=[];for(let I=0;I<y;I++)R.push({x:g,y:v+f*I});const w={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:R}),inSR:vt(c),outSR:"0:"+e},h=D(a(this.parsedUrl)+"/project",{query:this._getQueryParams(w),...t}).then(I=>I.data).catch(()=>({})),A=await Promise.all([m,d,h]);let S=A[0].ipxf;if(S==null){const I=(We=l.geodataXform)==null?void 0:We.xf_0;((Ze=I==null?void 0:I.name)==null?void 0:Ze.toLowerCase())==="topup"&&((xe=I==null?void 0:I.coefficients)==null?void 0:xe.length)===6&&(S={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:I.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const j=ze.fromJSON((le=(ge=A[1])==null?void 0:ge.geometries)==null?void 0:le[0]);j&&(j.spatialReference=new se({wkid:0,imageCoordinateSystem:l}));const x=A[2].geometries?A[2].geometries.filter(I=>(I==null?void 0:I.x)!=null&&I.y!=null&&I.x!=="NaN"&&I.y!=="NaN"):[],U=x.length;if(U<3)return{ics:l,icsToPixelTransform:S,icsExtent:j,northDirection:null};let J=0,_=0,C=0,G=0;for(let I=0;I<U;I++)J+=x[I].x,_+=x[I].y,C+=x[I].x*x[I].x,G+=x[I].x*x[I].y;const Q=(U*G-J*_)/(U*C-J*J);let he=0;const Se=x[y-1].x>x[0].x,Ee=x[y-1].y>x[0].y;return Q===1/0?he=Ee?90:270:Q===0?he=Se?0:180:Q>0?he=Se?180*Math.atan(Q)/Math.PI:180*Math.atan(Q)/Math.PI+180:Q<0&&(he=Ee?180+180*Math.atan(Q)/Math.PI:360+180*Math.atan(Q)/Math.PI),{ics:l,icsToPixelTransform:S,icsExtent:j,northDirection:he}}async generateRasterInfo(e,t){var m;e=V(T,e);const n={...t,query:this._getQueryParams()};if(!e||((m=e.functionName)==null?void 0:m.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Ct(a(this.parsedUrl),this.sourceJSON,n);const l=Xr(e);if(!l)throw new F("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=Yi(a(this.parsedUrl),e,n);this._functionRasterInfos[l]=u;try{return await u}catch(c){throw this._functionRasterInfos[l]=null,c}}getExportImageServiceParameters(e,t,n,l,u){var h,A;e=e.clone().shiftCentralMeridian();const m=qe(e.spatialReference,a(this.parsedUrl));u??(u=this.exportImageServiceParameters);const c=u.toJSON(),{bandIds:p,noData:d}=c;let{renderingRule:y}=c;const g=(h=this.rasterFunction)==null?void 0:h.rasterFunctionDefinition,f=(A=this.renderer)==null?void 0:A.type,v=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(p!=null&&p.length&&this._hasRasterFunction(this.rasterFunction)&&!g&&v){const S={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}};if(y.rasterFunction==="Stretch")S.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=S;else if(y.rasterFunction==="Colormap"){const j=y.rasterFunctionArguments.Raster;(j==null?void 0:j.rasterFunction)==="Stretch"?(S.rasterFunctionArguments.Raster=j.rasterFunctionArguments.Raster,j.rasterFunctionArguments.Raster=S):(S.rasterFunctionArguments.Raster=j,y.rasterFunctionArguments.Raster=S)}else S.rasterFunctionArguments.Raster=y,y=S;c.bandIds=void 0}else c.bandIds=p==null?void 0:p.join(",");Array.isArray(d)&&d.length>0&&(c.noData=d.join(","));const R=this._processMultidimensionalIntersection(null,l,u.mosaicRule);if(R.isOutSide)return null;c.mosaicRule=R.mosaicRule!=null?JSON.stringify(R.mosaicRule):null,l=R.timeExtent,c.renderingRule=this._getRenderingRuleString(T.fromJSON(y));const w={};if(l!=null){const{start:S,end:j}=l.toJSON();S&&j&&S===j?w.time=""+S:S==null&&j==null||(w.time=`${S??"null"},${j??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:m,imageSR:m,size:t+","+n,...c,...w}}async getSamples(e,t){var l;if(!((l=await this._fetchCapabilities(t==null?void 0:t.signal))!=null&&l.operations.supportsGetSamples))throw new F("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=q(e);const{raster:n}=this;return n&&e.raster==null&&(e.raster=n),Ar(this.url,e,this._getRequestOptions(t))}async identify(e,t){var m;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new F("imagery-layer:identify","identify operation is not supported on the input image service");e=q(e),this.version<10.91&&((m=e.geometry)==null?void 0:m.type)==="extent"&&(e.geometry=ft.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new F("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),_t(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new F("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return zr(a(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new F("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Br(a(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new F("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return Qr(a(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new F("imagery-layer:find-images","findImages operation is not supported on the input image service");return kr(a(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new F("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Hr(a(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new ht({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new F("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Ur(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),rr(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),tr(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new F("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},$r(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ir(this.url,e,t)}async queryVisibleRasters(e,t){var j,x,U,J;if(!e)throw new F("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:m}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,p=null,d=null;const y=Ne.servicePixelValue.toLowerCase(),g=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(c=e.outFields.some(_=>!_.toLowerCase().startsWith(y)),this.version>=10.4)){const _=e.outFields.filter(G=>G.toLowerCase().startsWith(y)&&G.length>y.length).map(G=>{const Q=G.slice(y.length+1);return[this._updateRenderingRulesFunctionName(Q,g),Q]});p=_.map(G=>new T({functionName:G[0]})),d=_.map(G=>G[1]);const{rasterFunction:C}=this;p.length===0?C!=null&&C.functionName?(p.push(C),d.push(C.functionName)):p=null:C!=null&&C.functionName&&!p.some(G=>G.functionName===C.functionName)&&(p.push(C),d.push(C.functionName))}const f=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:v}=this;let R=e.timeExtent||this.timeExtent;if(v){const{isOutside:_,intersection:C}=dt(v,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(j=this.exportImageServiceParameters.mosaicRule)==null?void 0:j.multidimensionalDefinition});if(_)throw new F("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(C==null?void 0:C.timeExtent)!=null&&(R=C.timeExtent)}const w=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,R);let h=e.geometry;this.version<10.91&&(h==null?void 0:h.type)==="extent"&&(h=ft.fromExtent(h));const A=this._getQueryParams({geometry:h,timeExtent:R,mosaicRule:w,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:n,returnCatalogItems:c,returnGeometry:f,raster:this.raster,maxItemCount:u?1:null});delete A.f;const S=new M(A);try{await this._generateRasterInfo(this.rasterFunction);const _=await _t(this.url,S,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),C=e.outFields,G=_.value!=null&&_.value.toLowerCase().includes("nodata"),Q=c&&!f&&((x=_==null?void 0:_.catalogItems)==null?void 0:x.features.length)&&(m||!G),he=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?bi({rasterInfo:this.rasterInfo,multidimensionalDefinition:w==null?void 0:w.multidimensionalDefinition,timeExtent:R,multidimensionalSubset:this.multidimensionalSubset}):null;if(!Q)return this._processVisibleRastersResponse(_,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:m,templateFields:C,effectiveMultidimensionalDefinition:he});const Se=this.objectIdField||"ObjectId",Ee=((U=_.catalogItems)==null?void 0:U.features)??[],We=Ee.map(ge=>{var le;return(le=ge.attributes)==null?void 0:le[Se]}),Ze=new ht({objectIds:We,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[Se]}),xe=await this.queryRasters(Ze);return(J=xe==null?void 0:xe.features)!=null&&J.length&&xe.features.forEach(ge=>{Ee.forEach(le=>{le.attributes[Se]===ge.attributes[Se]&&ge.geometry&&(le.geometry=ge.geometry.clone(),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(_,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:m,templateFields:C,effectiveMultidimensionalDefinition:he})}catch{throw new F("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=D(a(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(m=>{var c;return(c=m.data)==null?void 0:c.statistics}),l=D(a(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(m=>{var c;return(c=m.data)==null?void 0:c.histograms}),u=await Promise.all([n,l]);return u[0]&&u[0].forEach(m=>{m.avg=m.mean,m.stddev=m.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return Si(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Ct(a(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(m=>(this._set("serviceRasterInfo",m),this._set("multidimensionalInfo",m.multidimensionalInfo),er(m,t),m)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,l,u]).then(m=>{m[1]?this._set("rasterInfo",m[1]):this._set("rasterInfo",m[0]),m[2]&&this._set("rasterFunctionInfos",m[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),ct.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([ei(()=>this.rasterFunction,p=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(p).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:c}=this;c.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(e,t){var v;const n=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||t==null||(n==null?void 0:n.startField)==null)return e;const{startField:u}=n,m=l.variables.some(R=>R.dimensions.some(w=>w.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(v=e.multidimensionalDefinition)==null?void 0:v.filter(R=>R.dimensionName!==m),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const c=e.multidimensionalDefinition.filter(R=>R.dimensionName===m),p=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,y=p==null||d==null||p===d,g=y?[p||d]:[[p,d]],f=this.version>=10.8;if(c.length)c.forEach(R=>{R.dimensionName===m&&(f?(R.dimensionName=null,R.isSlice=!1,R.values=[]):(R.isSlice=y,R.values=g))});else if(!f){const R=e.multidimensionalDefinition.filter(w=>w.variableName!=null&&w.dimensionName==null);R.length?R.forEach(w=>{w.dimensionName=m,w.isSlice=y,w.values=g}):e.multidimensionalDefinition.push(new xi({variableName:"",dimensionName:m,isSlice:y,values:g}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new F("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?V(ht,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:n}=this;return e.type==="unique-value"&&this._hasRasterFunction(n)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Oi(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var n;let t=this.sourceJSON;if(!t){const{data:l,ssl:u}=await D(a(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=l,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((n=t.capabilities)==null?void 0:n.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new F("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var l;if(!e)return!1;const t=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((l=e.fields)==null?void 0:l.length)>1);return t||n}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:n}=e,l=(t==null?void 0:t.toLowerCase())==="resample",u=(n==null?void 0:n.ResampleType)||(n==null?void 0:n.resampleType);return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var l,u,m;const t=this._isPicture(),{rasterInfo:n}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const c=(u=(l=this.mosaicRule)==null?void 0:l.multidimensionalDefinition)==null?void 0:u[0].variableName,p=_i({variableName:c,rasterFunctionName:(m=this.rasterFunction)==null?void 0:m.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&n.bandCount>=3){const y=(p==null?void 0:p.bandIds)??Mi(n);!y||n.bandCount===3&&y[0]===0&&y[1]===1&&y[2]===2||(this.bandIds=y)}e||(e=(p==null?void 0:p.renderer)??Ai(n,{bandIds:this.bandIds,variableName:this.rasterFunction?null:c}));const d=Vi(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=n):this.symbolizer=new zi({rendererJSON:d,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:n}=this;return{raster:t,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,n){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):Pt(e,t,n)}async _getRasterFunctionInfos(e){var n;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(n=(await D(a(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:n.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:l,signal:u}=e;if(n&&this._canRequestImageElement(t.format)){const f=`${a(this.parsedUrl)}/exportImage`,{data:v}=await D(f,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return v instanceof Blob?{imageBitmap:await jt(v,f,u),params:t}:{imageOrCanvasElement:v,params:t}}const m=this._initJobHandler(),c=D(a(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),p=(await Promise.all([c,m]))[0].data,d=t.format||"jpgpng";let y=d;if(y!=="bsq"&&y!=="bip"&&(y=Bi(p)),!y)throw new F("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const g={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(y==="png"||y==="jpg")?Pt(p,{useCanvas:!0,...t},g):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},g)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var n;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Ii(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new te;const l=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((n=this.rasterFunction.functionName)==null?void 0:n.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:m})=>u&&u!=="*"||m),!(l!=null&&l.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var A,S,j;t=t||{};const n=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:m,templateFields:c}=t,p=e.processedValues;let d=(A=e.catalogItems)==null?void 0:A.features,y=((j=(S=e.properties)==null?void 0:S.Values)==null?void 0:j.map(x=>x.replaceAll(/ /gi,", ")))||[];const g=this.objectIdField||"ObjectId",f=typeof n=="string"&&n.toLowerCase().includes("nodata"),v=[];if(n&&!d&&(!f||u)){const x={};x[g]=0,y=[n],d=[new ti({geometry:this.fullExtent,attributes:x})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&Fi(this.rasterFields,x,t.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,c),f&&!u&&(d=[]);const{itemPixelValue:R,servicePixelValue:w}=Ne,h=this.rasterFields.some(x=>x.name===R);for(let x=0;x<d.length;x++){const U=d[x];if(n!=null){const J=y[x],_=this.rasterFunction&&p&&p.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?p[l.indexOf(this.rasterFunction.functionName)]:n;if(J.toLowerCase()==="nodata"&&!u)continue;h&&(U.attributes[R]=J),U.attributes[w]=_,this._updateFeatureWithMagDirValues(U,J);const C=this.fields&&this.fields.length>0;let G=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?C?J:n:_;this.rasterFunction||(G=C?J:n),this._updateFeatureWithRasterAttributeTableValues(U,G)}if(U.sourceLayer=U.layer=this,m&&this._updateFeatureWithDomainValues(U),l&&p&&l.length===p.length)for(let J=0;J<l.length;J++){const _=`${Ne.servicePixelValue}.${l[J]}`;U.attributes[_]=p[J]}v.push(d[x])}return v}_processMultidimensionalIntersection(e,t,n){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:t,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,t)};if(l){const{isOutside:u,intersection:m}=dt(l,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(m==null?void 0:m.timeExtent)!=null&&(t=m.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,t),n==null?void 0:n.multidimensionalDefinition){const{isOutside:u}=dt(l,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,t){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(n==null)return;const{features:l,fields:u}=n,m=u.map(p=>p.name).find(p=>p.toLowerCase()==="value");if(!m)return;const c=l.filter(p=>p.attributes[m]===(t!=null?parseInt(t,10):null));c&&c[0]&&u.forEach(p=>{const d=Di+p.name;e.attributes[d]=c[0].attributes[p.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const n=t.split(/,\s*/).map(p=>parseFloat(p)),l=n.map(p=>[p]),u=n.map(p=>({minValue:p,maxValue:p,noDataValue:null})),m=new yt({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:m,extent:new ze(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[m.pixels[0][0],m.pixels[1][0]]:Zi([m.pixels[0][0],m.pixels[1][0]]);e.attributes[Ne.magnitude]=c[0],e.attributes[Ne.direction]=c[1]}_updateFeatureWithDomainValues(e){var t;(t=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value"))==null||t.forEach(n=>{const l=e.attributes[n.name];if(l!=null){const u=n.domain.codedValues.find(m=>m.code===l);u&&(e.attributes[n.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const n=this.fieldsIndex;n!=null&&e.forEach(l=>{var u;if(l!=null&&l.attributes)for(const m of t){const c=(u=n.get(m))==null?void 0:u.name;c&&c!==m&&(l.attributes[m]=l.attributes[c],delete l.attributes[c])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(n)?t.get(n):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:n,rasterFunction:l}=this;l&&e.rasterFunction==null&&(e.rasterFunction=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),t&&e.raster==null&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:n}=this;n&&e.mosaicRule==null&&(e.mosaicRule=n),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var A;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(S=>S.trim()):["image","catalog"],{currentVersion:n,maxRecordCount:l}=e,u=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!((A=e.extent)!=null&&A.spatialReference)),p=t.includes("edit"),d=t.includes("mensuration")&&c,y=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(S=>S.trim()),g=d&&y.includes("basic"),f=this._isMosaicDataset(e)&&t.includes("catalog"),v=t.includes("download"),R=n>=10.7&&m||n>=11.4&&(m||d&&y.includes("3d")),w=f&&e.fields&&e.fields.length>0,h=w&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsImageToMap:n>=11.2&&f,supportsImageToMapMultiray:n>=11.2&&f,supportsMapToImage:n>=11.2&&f,supportsFindImages:n>=11.2&&f,supportsGetImageUrl:n>=11.3&&v,supportsMeasure:d,supportsMeasureFromImage:n>=11.2,supportsDownload:v,supportsQuery:w,supportsGetSamples:n>=10.2&&u,supportsProject:n>=10.3&&u,supportsComputeStatisticsHistograms:n>=10.4&&u,supportsQueryBoundary:n>=10.6&&u,supportsCalculateVolume:R,supportsComputePixelLocation:n>=10.7&&f,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&f,supportsAdd:p,supportsDelete:p,supportsEditing:p,supportsUpdate:p,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!!(h!=null&&h.supportsStatistics),supportsOrderBy:!!(h!=null&&h.supportsOrderBy),supportsDistinct:!!(h!=null&&h.supportsDistinct),supportsPagination:!!(h!=null&&h.supportsPagination),supportsPaginationOnAggregatedQueries:!!(h!=null&&h.supportsPaginationOnAggregatedQueries),supportsStandardizedQueriesOnly:!!(h!=null&&h.useStandardizedQueries),supportsPercentileStatistics:!!(h!=null&&h.supportsPercentileStatistics),supportsCentroid:!!(h!=null&&h.supportsReturningGeometryCentroid),supportsCurrentUser:!1,supportsDistance:!!(h!=null&&h.supportsQueryWithDistance),supportsExtent:!!(h!=null&&h.supportsReturningQueryExtent),supportsGeometryProperties:!!(h!=null&&h.supportsReturningGeometryProperties),supportsHavingClause:!!(h!=null&&h.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:(h==null?void 0:h.supportsSqlExpression)??!!h,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(h!=null&&h.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:g,supportsAreaAndPerimeter:g,supportsPointOrCentroid:g,supportsHeightFromBaseAndTop:d&&y.includes("base-top height"),supportsHeightFromBaseAndTopShadow:d&&y.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:d&&y.includes("top-top shadow height"),supports3D:d&&y.includes("3d")}}}};function a(e){return(e==null?void 0:e.path)??""}return s([o({clonable:!1})],i.prototype,"_functionRasterInfos",void 0),s([o({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),s([$("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),s([o({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),s([o()],i.prototype,"adjustAspectRatio",void 0),s([o({type:[ke],json:{write:!0}})],i.prototype,"bandIds",void 0),s([$("bandIds")],i.prototype,"readBandIds",null),s([o({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),s([$("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),s([o({type:Number})],i.prototype,"compressionQuality",void 0),s([N("compressionQuality")],i.prototype,"writeCompressionQuality",null),s([o({type:Number})],i.prototype,"compressionTolerance",void 0),s([N("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),s([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),s([$("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),s([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([o({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),s([o()],i.prototype,"rasterInfo",void 0),s([o({readOnly:!0,type:[ki]})],i.prototype,"fields",void 0),s([o({readOnly:!0})],i.prototype,"fieldsIndex",null),s([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],i.prototype,"format",null),s([$("service","format",["serviceDataType"])],i.prototype,"readFormat",null),s([o({type:ze})],i.prototype,"fullExtent",void 0),s([o({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),s([o({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),s([o({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),s([o({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],i.prototype,"interpolation",void 0),s([o()],i.prototype,"minScale",void 0),s([$("service","minScale")],i.prototype,"readMinScale",null),s([o()],i.prototype,"maxScale",void 0),s([$("service","maxScale")],i.prototype,"readMaxScale",null),s([o({type:te})],i.prototype,"mosaicRule",null),s([$("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),s([N("mosaicRule")],i.prototype,"writeMosaicRule",null),s([o()],i.prototype,"multidimensionalInfo",void 0),s([o({type:Ni,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),s([o({json:{type:ke}})],i.prototype,"noData",void 0),s([N("noData")],i.prototype,"writeNoData",null),s([o({type:String,json:{type:Qe.jsonValues,read:Qe.read,write:Qe.write}})],i.prototype,"noDataInterpretation",void 0),s([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),s([$("objectIdField")],i.prototype,"readObjectIdField",null),s([o({readOnly:!0})],i.prototype,"geometryType",void 0),s([o({})],i.prototype,"typeIdField",void 0),s([o({})],i.prototype,"types",void 0),s([o({readOnly:!0})],i.prototype,"parsedUrl",null),s([o({type:Function})],i.prototype,"pixelFilter",void 0),s([o()],i.prototype,"raster",void 0),s([o({readOnly:!0})],i.prototype,"sourceType",void 0),s([$("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),s([o()],i.prototype,"viewId",void 0),s([o()],i.prototype,"renderer",null),s([o({types:Pi,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ji,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),s([$("internalRenderer")],i.prototype,"readRenderer",null),s([N("internalRenderer")],i.prototype,"writeRenderer",null),s([o({clonable:!1})],i.prototype,"symbolizer",void 0),s([o(ui)],i.prototype,"opacity",void 0),s([o({readOnly:!0})],i.prototype,"rasterFields",null),s([o({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),s([o({type:T,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),s([$("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),s([o({readOnly:!0})],i.prototype,"serviceDataType",void 0),s([o({readOnly:!0,type:se})],i.prototype,"spatialReference",void 0),s([$("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),s([o({type:Pe.apiValues,json:{read:Pe.read,type:Pe.jsonValues}})],i.prototype,"pixelType",void 0),s([N("pixelType")],i.prototype,"writePixelType",null),s([o({constructOnly:!0,type:At})],i.prototype,"serviceRasterInfo",void 0),s([o()],i.prototype,"sourceJSON",void 0),s([o(pi)],i.prototype,"url",void 0),s([o({readOnly:!0})],i.prototype,"version",void 0),s([$("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=s([b("esri.layers.mixins.ArcGISImageService")],i),i};let H=class extends nr(pr(ur(ai(or(Xi(Yr(Ti(lr(ar(sr(si(ye.ClonableMixin(ni))))))))))))){constructor(...r){super(...r),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=kt(async(i,a,e)=>{const{save:t,saveAs:n}=await Wt(()=>import("./imageryUtils-DHYzIRVX-tya_JN7S.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13]),import.meta.url);switch(i){case Ke.SAVE:return t(this,a);case Ke.SAVE_AS:return n(this,e,a)}})}normalizeCtorArgs(r,i){return typeof r=="string"?{url:r,...i}:r}load(r){const i=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(Zt).then(()=>this._fetchService(i))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(r){this._set("legendEnabled",r)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(r){this._set("listMode",r)}writeOperationalLayerType(r,i,a){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[a]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var r;return!(!this.raster||!((r=this.url)!=null&&r.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(r){const{rasterFields:i}=this,a=new Set,e=Ne.itemPixelValue.toLowerCase(),t=this.sourceType==="raster-dataset",n=ci.toLowerCase(),l=`${Ne.servicePixelValue.toLowerCase()}.`;for(const c of i){const p=c.name.toLowerCase();p===e||p.startsWith(l)||t&&p.startsWith(n)||a.add(c.name)}const u=cr({fields:i,title:this.title},{...r,visibleFieldNames:a}),{rasterInfo:m}=this;return u!=null&&u.fieldInfos&&m&&mi(u.fieldInfos,m),u}queryFeatures(r,i){return this.queryRasters(r,i).then(a=>{if(a!=null&&a.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}async save(r){return this._debouncedSaveOperations(Ke.SAVE,r)}async saveAs(r,i){return this._debouncedSaveOperations(Ke.SAVE_AS,i,r)}serviceSupportsSpatialReference(r){return mr(this,r)}write(r,i){if(!this._isPreviewLayer)return super.write(r,i);if(i!=null&&i.messages){const a=`${i.origin}/${i.layerContainerType||"operational-layers"}`;i.messages.push(new F("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${a}'`,{layer:this}))}return null}};s([o(oi)],H.prototype,"legendEnabled",null),s([o({type:["show","hide"]})],H.prototype,"listMode",null),s([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],H.prototype,"isReference",void 0),s([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],H.prototype,"operationalLayerType",void 0),s([N("web-map","operationalLayerType")],H.prototype,"writeOperationalLayerType",null),s([o(li)],H.prototype,"popupEnabled",void 0),s([o({type:Kt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],H.prototype,"popupTemplate",void 0),s([o({readOnly:!0})],H.prototype,"defaultPopupTemplate",null),s([o({readOnly:!0,json:{read:!1}})],H.prototype,"type",void 0),s([o({readOnly:!0})],H.prototype,"_isPreviewLayer",null),H=s([b("esri.layers.ImageryLayer")],H);const Tn=H;export{Tn as default};
