import{m as i}from"./utils-BO8hgPs3-CHxondnJ.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-i0NNTT6y.js";import a from"./TopFeaturesQuery-BmMRhRdq-CZaBUEOu.js";import"./index-DRDU_nTl.js";import"./normalizeUtils-u00NGW3M-BaTNjyav.js";import"./normalizeUtilsCommon-ClagynAA-CL_yyNFN.js";import"./utils-DpLVEUvg-DfFfnFbm.js";import"./query-COAsogFA-6hHMIuCB.js";import"./pbfQueryUtils-aBcHX3TJ-CSKrVzL4.js";import"./pbf-hoLeQyp2-Bi5kiMpn.js";import"./memoryEstimations-DeWfxwaV-CXv6j7jy.js";import"./OptimizedGeometry-pzfNw1AT-ML0atVKH.js";import"./OptimizedFeature-mIz_HhJg-Doe9CXLP.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-CdG8ZeiC.js";import"./projectionUtils-B-CplN3q-B7QPK1Xx.js";import"./TimeExtent-Cf2Pienb-B-fbcJgZ.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
