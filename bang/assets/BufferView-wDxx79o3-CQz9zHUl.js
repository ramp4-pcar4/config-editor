import{m as _e}from"./vec2-BnynUbeJ-CKtGJQAy.js";import{A as et}from"./vec32-Cj8pVsU0-Cl_uQ3p6.js";import{y as tt}from"./vec42-D8CJyqHG-DnfLTeQH.js";import{o as st}from"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";let ue=globalThis.Float16Array;function ht(...n){return new(ue??Float32Array)(...n)}function re(){return ue}let ie=!!ue;var o;let Xe=(o=class{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.elementCount=9;const i=this.TypedArrayConstructor;s===void 0&&(s=9*i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}getMat(e,t){let r=e*this.typedBufferStride;for(let s=0;s<9;s++)t[s]=this.typedBuffer[r++];return t}setMat(e,t){let r=e*this.typedBufferStride;for(let s=0;s<9;s++)this.typedBuffer[r++]=t[s]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}copyFrom(e,t,r){const s=this.typedBuffer,f=t.typedBuffer;let i=e*this.typedBufferStride,u=r*t.typedBufferStride;for(let c=0;c<9;++c)s[i++]=f[u++]}get buffer(){return this.typedBuffer.buffer}},o.ElementCount=9,o);var a;let Ze=(a=class{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.elementCount=16;const i=this.TypedArrayConstructor;s===void 0&&(s=16*i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}getMat(e,t){let r=e*this.typedBufferStride;for(let s=0;s<16;s++)t[s]=this.typedBuffer[r++];return t}setMat(e,t){let r=e*this.typedBufferStride;for(let s=0;s<16;s++)this.typedBuffer[r++]=t[s]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}copyFrom(e,t,r){this.copyFromTypedBuffer(e,t.typedBuffer,r*t.typedBufferStride)}copyFromTypedBuffer(e,t,r){const s=this.typedBuffer;let f=e*this.typedBufferStride;for(let i=0;i<16;++i)s[f++]=t[r++]}get buffer(){return this.typedBuffer.buffer}},a.ElementCount=16,a);const ne=class ne{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.elementCount=1;const i=this.TypedArrayConstructor;s===void 0&&(s=i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.stride=s,this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride)}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}get(e){return this.typedBuffer[e*this.typedBufferStride]}set(e,t){this.typedBuffer[e*this.typedBufferStride]=t}get buffer(){return this.typedBuffer.buffer}};ne.ElementCount=1;let h=ne;var B;let l=(B=class{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.start=r,this.elementCount=2;const i=this.TypedArrayConstructor;s===void 0&&(s=2*i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}getVec(e,t){return e*=this.typedBufferStride,_e(t,this.typedBuffer[e],this.typedBuffer[e+1])}setVec(e,t){e*=this.typedBufferStride,this.typedBuffer[e++]=t[0],this.typedBuffer[e]=t[1]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r){e*=this.typedBufferStride,this.typedBuffer[e++]=t,this.typedBuffer[e]=r}copyFrom(e,t,r){const s=this.typedBuffer,f=t.typedBuffer;let i=e*this.typedBufferStride,u=r*t.typedBufferStride;s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}},B.ElementCount=2,B);var E;let p=(E=class{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.elementCount=3;const i=this.TypedArrayConstructor;s===void 0&&(s=3*i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}getVec(e,t){return e*=this.typedBufferStride,et(t,this.typedBuffer[e],this.typedBuffer[e+1],this.typedBuffer[e+2])}setVec(e,t){e*=this.typedBufferStride,this.typedBuffer[e++]=t[0],this.typedBuffer[e++]=t[1],this.typedBuffer[e]=t[2]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r,s){e*=this.typedBufferStride,this.typedBuffer[e++]=t,this.typedBuffer[e++]=r,this.typedBuffer[e]=s}copyFrom(e,t,r){const s=this.typedBuffer,f=t.typedBuffer;let i=e*this.typedBufferStride,u=r*t.typedBufferStride;s[i++]=f[u++],s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}},E.ElementCount=3,E);const ce=class ce{constructor(e,t,r=0,s,f){this.TypedArrayConstructor=e,this.start=r,this.elementCount=4;const i=this.TypedArrayConstructor;s===void 0&&(s=4*i.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:r;this.typedBuffer=f==null?new i(t,u):new i(t,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(e,t,r=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new e(this.buffer,s,this.stride,s+r*this.stride)}getVec(e,t){return e*=this.typedBufferStride,tt(t,this.typedBuffer[e++],this.typedBuffer[e++],this.typedBuffer[e++],this.typedBuffer[e])}setVec(e,t){e*=this.typedBufferStride,this.typedBuffer[e++]=t[0],this.typedBuffer[e++]=t[1],this.typedBuffer[e++]=t[2],this.typedBuffer[e]=t[3]}get(e,t){return this.typedBuffer[e*this.typedBufferStride+t]}set(e,t,r){this.typedBuffer[e*this.typedBufferStride+t]=r}setValues(e,t,r,s,f){e*=this.typedBufferStride,this.typedBuffer[e++]=t,this.typedBuffer[e++]=r,this.typedBuffer[e++]=s,this.typedBuffer[e]=f}copyFrom(e,t,r){const s=this.typedBuffer,f=t.typedBuffer;let i=e*this.typedBufferStride,u=r*t.typedBufferStride;s[i++]=f[u++],s[i++]=f[u++],s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}};ce.ElementCount=4;let y=ce,rt=class{constructor(n){this.message=n}toString(){return`AssertException: ${this.message}`}};function fe(n,e="Assertion"){if(!n){const t=new Error(e).stack;throw new rt(`${e} at ${t}`)}}function yt(n,e){n||(e=e||"",console.warn("Verify failed: "+e+`
`+new Error("verify").stack))}function lt(n,e,t,r){let s,f=(t[0]-n[0])/e[0],i=(r[0]-n[0])/e[0];f>i&&(s=f,f=i,i=s);let u=(t[1]-n[1])/e[1],c=(r[1]-n[1])/e[1];if(u>c&&(s=u,u=c,c=s),f>c||u>i)return!1;u>f&&(f=u),c<i&&(i=c);let A=(t[2]-n[2])/e[2],d=(r[2]-n[2])/e[2];return A>d&&(s=A,A=d,d=s),!(f>d||A>i)&&(d<i&&(i=d),!(i<0))}function pt(n,e,t,r,s,f=st()){const i=(r[s]-t[s])*(e[0]-n[0])-(r[0]-t[0])*(e[s]-n[s]),u=(r[0]-t[0])*(n[s]-t[s])-(r[s]-t[s])*(n[0]-t[0]);if(i===0)return!1;const c=u/i;return f[0]=n[0]+c*(e[0]-n[0]),f[1]=n[s]+c*(e[s]-n[s]),!0}function dt(n,e){return Math.log(n)/Math.log(e)}function ot(n){return n[0]===1&&n[1]===0&&n[2]===0&&n[3]===0&&n[4]===0&&n[5]===1&&n[6]===0&&n[7]===0&&n[8]===0&&n[9]===0&&n[10]===1&&n[11]===0&&n[15]===1}const he=class he extends h{constructor(e,t=0,r,s){fe(ie),super(re(),e,t,r,s),this.elementType="f16"}};he.ElementType="f16";let le=he;const ye=class ye extends h{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}};ye.ElementType="f32";let pe=ye;const b=class b extends l{constructor(e,t=0,r,s){fe(ie),super(re(),e,t,r,s),this.elementType="f16"}slice(e,t){return this.sliceBuffer(b,e,t)}};b.ElementType="f16";let de=b;const x=class x extends l{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}slice(e,t){return this.sliceBuffer(x,e,t)}};x.ElementType="f32";let oe=x;const g=class g extends p{constructor(e,t=0,r,s){fe(ie),super(re(),e,t,r,s),this.elementType="f16"}slice(e,t){return this.sliceBuffer(g,e,t)}};g.ElementType="f16";let ae=g;const T=class T extends p{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}slice(e,t){return this.sliceBuffer(T,e,t)}static fromTypedArray(e,t){return new T(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}};T.ElementType="f32";let Be=T;const M=class M extends y{constructor(e,t=0,r,s){fe(ie),super(re(),e,t,r,s),this.elementType="f16"}slice(e,t){return this.sliceBuffer(M,e,t)}};M.ElementType="f16";let Ee=M;const L=class L extends y{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}slice(e,t){return this.sliceBuffer(L,e,t)}};L.ElementType="f32";let Te=L;const C=class C extends Xe{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}slice(e,t){return this.sliceBuffer(C,e,t)}};C.ElementType="f32";let me=C;const w=class w extends Xe{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(w,e,t)}};w.ElementType="f64";let Se=w;const N=class N extends Ze{constructor(e,t=0,r,s){super(Float32Array,e,t,r,s),this.elementType="f32"}slice(e,t){return this.sliceBuffer(N,e,t)}};N.ElementType="f32";let Ae=N;const P=class P extends Ze{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(P,e,t)}};P.ElementType="f64";let be=P;const R=class R extends h{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(R,e,t)}};R.ElementType="f64";let xe=R;const Y=class Y extends l{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(Y,e,t)}};Y.ElementType="f64";let ge=Y;const m=class m extends p{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(m,e,t)}static fromTypedArray(e,t){return new m(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}};m.ElementType="f64";let Me=m;const F=class F extends y{constructor(e,t=0,r,s){super(Float64Array,e,t,r,s),this.elementType="f64"}slice(e,t){return this.sliceBuffer(F,e,t)}};F.ElementType="f64";let Le=F;const I=class I extends h{constructor(e,t=0,r,s){super(Uint8Array,e,t,r,s),this.elementType="u8"}slice(e,t){return this.sliceBuffer(I,e,t)}};I.ElementType="u8";let Ce=I;const O=class O extends l{constructor(e,t=0,r,s){super(Uint8Array,e,t,r,s),this.elementType="u8"}slice(e,t){return this.sliceBuffer(O,e,t)}};O.ElementType="u8";let we=O;const S=class S extends p{constructor(e,t=0,r,s){super(Uint8Array,e,t,r,s),this.elementType="u8"}slice(e,t){return this.sliceBuffer(S,e,t)}static fromTypedArray(e,t){return new S(e.buffer,e.byteOffset,t,e.byteOffset+e.byteLength)}};S.ElementType="u8";let Ne=S;const U=class U extends y{constructor(e,t=0,r,s){super(Uint8Array,e,t,r,s),this.elementType="u8"}slice(e,t){return this.sliceBuffer(U,e,t)}};U.ElementType="u8";let Pe=U;const V=class V extends h{constructor(e,t=0,r,s){super(Uint16Array,e,t,r,s),this.elementType="u16"}slice(e,t){return this.sliceBuffer(V,e,t)}};V.ElementType="u16";let Re=V;const v=class v extends l{constructor(e,t=0,r,s){super(Uint16Array,e,t,r,s),this.elementType="u16"}slice(e,t){return this.sliceBuffer(v,e,t)}};v.ElementType="u16";let Ye=v;const $=class $ extends p{constructor(e,t=0,r,s){super(Uint16Array,e,t,r,s),this.elementType="u16"}slice(e,t){return this.sliceBuffer($,e,t)}};$.ElementType="u16";let Fe=$;const k=class k extends y{constructor(e,t=0,r,s){super(Uint16Array,e,t,r,s),this.elementType="u16"}slice(e,t){return this.sliceBuffer(k,e,t)}};k.ElementType="u16";let Ie=k;const j=class j extends h{constructor(e,t=0,r,s){super(Uint32Array,e,t,r,s),this.elementType="u32"}slice(e,t){return this.sliceBuffer(j,e,t)}};j.ElementType="u32";let Oe=j;const q=class q extends l{constructor(e,t=0,r,s){super(Uint32Array,e,t,r,s),this.elementType="u32"}slice(e,t){return this.sliceBuffer(q,e,t)}};q.ElementType="u32";let Ue=q;const z=class z extends p{constructor(e,t=0,r,s){super(Uint32Array,e,t,r,s),this.elementType="u32"}slice(e,t){return this.sliceBuffer(z,e,t)}};z.ElementType="u32";let Ve=z;const D=class D extends y{constructor(e,t=0,r,s){super(Uint32Array,e,t,r,s),this.elementType="u32"}slice(e,t){return this.sliceBuffer(D,e,t)}};D.ElementType="u32";let ve=D;const G=class G extends h{constructor(e,t=0,r,s){super(Int8Array,e,t,r,s),this.elementType="i8"}slice(e,t){return this.sliceBuffer(G,e,t)}};G.ElementType="i8";let $e=G;const H=class H extends l{constructor(e,t=0,r,s){super(Int8Array,e,t,r,s),this.elementType="i8"}slice(e,t){return this.sliceBuffer(H,e,t)}};H.ElementType="i8";let ke=H;const J=class J extends p{constructor(e,t=0,r,s){super(Int8Array,e,t,r,s),this.elementType="i8"}slice(e,t){return this.sliceBuffer(J,e,t)}};J.ElementType="i8";let je=J;const K=class K extends y{constructor(e,t=0,r,s){super(Int8Array,e,t,r,s),this.elementType="i8"}slice(e,t){return this.sliceBuffer(K,e,t)}};K.ElementType="i8";let qe=K;const Q=class Q extends h{constructor(e,t=0,r,s){super(Int16Array,e,t,r,s),this.elementType="i16"}slice(e,t){return this.sliceBuffer(Q,e,t)}};Q.ElementType="i16";let ze=Q;const W=class W extends l{constructor(e,t=0,r,s){super(Int16Array,e,t,r,s),this.elementType="i16"}slice(e,t){return this.sliceBuffer(W,e,t)}};W.ElementType="i16";let De=W;const X=class X extends p{constructor(e,t=0,r,s){super(Int16Array,e,t,r,s),this.elementType="i16"}slice(e,t){return this.sliceBuffer(X,e,t)}};X.ElementType="i16";let Ge=X;const Z=class Z extends y{constructor(e,t=0,r,s){super(Int16Array,e,t,r,s),this.elementType="i16"}slice(e,t){return this.sliceBuffer(Z,e,t)}};Z.ElementType="i16";let He=Z;const _=class _ extends h{constructor(e,t=0,r,s){super(Int32Array,e,t,r,s),this.elementType="i32"}slice(e,t){return this.sliceBuffer(_,e,t)}};_.ElementType="i32";let Je=_;const ee=class ee extends l{constructor(e,t=0,r,s){super(Int32Array,e,t,r,s),this.elementType="i32"}slice(e,t){return this.sliceBuffer(ee,e,t)}};ee.ElementType="i32";let Ke=ee;const te=class te extends p{constructor(e,t=0,r,s){super(Int32Array,e,t,r,s),this.elementType="i32"}slice(e,t){return this.sliceBuffer(te,e,t)}};te.ElementType="i32";let Qe=te;const se=class se extends y{constructor(e,t=0,r,s){super(Int32Array,e,t,r,s),this.elementType="i32"}slice(e,t){return this.sliceBuffer(se,e,t)}};se.ElementType="i32";let We=se;export{Oe as $,le as B,me as C,$e as D,pe as E,Le as F,ke as G,je as H,Ce as I,qe as J,ze as K,Te as L,Ee as M,Ae as N,we as O,be as P,De as Q,xe as R,Ne as S,Be as T,Pe as U,Re as V,Ge as W,He as X,ge as Y,Je as Z,Fe as _,ie as a,de as b,fe as c,ot as d,Qe as e,dt as f,ae as g,ht as h,pt as i,Ue as j,Ie as k,yt as l,Me as m,re as o,lt as p,Ve as q,We as s,Ke as t,Ye as v,Se as w,oe as x,ve as z};
