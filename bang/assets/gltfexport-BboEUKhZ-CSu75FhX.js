import{du as S,gD as v,fk as q,d2 as re,u as k,jM as ne,ay as ae,D as oe,j5 as ce,h as $,cI as he,e7 as fe,a6 as ue}from"./index-12gn5LMs.js";import{O as le,X as de}from"./quat-DQgq9Ar5-BkBPusdJ.js";import{e as me,n as pe,r as _e}from"./quatf64-C16JxGFv-BKWK1F8U.js";import{R as j,A as L,r as W,S as ge,l as we}from"./vec32-Cj8pVsU0-DilQFd61.js";import{l as Ee}from"./MeshComponent-D5ytf0sY-DN2WiIeb.js";import{j as Ae}from"./vertexSpaceConversion-DrPwe-Ch-CnZhK6YV.js";import{D as d,U as b}from"./enums-wEDHPbCF-Cf76M5_x.js";import{g as U}from"./resourceUtils-Tz7BBTTs-C9dfkZdR.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./imageUtils-D3tfFRL_-BNI-HkrL.js";import"./meshProperties-D3dLIiIV-CfHVFTP-.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./mat4-OOmHNWi7-DxHlGyKX.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-COZABSzS.js";import"./computeTranslationToOriginAndRotation-e-ft1lOz-DQ2czyRq.js";import"./projectionUtils-B-CplN3q-BJPnkKI4.js";import"./projectPointToVector-BZJhoF_5-nT73zLia.js";import"./meshVertexSpaceUtils-CCr86FVF-DOiojgBp.js";import"./MeshLocalVertexSpace-Cfxtmv6L-DsqLb1ek.js";import"./vec3-lTcIGC_C-BmAZaq-j.js";import"./BufferView-wDxx79o3-BfSW-RMy.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./vec4-FWCYsiir-CCdPb-mO.js";import"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";var O;(function(t){t[t.JSON=1313821514]="JSON",t[t.BIN=5130562]="BIN"})(O||(O={}));var E;let Te=(E=class{constructor(e,s){if(!e)throw new Error("GLB requires a JSON gltf chunk");this._length=E.HEADER_SIZE,this._length+=E.CHUNK_HEADER_SIZE;const i=ye(e);if(this._length+=X(i.byteLength,4),s&&(this._length+=E.CHUNK_HEADER_SIZE,this._length+=s.byteLength,s.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const r=this._writeChunk(i,12,O.JSON,32);s&&this._writeChunk(s,r,O.BIN)}_writeHeader(){this._outView.setUint32(0,E.MAGIC,!0),this._outView.setUint32(4,E.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(e,s,i,r=0){const n=X(e.byteLength,4);for(this._outView.setUint32(s,n,!0),this._outView.setUint32(s+=4,i,!0),be(this._outView.buffer,e,s+=4,0,e.byteLength),s+=e.byteLength;s%4;)r&&this._outView.setUint8(s,r),s++;return s}},E.HEADER_SIZE=12,E.CHUNK_HEADER_SIZE=8,E.MAGIC=1179937895,E.VERSION=2,E);function be(t,e,s,i,r){new Uint8Array(t,s,r).set(new Uint8Array(e,i,r),0)}function ye(t){return new TextEncoder().encode(t).buffer}function X(t,e){return e*Math.ceil(t/e)}var x,y,R,g,J,B,K;(function(t){t[t.External=0]="External",t[t.DataURI=1]="DataURI",t[t.GLB=2]="GLB"})(x||(x={})),function(t){t[t.External=0]="External",t[t.DataURI=1]="DataURI",t[t.GLB=2]="GLB"}(y||(y={})),function(t){t[t.ARRAY_BUFFER=34962]="ARRAY_BUFFER",t[t.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(R||(R={})),function(t){t.SCALAR="SCALAR",t.VEC2="VEC2",t.VEC3="VEC3",t.VEC4="VEC4",t.MAT2="MAT2",t.MAT3="MAT3",t.MAT4="MAT4"}(g||(g={})),function(t){t[t.POINTS=0]="POINTS",t[t.LINES=1]="LINES",t[t.LINE_LOOP=2]="LINE_LOOP",t[t.LINE_STRIP=3]="LINE_STRIP",t[t.TRIANGLES=4]="TRIANGLES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(J||(J={})),function(t){t.OPAQUE="OPAQUE",t.MASK="MASK",t.BLEND="BLEND"}(B||(B={})),function(t){t[t.NoColor=0]="NoColor",t[t.FaceColor=1]="FaceColor",t[t.VertexColor=2]="VertexColor"}(K||(K={}));let Re=class{constructor(t,e,s,i,r){this._buffer=t,this._componentType=s,this._dataType=i,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,e.bufferViews||(e.bufferViews=[]),this.index=e.bufferViews.length,this._bufferView={buffer:t.index,byteLength:-1,target:r};const n=this._getElementSize();n>=4&&r!==R.ELEMENT_ARRAY_BUFFER&&(this._bufferView.byteStride=n),e.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(t){const e=this._data.length;if(this._data.push(t),this._accessorIndex>=0){const s=e%this._numComponentsForDataType,i=this._accessorMin[s];this._accessorMin[s]=typeof i!="number"?t:Math.min(i,t);const r=this._accessorMax[s];this._accessorMax[s]=typeof r!="number"?t:Math.max(r,t)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){function t(e,s){return s*Math.ceil(e/s)}return t(this.dataSize,4)}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(t,e){switch(this._componentType){case d.BYTE:return new Int8Array(t,e);case d.FLOAT:return new Float32Array(t,e);case d.SHORT:return new Int16Array(t,e);case d.UNSIGNED_BYTE:return new Uint8Array(t,e);case d.UNSIGNED_INT:return new Uint32Array(t,e);case d.UNSIGNED_SHORT:return new Uint16Array(t,e)}}writeOutToBuffer(t,e){this._createTypedArray(t,e).set(this._data)}writeAsync(t){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=t.then(e=>{const s=new Uint8Array(e);for(let i=0;i<s.length;++i)this._data.push(s[i]);delete this._asyncWritePromise}),this._asyncWritePromise}startAccessor(t){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=t;const e=this._numComponentsForDataType;this._accessorMin=new Array(e),this._accessorMax=new Array(e)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const t=this._getElementSize(),e=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/e;if(s%1)throw new Error("An accessor was ended with missing component values");for(let r=0;r<this._accessorMin.length;++r)typeof this._accessorMin[r]!="number"&&(this._accessorMin[r]=0),typeof this._accessorMax[r]!="number"&&(this._accessorMax[r]=0);const i={byteOffset:t*(this._accessorIndex/e),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case d.UNSIGNED_BYTE:case d.UNSIGNED_SHORT:i.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,i}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise(t=>this._finalizedPromiseResolve=t)}async finalize(){const t=this._bufferView,e=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&e.push(this._asyncWritePromise),await Promise.allSettled(e),this._isFinalized=!0,t.byteOffset=this.getByteOffset(),t.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case d.BYTE:case d.UNSIGNED_BYTE:return 1;case d.SHORT:case d.UNSIGNED_SHORT:return 2;case d.UNSIGNED_INT:case d.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case g.SCALAR:return 1;case g.VEC2:return 2;case g.VEC3:return 3;case g.VEC4:case g.MAT2:return 4;case g.MAT3:return 9;case g.MAT4:return 16}}},Z=class{constructor(t){this._gltf=t,this._bufferViews=[],this._isFinalized=!1,t.buffers||(t.buffers=[]),this.index=t.buffers.length;const e={byteLength:-1};t.buffers.push(e),this._buffer=e}addBufferView(t,e,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const i=new Re(this,this._gltf,t,e,s);return this._bufferViews.push(i),i}getByteOffset(t){let e=0;for(const s of this._bufferViews){if(s===t)return e;e+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(t){const e=[];for(const s of this._bufferViews){if(t&&s===t)return e;e.push(s.finalized)}return e}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const t=this._getTotalSize(),e=new ArrayBuffer(t);let s=0;for(const i of this._bufferViews)i.writeOutToBuffer(e,s),s+=i.byteSize;return e}finalize(){if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=Promise.allSettled(this.getViewFinalizePromises()).then(()=>{this._isFinalized=!0;const t=this.getArrayBuffer();this._buffer.byteLength=t.byteLength,this._buffer.uri=t}),this._gltf.extras.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let t=0;for(const e of this._bufferViews)t+=e.byteSize;return t}};function xe(t,e){if(t.components)for(const s of t.components)s.faces&&s.shading==="smooth"&&Me(s.faces,e)}function Me(t,e){e.normal==null&&(e.normal=new Float32Array(e.position.length));const{position:s,normal:i}=e,r=t.length/3;for(let n=0;n<r;++n){const o=3*t[3*n],a=3*t[3*n+1],h=3*t[3*n+2],l=L(Ie,s[o],s[o+1],s[o+2]),f=L(Se,s[a],s[a+1],s[a+2]),T=L(Ne,s[h],s[h+1],s[h+2]),_=W(f,f,l),m=W(T,T,l),c=ge(_,_,m);i[o]+=c[0],i[o+1]+=c[1],i[o+2]+=c[2],i[a]+=c[0],i[a+1]+=c[1],i[a+2]+=c[2],i[h]+=c[0],i[h+1]+=c[1],i[h+2]+=c[2]}for(let n=0;n<i.length;n+=3)L(M,i[n],i[n+1],i[n+2]),we(M,M),i[n]=M[0],i[n+1]=M[1],i[n+2]=M[2]}const Ie=S(),Se=S(),Ne=S(),M=S();function Le(t){const e=ee(t);return e!=null?e.toDataURL():""}async function Q(t,e){const s=ee(t);if(s==null)throw new $("imageToArrayBuffer","Unsupported image type");const i=Oe(t),r=await new Promise(o=>s.toBlob(o,i));if(k(e),!r)throw new $("imageToArrayBuffer","Failed to encode image");const n=await r.arrayBuffer();return k(e),{data:n,type:i}}function Oe(t){if(!(t instanceof HTMLImageElement))return"image/png";const e=t.src;if(he(e)){const s=fe(e);return(s==null?void 0:s.mediaType)==="image/jpeg"?s.mediaType:"image/png"}return/\.png$/i.test(e)?"image/png":/\.(jpg|jpeg)$/i.test(e)?"image/jpeg":"image/png"}function ee(t){if(t instanceof HTMLCanvasElement)return t;if(t instanceof HTMLVideoElement)return null;const e=document.createElement("canvas");e.width=t.width,e.height=t.height;const s=e.getContext("2d");return t instanceof HTMLImageElement?s.drawImage(t,0,0,t.width,t.height):t instanceof ImageData&&s.putImageData(t,0,0),e}function Be(t){const e=[],s=new Uint8Array(t);for(let i=0;i<s.length;i++)e.push(String.fromCharCode(s[i]));return"data:application/octet-stream;base64,"+btoa(e.join(""))}function Ce(t){if(t.byteLength<8)return!1;const e=new Uint8Array(t);return e[0]===137&&e[1]===80&&e[2]===78&&e[3]===71&&e[4]===13&&e[5]===10&&e[6]===26&&e[7]===10}const P=()=>ue.getLogger("esri.geometry.support.meshUtils.exporters.gltf.gltf");class Ve{constructor(e,s){this.options=s,this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:e.copyright,generator:e.generator},extras:{output:s.output,binChunkBuffer:null,promises:[]}},this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const s=this.gltf.extras,i=s.output.buffer===x.GLB||s.output.image===y.GLB;i&&(s.binChunkBuffer=new Z(this.gltf)),e.forEachScene(r=>{this._addScene(r)}),i&&s.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const s={};e.name&&(s.name=e.name),e.forEachNode(i=>{s.nodes||(s.nodes=[]),s.nodes.push(...this._addNodes(i))}),this.gltf.scenes.push(s)}_addNodes(e){this.gltf.nodes||(this.gltf.nodes=[]);const s={};e.name&&(s.name=e.name);const i=e.translation;j(i,ne)||(s.translation=v(i));const r=e.rotation;de(r,pe)||(s.rotation=_e(r));const n=e.scale;j(n,q)||(s.scale=v(n));const o=this.gltf.nodes.length;if(this.gltf.nodes.push(s),e.mesh&&e.mesh.vertexAttributes.position){const a=this._createMeshes(e.mesh),h=[o];if(a.length===1)this._addMesh(s,a[0]);else for(const l of a){const f={};this._addMesh(f,l),h.push(this.gltf.nodes.length),this.gltf.nodes.push(f)}return h}return e.forEachNode(a=>{s.children||(s.children=[]),s.children.push(...this._addNodes(a))}),[o]}_addMesh(e,s){var r;(r=this.gltf).meshes??(r.meshes=[]);const i=this.gltf.meshes.length;this.gltf.meshes.push(s),e.mesh=i}_createMeshes(e){var Y;const s=this.gltf.extras,i=s.output.buffer===x.GLB;let r;r=i?s.binChunkBuffer:new Z(this.gltf);const n=this.options.origin,o=e.vertexSpace.clone();o.origin=[n.x,n.y,n.z??0];const a=Ae({vertexAttributes:e.vertexAttributes,vertexSpace:e.vertexSpace,transform:(Y=this.options)!=null&&Y.ignoreLocalTransform?null:e.transform,spatialReference:e.spatialReference},o,{targetUnit:this.options.unitConversionDisabled?void 0:"meters"});if(!a)return[];xe(e,a),ze(a);const{position:h,normal:l,tangent:f}=a,{uv:T,color:_}=e.vertexAttributes,m=r.addBufferView(d.FLOAT,g.VEC3,R.ARRAY_BUFFER);let c,w,p,A;l&&(c=r.addBufferView(d.FLOAT,g.VEC3,R.ARRAY_BUFFER)),T&&(w=r.addBufferView(d.FLOAT,g.VEC2,R.ARRAY_BUFFER)),f&&(p=r.addBufferView(d.FLOAT,g.VEC4,R.ARRAY_BUFFER)),_&&(A=r.addBufferView(d.FLOAT,g.VEC4,R.ARRAY_BUFFER)),m.startAccessor("POSITION"),c&&c.startAccessor("NORMAL"),w&&w.startAccessor("TEXCOORD_0"),p&&p.startAccessor("TANGENT"),A&&A.startAccessor("COLOR_0");const se=a.position.length/3;for(let u=0;u<se;++u)m.push(h[3*u]),m.push(h[3*u+1]),m.push(h[3*u+2]),c&&l!=null&&(c.push(l[3*u]),c.push(l[3*u+1]),c.push(l[3*u+2])),w&&T!=null&&(w.push(T[2*u]),w.push(T[2*u+1])),p&&f!=null&&(p.push(f[4*u]),p.push(f[4*u+1]),p.push(f[4*u+2]),p.push(f[4*u+3])),A&&_!=null&&(A.push(I(_[4*u]/255)),A.push(I(_[4*u+1]/255)),A.push(I(_[4*u+2]/255)),A.push(_[4*u+3]/255));const ie=m.endAccessor(),H=this._addAccessor(m.index,ie);let C,V,z,F,N;if(c){const u=c.endAccessor();C=this._addAccessor(c.index,u)}if(w){const u=w.endAccessor();V=this._addAccessor(w.index,u)}if(p){const u=p.endAccessor();z=this._addAccessor(p.index,u)}if(A){const u=A.endAccessor();F=this._addAccessor(A.index,u)}const D=[];return e.components&&e.components.length>0&&e.components[0].faces?(N=r.addBufferView(d.UNSIGNED_INT,g.SCALAR,R.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(N,e.components,D,H,C,V,z,F)):this._addMeshVertexNonIndexed(e.components,D,H,C,V,z,F),m.finalize(),c&&c.finalize(),w&&w.finalize(),p&&p.finalize(),N&&N.finalize(),A&&A.finalize(),i||r.finalize(),D}_addMaterial(e){if(e==null)return;const s=this._materialMap.indexOf(e);if(s!==-1)return s;this.gltf.materials||(this.gltf.materials=[]);const i={};switch(e.alphaMode){case"mask":i.alphaMode=B.MASK;break;case"auto":case"blend":i.alphaMode=B.BLEND}i.alphaCutoff=e.alphaCutoff,e.doubleSided&&(i.doubleSided=e.doubleSided),i.pbrMetallicRoughness={};const r=o=>{const a=o.toRgba();return a[0]=I(a[0]/255),a[1]=I(a[1]/255),a[2]=I(a[2]/255),a};if(e.color!=null&&(i.pbrMetallicRoughness.baseColorFactor=r(e.color)),e.colorTexture!=null&&(i.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(e.colorTexture,e.colorTextureTransform)),e.normalTexture!=null&&(i.normalTexture=this._createTextureInfo(e.normalTexture,e.normalTextureTransform)),e instanceof Ee){if(e.emissiveTexture!=null&&(i.emissiveTexture=this._createTextureInfo(e.emissiveTexture,e.emissiveTextureTransform)),e.emissiveColor!=null){const o=r(e.emissiveColor);i.emissiveFactor=[o[0],o[1],o[2]]}e.occlusionTexture!=null&&(i.occlusionTexture=this._createTextureInfo(e.occlusionTexture,e.occlusionTextureTransform)),e.metallicRoughnessTexture!=null&&(i.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(e.metallicRoughnessTexture,e.metallicRoughnessTextureTransform)),i.pbrMetallicRoughness.metallicFactor=e.metallic,i.pbrMetallicRoughness.roughnessFactor=e.roughness}else i.pbrMetallicRoughness.metallicFactor=1,i.pbrMetallicRoughness.roughnessFactor=1,P().warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const n=this.gltf.materials.length;return this.gltf.materials.push(i),this._materialMap.push(e),n}_createTextureInfo(e,s){const i={index:this._addTexture(e)};return s&&(i.extensions||(i.extensions={}),i.extensions.KHR_texture_transform={scale:s.scale,offset:s.offset,rotation:ae(s.rotation)}),i}_addTexture(e){const s=this.gltf.textures??[];return this.gltf.textures=s,oe(this._textureMap,e,()=>{const i={sampler:this._addSampler(e),source:this._addImage(e)},r=s.length;return s.push(i),r})}_addImage(e){const s=this._imageMap.get(e);if(s!=null)return s;this.gltf.images||(this.gltf.images=[]);const i={};if(e.url)i.uri=e.url;else{const n=e.data;i.extras=n;for(let a=0;a<this.gltf.images.length;++a)if(n===this.gltf.images[a].extras)return a;const o=this.gltf.extras;switch(o.output.image){case y.GLB:{const a=o.binChunkBuffer.addBufferView(d.UNSIGNED_BYTE,g.SCALAR);if(U(n))n.data!=null&&a.writeOutToBuffer(n.data,0);else{const h=Q(n,this.options.signal).then(({data:l,type:f})=>(i.mimeType=f,l));o.promises.push(a.writeAsync(h).then(()=>{a.finalize()}))}i.bufferView=a.index;break}case y.DataURI:if(U(n)){P().warnOnce("Image export for basis compressed textures not available.");break}i.uri=Le(n);break;default:if(U(n)){P().warnOnce("Image export for basis compressed textures not available.");break}o.promises.push(Q(n,this.options.signal).then(({data:a,type:h})=>{i.uri=a,i.mimeType=h}))}}const r=this.gltf.images.length;return this.gltf.images.push(i),this._imageMap.set(e,r),r}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let s=b.REPEAT,i=b.REPEAT;if(typeof e.wrap=="string")switch(e.wrap){case"clamp":s=b.CLAMP_TO_EDGE,i=b.CLAMP_TO_EDGE;break;case"mirror":s=b.MIRRORED_REPEAT,i=b.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case"clamp":i=b.CLAMP_TO_EDGE;break;case"mirror":i=b.MIRRORED_REPEAT}switch(e.wrap.horizontal){case"clamp":s=b.CLAMP_TO_EDGE;break;case"mirror":s=b.MIRRORED_REPEAT}}const r={wrapS:s,wrapT:i};for(let o=0;o<this.gltf.samplers.length;++o)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[o]))return o;const n=this.gltf.samplers.length;return this.gltf.samplers.push(r),n}_addAccessor(e,s){this.gltf.accessors||(this.gltf.accessors=[]);const i={bufferView:e,byteOffset:s.byteOffset,componentType:s.componentType,count:s.count,type:s.type,min:s.min,max:s.max,name:s.name};s.normalized&&(i.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(i),r}_addMeshVertexIndexed(e,s,i,r,n,o,a,h){const l=new Map;for(const f of s){if(e.startAccessor("INDICES"),f.faces)for(let c=0;c<f.faces.length;++c)e.push(f.faces[c]);const T=e.endAccessor(),_={attributes:{POSITION:r},indices:this._addAccessor(e.index,T),material:this._addMaterial(f.material)};n&&f.shading!=="flat"&&(_.attributes.NORMAL=n),o&&(_.attributes.TEXCOORD_0=o),a&&f.shading!=="flat"&&(_.attributes.TANGENT=a),h&&(_.attributes.COLOR_0=h);const m=l.get(f.name);if(m)m.primitives.push(_);else{const c={name:f.name,primitives:[_]};l.set(f.name,c),i.push(c)}}}_addMeshVertexNonIndexed(e,s,i,r,n,o,a){const h={primitives:[]};s.push(h);const l={attributes:{POSITION:i}};r&&(l.attributes.NORMAL=r),n&&(l.attributes.TEXCOORD_0=n),o&&(l.attributes.TANGENT=o),a&&(l.attributes.COLOR_0=a),e&&(l.material=this._addMaterial(e[0].material)),h.primitives.push(l)}}function ze({position:t,normal:e,tangent:s}){G(t,3),G(e,3),G(s,4)}function G(t,e){if(t!=null)for(let s=1,i=2;s<t.length;s+=e,i+=e){const r=t[s],n=t[i];t[s]=n,t[i]=-r}}function I(t){return t**ce}class Fe{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(e){if(this._scenes.includes(e))throw new Error("Scene already added");this._scenes.push(e)}removeScene(e){re(this._scenes,e)}forEachScene(e){this._scenes.forEach(e)}}class De{constructor(){this.name="",this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}}class Ue{constructor(e){this.mesh=e,this.name="",this.translation=S(),this.rotation=me(),this.scale=v(q),this._nodes=[]}addNode(e){if(this._nodes.includes(e))throw new Error("Node already added");this._nodes.push(e)}forEachNode(e){this._nodes.forEach(e)}set rotationAngles(e){le(this.rotation,e[0],e[1],e[2])}}const Pe="model.gltf",te="model.glb";async function Ge(t,e){var f,T;const s=new Ve(t,e).gltf,i=s.extras.promises;let r=1,n=1,o=null;await Promise.allSettled(i),k(e.signal);const a=e.jsonSpacing??4,h=new Map,l=JSON.stringify(s,(_,m)=>{var c,w;if(_!=="extras"){if(m instanceof ArrayBuffer){if(Ce(m))switch((c=e.output)==null?void 0:c.image){case y.DataURI:case y.GLB:break;case y.External:default:{const p=`img${n}.png`;return n++,h.set(p,m),p}}switch((w=e.output)==null?void 0:w.buffer){case x.DataURI:return Be(m);case x.GLB:if(o)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(o=m);case x.External:default:{const p=`data${r}.bin`;return r++,h.set(p,m),p}}}return m}},a);return((f=e.output)==null?void 0:f.buffer)===x.GLB||((T=e.output)==null?void 0:T.image)===y.GLB?h.set(te,new Te(l,o).buffer):h.set(Pe,l),h}async function ve(t,e){const s=(await Ge(t,{output:{buffer:x.GLB,image:y.GLB},jsonSpacing:0,...e})).get(te);if(!(s&&s instanceof ArrayBuffer))throw new Error("failed to export to glb");return s}async function gt(t,e){const s=new Fe,i=new De;return s.addScene(i),i.addNode(new Ue(t)),await ve(s,{origin:t.origin,...e})}export{gt as toBinaryGLTF};
