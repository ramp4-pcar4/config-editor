import{an as p}from"./index-1o7Uo5_u.js";import{D as i}from"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";class u{constructor(t){this.data=t,this.type="encoded-mesh-texture",this.encoding=i.KTX2_ENCODING}}function w(e){return(e==null?void 0:e.type)==="encoded-mesh-texture"}async function h(e){const t=new Blob([e]),o=await t.text();return JSON.parse(o)}async function v(e,t){if(t===i.KTX2_ENCODING)return new u(e);const o=new Blob([e],{type:t});let r=URL.createObjectURL(o);switch(t){case"image/jpeg":r+="#.jpg";break;case"image/png":r+="#.png"}const n=new Image;if(p("esri-iPhone"))return new Promise((d,m)=>{const c=()=>{a(),d(n)},s=g=>{a(),m(g)},a=()=>{URL.revokeObjectURL(r),n.removeEventListener("load",c),n.removeEventListener("error",s)};n.addEventListener("load",c),n.addEventListener("error",s),n.src=r});try{n.src=r,await n.decode()}catch{console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(r),n}export{u as d,w as g,h as l,v as w};
