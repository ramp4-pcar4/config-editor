import{h as i}from"./index-DECxckyg.js";let c=class n{constructor(t,r,e=""){this.major=t,this.minor=r,this._context=e}lessThan(t,r){return this.major<t||t===this.major&&this.minor<r}greaterEqual(t,r){return!this.lessThan(t,r)}validate(t){if(this.major!==t.major){const r=this._context&&this._context+":",e=this._context&&this._context+" ";throw new i(r+"unsupported-version",`Required major ${e}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:t})}}clone(){return new n(this.major,this.minor,this._context)}static parse(t,r=""){const[e,o]=t.split("."),s=/^\s*\d+\s*$/;if(!(e!=null&&e.match)||!s.test(e))throw new i((r&&r+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:t});if(!(o!=null&&o.match)||!s.test(o))throw new i((r&&r+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",{version:t});const a=parseInt(e,10),h=parseInt(o,10);return new n(a,h,r)}};export{c as m};
