import{a0 as K,o as Ee,h as Y,a1 as Oe,ag as Be,a6 as G,bB as J,D as H,u as $,aM as ue,s as Pe,l as me,B as Se,bM as Ue,v as T,S as D,n as je}from"./index-CQ8-0QQp.js";import{T as te,j as Qe,v as We,O as He,A as Ve,$ as ye,x as Xe,D as qe,k as Je,C as Ke,R as Ye,a as Ze,S as $e,L as Q,b as et,G as oe,M as _e,c as tt}from"./KnowledgeGraphSublayer-BpP550Rh-B8o97zwI.js";import{w as it}from"./MultiOriginJSONSupport-BqiFJbbt-BJ8fBC2r.js";import{e as at}from"./Layer-DvVVmz9x--HAWlOUX.js";import{U as ee}from"./featureConversionUtils-Bjjlcfdo-CpGOkH2T.js";import{_ as v,I as re,t as se,S as P,o as nt}from"./constants-5AlnYBiV-SxxbBSOD.js";import{u as ot}from"./BlendLayer-DjW_5k0v-DsPLpepu.js";import{u as rt,i as st}from"./OperationalLayer-CbXUnTH0-DsJS3BJK.js";import{S as lt}from"./ScaleRangeLayer-x42fwED3-BS9j8FJs.js";import{u as ht}from"./knowledgeGraphService-bSKUKu5m-B44mJjFg.js";import"./OptimizedGeometry-pzfNw1AT-Ckm1nrtQ.js";import"./memoryEstimations-DeWfxwaV-D8kkh29b.js";import"./projectionUtils-B-CplN3q-DW663dnS.js";import"./OptimizedFeature-mIz_HhJg-BomJ3mxO.js";import"./GraphicsLayer-BiEC2-gS-CG3veBcP.js";import"./GraphicsCollection-uWAVmks7-DZTgsLMB.js";import"./ElevationInfo-DE5to86a-D1mqEVyw.js";import"./lengthUtils-C61nRlXw-C-u5HD5x.js";import"./TimeExtent-Cf2Pienb-Yfjpk5DQ.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-BBqLvREw.js";import"./parser-CWccHtwJ-CeF_pdxX.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-_RgowJk9.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Relationship-CQMFhJpR-D4XzKj2X.js";import"./Query-n1aoaaFC-CzM-0Osn.js";import"./Field-BIQ-quF4-kqmmAHwF.js";import"./fieldType-PhcL4ff8-X0HNaUrC.js";import"./workers-CeRXsnNJ-N8jhRv1L.js";import"./Queue-DV3gpSdl-n6S4F6IF.js";import"./intl-BAA1onnp-CmgFU7qQ.js";import"./FeatureStore-DfjNNhD_-DUWEX2YW.js";import"./BoundsStore-DffHzOYo-DIw_d9is.js";import"./PooledRBush-DfSXIoUa-BovKEZb7.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./timeSupport-C2LrHIeW-DHvCszUH.js";import"./queryUtils-DZy8hWx3-BdCCngVM.js";import"./normalizeUtils-u00NGW3M-Cj_eBFoN.js";import"./normalizeUtilsCommon-ClagynAA-C1rBYP54.js";import"./utils-BO8hgPs3-DAcioTpx.js";import"./utils-DpLVEUvg-WAf4cKk5.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-BuRXuDwH.js";import"./QueryEngine-B7NH52mH-BiAnO5dO.js";import"./WhereClauseCache-CixYkZwn-_DfXT2n_.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./WhereClause-D4rZJkVN-BZnvVYD0.js";import"./TimeOnly-CGkId3bj-JDOpcZSO.js";import"./enum-g1DWyQyu-Ak-qLf19.js";import"./UnknownTimeZone-DxjyzFvs-Bj2Ovyjw.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-GtM-hh0K.js";import"./utils-s7ypkCzr-CVOU4kxR.js";import"./heatmapUtils-DRTN9U3a-DdUh7Ehd.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-U_7PTaOX.js";import"./timeZoneUtils-d5p0Jda1-CK3w7ysb.js";import"./utils-CKRJGBD_-kOGrCiol.js";import"./ClassBreaksDefinition-BZ4FJdWb-CxvHCnmh.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-Bq5Muhg1.js";import"./NormalizationBinParametersMixin-70JA0FRq-opRAx0sX.js";import"./FieldsIndex-Bt0Y8aWr-Dy7qhi0q.js";import"./Scheduler-BV4C4cVP-CBy-rr-e.js";import"./debugFlags-8tOwPnHK-CtShftaq.js";import"./clientSideDefaults-BoAP7ZAL-BfMFl-jN.js";import"./fieldProperties-Cgp0UdcB-Cl6Uklka.js";import"./labelingInfo-DuLk-IW_-Do7y7R5R.js";import"./asyncUtils-BPUlNCrX-C7s4Eh4u.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./SimpleRenderer-C1YRhRzu-CeFdc8G6.js";import"./commonProperties-CJLeiNuA-Cwn8lkYC.js";import"./colorRamps-trM-CPFS-C8zFo3rW.js";import"./ColorStop-CL7v3R-A-DyL2CQ70.js";import"./visualVariableUtils-BTS148WR-B-CYKTwx.js";import"./UniqueValueRenderer-CLXHFtg9-DWi5KH44.js";import"./diffUtils-BxG8DCnW-B0jtYcuY.js";import"./RendererLegendOptions-Bil_IDab-763rSoqF.js";import"./styleUtils-DBPDLVBX-jec2DPp4.js";import"./RelationshipQuery-CaEbQySU-BuV07-8G.js";import"./labelUtils-Oapo6DRu-Dhl_kaoD.js";import"./DisplayFilteredLayer-DTxK0R7U-COui60zA.js";import"./scaleUtils-Br-smv3A-BbNlrp6M.js";import"./displayFilterUtils-DvWUbJDp-ChRAcdEr.js";import"./FeatureEffectLayer-BVJTjFhg-BUjmO1bf.js";import"./FeatureEffect-D3G_gJ5F-b1zbEf0S.js";import"./FeatureFilter-DXpQKGs4-CnlpMeJW.js";import"./FeatureReductionLayer-vR-evpIv-BVqvy9aG.js";import"./FeatureReductionSelection-DzXAxMK9-Bs1Y8Y83.js";import"./jsonUtils-CzRaZnmS-FjfqUTHD.js";import"./typeUtils-CB2EGBWO-NWwLrO5e.js";import"./ClassBreaksRenderer-Bq2XGpfI-B2fVwuB3.js";import"./DictionaryScriptEvaluator-DW5hOK9A-BGZ0BqN6.js";import"./Version-CnwD6MZa-BnQab16p.js";import"./ArcadeExpression-XjY3x7KV-BmzhFoaj.js";import"./utils-BfXZnjCE-CopoHYAx.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-C0O-mB4B.js";import"./OrderByInfo-SNGyPlhJ-VBfpiZRI.js";import"./RefreshableLayer-Qpvyi8qY-DShwaTY-.js";import"./TemporalLayer-lQRje9wB-qMqS8PRE.js";import"./TimeInfo-COHxjenm-CiVRL70f.js";import"./FeatureSet-BVGGhhH9-50vSm7H-.js";import"./popupUtils-B99PyAFi-CMRky_9a.js";import"./utils-Cb2uXNfG-DKAy_g3B.js";import"./cimSymbolUtils-DCedSSCN-CSq18u1I.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./networkEnums-DHCOt6o_-Cyuk9n4z.js";import"./GPMessage-KKjIcGuy-FJGeijDm.js";var ie;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"})(ie||(ie={}));let k=class extends rt(ot(lt(it(at)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(K.ofType(te)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new Ee({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(K.ofType(te)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e==null?void 0:e.initializationInclusionModeDefinition,(e==null?void 0:e.dataPreloadedInLocalCache)&&!(e!=null&&e.initializationInclusionModeDefinition))throw new Y("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(Oe(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),Be))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:i,dataPreloadedInLocalCache:a,initializationLinkChartConfig:n}=e;return{url:t,title:i,dataPreloadedInLocalCache:a,initializationLinkChartConfig:n}}_initializeLayerProperties(e){var s,o,l,y;if(!this.title&&this.url){const p=this.url.split("/");this.title=p[p.length-2]}const t=new Set;let i=[],a=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new Y("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(s=e.inclusionModeDefinition)!=null&&s.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]):(o=e.inclusionModeDefinition)!=null&&o.namedTypeDefinitions&&((l=e.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions.size)>0?(y=e.inclusionModeDefinition)==null||y.namedTypeDefinitions.forEach((p,g)=>{var I,N;const f=this._graphTypeLookup.get(g);if(!f)return G.getLogger(this).warn(`A named type, ${g}, was in the inclusion list that wasn't in the data model and will be removed`),void((I=e.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions.delete(g));f.type==="relationship"?t.has(g)||(t.add(g),a.push(f)):f.type==="entity"?t.has(g)||(t.add(g),i.push(f)):(G.getLogger(this).warn(`A named type, ${g}, was in the inclusion list that wasn't properly modeled and will be removed`),(N=e.inclusionModeDefinition)==null||N.namedTypeDefinitions.delete(g))}):(i=e.knowledgeGraph.dataModel.entityTypes??[],a=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new Qe({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=a,this.dataManager=n}load(e){const t=async()=>{var n;const i=[],a=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await ye(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(n=this.dataManager.inclusionModeDefinition)==null||n.namedTypeDefinitions.forEach(s=>{s.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(s=>{a.push(s.refreshCachedQueryEngine()),i.push(new Promise(o=>{s.on("layerview-create",()=>{o(null)})}))}),this.tables.forEach(s=>{a.push(s.refreshCachedQueryEngine())}),await Promise.all(a)};return this.addResolvingPromise(new Promise(i=>{ht(this.url).then(async a=>{var s,o,l,y,p,g,f,I,N,M;(s=a.dataModel.entityTypes)==null||s.forEach(u=>{u.name&&this._graphTypeLookup.set(u.name,u)}),(o=a.dataModel.relationshipTypes)==null||o.forEach(u=>{u.name&&this._graphTypeLookup.set(u.name,u)});const n=(l=this.linkChart)==null?void 0:l.linkChartProperties;if((n==null?void 0:n.originIdOf("entitiesUrl"))===J.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await We.fetchAndConvertSerializedLinkChart({entitiesUrl:n==null?void 0:n.entitiesUrl,relationshipsUrl:n==null?void 0:n.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(a.dataModel),this.initializationLinkChartConfig={layoutSettings:(n==null?void 0:n.layoutSettings)??void 0,layoutMode:He(n.layoutType)}),this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),(p=(y=this.dataManager.inclusionModeDefinition)==null?void 0:y.namedTypeDefinitions)!=null&&p.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(g=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||g.forEach(u=>{var S;u.name&&((S=this.dataManager.inclusionModeDefinition)==null||S.namedTypeDefinitions.set(u.name,{useAllData:!0}))}),(f=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||f.forEach(u=>{var S;u.name&&((S=this.dataManager.inclusionModeDefinition)==null||S.namedTypeDefinitions.set(u.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache){const u=tt.getInstance();for(const[S,F]of((I=this.dataManager.inclusionModeDefinition)==null?void 0:I.namedTypeDefinitions)??[])for(const L of((N=F.members)==null?void 0:N.values())??[]){const ae=u.readFromStoreById(`${S}__${L.id}`);ae&&H(this.dataManager.sublayerCaches,S,()=>new Map).set(L.id,ae)}await t()}else{const u=((M=this.initializationLinkChartConfig)==null?void 0:M.layoutMode)==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,u,!0).then(async()=>{$(e),await t()}))}i(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):G.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let i=[];t!=null&&t.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await Ve(e,this.dataManager.knowledgeGraph));const a=e.concat(i).filter(n=>{var s;return!((s=this.sublayerIdsCache.get(n.typeName))!=null&&s.has(n.id))});a.length>0&&(this.membershipModified=!0),await this._handleNewRecords(a,t)}async createSublayerForNamedType(e){var a,n;await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new Y("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new Y("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),H(this.sublayerIdsCache,e,()=>new Set);const i=this._createSublayer(t);return t.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),(n=(a=this.dataManager.inclusionModeDefinition)==null?void 0:a.namedTypeDefinitions)==null||n.set(e,{useAllData:!1,members:new Map}),i.geometryType?this.layers.push(i):this.tables.push(i),await ye(this,[e]),this._refreshNamedTypes(),i}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1,overrideMembershipCheck:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){var l,y,p,g,f,I,N,M;let n=[];for(const u of e)(a||((p=(y=(l=this.dataManager.inclusionModeDefinition)==null?void 0:l.namedTypeDefinitions)==null?void 0:y.get(u.typeName))==null?void 0:p.useAllData)===!1&&((N=(I=(f=(g=this.dataManager.inclusionModeDefinition)==null?void 0:g.namedTypeDefinitions)==null?void 0:f.get(u.typeName))==null?void 0:I.members)!=null&&N.has(u.id)))&&n.push(u);if(t){const u=new Set,S=[];for(const F of n)if(this.dataManager.nodeConnectionsLookup.has(F.id))for(const L of this.dataManager.nodeConnectionsLookup.get(F.id))u.add(L);for(const F of u)if(this.dataManager.memberIdTypeLookup.has(F))for(const L of this.dataManager.memberIdTypeLookup.get(F))this.dataManager.relationshipTypeNames.has(L)&&S.push({id:F,typeName:L});n=n.concat(S)}this.dataManager.removeFromLayer(n);for(const u of n)(M=this.sublayerIdsCache.get(u.typeName))==null||M.delete(u.id),this.dataManager.relationshipTypeNames.has(u.typeName)?this.relationshipLinkChartDiagramLookup.delete(u.id):this.entityLinkChartDiagramLookup.delete(u.id);const s=i?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:s}),n.length>0&&(this.membershipModified=!0);const o=[];return this.layers.forEach(u=>{o.push(u.refreshCachedQueryEngine())}),await Promise.all(o),this._refreshNamedTypes(),n}async expand(e,t){let i=[];try{const a=await this.dataManager.getConnectedRecordIds(e,t==null?void 0:t.relationshipTypeNames,t);i=a.filter(n=>{var s;return!((s=this.sublayerIdsCache.get(n.typeName))!=null&&s.has(n.id))}),await this._handleNewRecords(i,t),a.length>0&&(this.membershipModified=!0),$(t==null?void 0:t.signal)}catch(a){throw ue(a)&&i.length>0&&await this.removeRecords(i,{overrideMembershipCheck:!0}),a}return{records:i}}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===J.DEFAULTS?this.originIdOf("layers")===J.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers):this.layers=new K,this.tables.length||this.originIdOf("layers")===J.DEFAULTS?this.originIdOf("tables")===J.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables):this.tables=new K,(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,n)=>{var o;const s=H(this.sublayerIdsCache,n,()=>new Set);(o=a.members)==null||o.forEach(({id:l,linkChartLocation:y})=>{if(s.add(l),y){const p="coords"in y&&"lengths"in y?y:ee(y);this.dataManager.relationshipTypeNames.has(n)?this.relationshipLinkChartDiagramLookup.set(l,p):this.entityLinkChartDiagramLookup.set(l,p)}})})}async calculateLinkChartLayout(e="organic-standard",t){var we,Me,ke,Ce,Te,Ne,De,ve,xe;const i=[],a=[],n=[];this.dataManager.sublayerCaches.forEach((r,h)=>{this.dataManager.entityTypeNames.has(h)?r.forEach(c=>{i.push({typeName:h,feature:c})}):this.dataManager.relationshipTypeNames.has(h)&&r.forEach(c=>{a.push({typeName:h,feature:c})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const s=new Map,o=new Map,l=new Map,y=new Map,p=new Uint8Array(i.length),g=new Float64Array(i.length),f=new Float64Array(i.length),I=new Float64Array(i.length),N=new Float64Array(i.length),M=new Uint32Array(a.length),u=new Uint32Array(a.length),S=new Float64Array(a.length),F=new Float64Array(a.length),L=[],ae="organic-standard";let ge=!1;const x=new Ee({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let V,fe="organic-standard",b=0,_=0;const Ae=Xe.apply;switch(fe=e==="geographic-organic-standard"?ae:e,fe){case"organic-standard":V=$e.apply;break;case"organic-community":V=Ze.apply;break;case"hierarchical-bottom-to-top":V=Ye.apply;break;case"radial-root-centric":V=Ke.apply;break;case"tree-left-to-right":V=Je.apply;break;default:V=qe.apply}let le=!1;i.forEach(({typeName:r,feature:h})=>{var c,A,R,w,z;if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&((c=t==null?void 0:t.lockedNodeLocations)!=null&&c.has(h.attributes[v]))){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)?p[b]=Q.IsGeographic:p[b]=Q.None;const d=t.lockedNodeLocations.get(h.attributes[v]);g[b]=d.x,f[b]=d.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)){p[b]=Q.IsGeographic;let d=null;const C=h.attributes[this.dataManager.geographicLookup.get(r).name];switch((A=this.dataManager.geographicLookup.get(r))==null?void 0:A.geometryType){case"esriGeometryPoint":g[b]=C==null?void 0:C.x,f[b]=C==null?void 0:C.y;break;case"esriGeometryPolygon":d=C==null?void 0:C.centroid,(d==null?void 0:d.x)!=null&&(d==null?void 0:d.y)!=null?(g[b]=d.x,f[b]=d.y):p[b]=Q.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":d=(R=C==null?void 0:C.extent)==null?void 0:R.center,(d==null?void 0:d.x)!=null&&(d==null?void 0:d.y)!=null?(g[b]=d.x,f[b]=d.y):p[b]=Q.IsMovable;break;default:p[b]=Q.IsMovable}(g[b]==null||f[b]==null||Number.isNaN(g[b])||Number.isNaN(f[b]))&&(p[b]=Q.IsMovable,g[b]=0,f[b]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!le&&((w=t==null?void 0:t.lockedNodeLocations)!=null&&w.has(h.attributes[v]))&&(le=!0);const d=(z=t==null?void 0:t.timeInfoByTypeName)==null?void 0:z.get(r),C=d==null?void 0:d.startField,B=C&&(d!=null&&d.startField)?h.attributes[C]:null;I[b]=B?new Date(B).getTime():NaN;const U=d==null?void 0:d.endField,j=U&&(d!=null&&d.endField)?h.attributes[U]:null;N[b]=j?new Date(j).getTime():NaN,g[b]=0,f[b]=0,p[b]=Q.IsMovable}else p[b]=Q.IsMovable,g[b]=0,f[b]=0;y.set(h.attributes[v],b),L[b]={feature:h,typeName:r},b++}),le&&G.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let be=!1;const he=new Map;a.forEach(r=>{var U;const h=r.feature.attributes[re],c=r.feature.attributes[se],A=y.get(h),R=y.get(c),w=(U=t==null?void 0:t.timeInfoByTypeName)==null?void 0:U.get(r.typeName),z=t!=null&&t.timeInfoByTypeName?w==null?void 0:w.startField:null,d=z?r.feature.attributes[z]:null,C=w==null?void 0:w.endField,B=C?r.feature.attributes[C]:null;if(A!==void 0&&R!==void 0){let j=h+"-"+c;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(j=j+"-"+d+"-"+B);const X=he.get(j);X!=null&&X.has(r.typeName)||(M[_]=A,u[_]=R,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(S[_]=d?new Date(d).getTime():NaN,F[_]=B?new Date(B).getTime():NaN),X===void 0?he.set(j,new Map([[r.typeName,_]])):X.set(r.typeName,_),_++),n.push(r)}else be=!0,this.relationshipLinkChartDiagramLookup.set(h,null)}),be&&G.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const Re=this._validateOrganicLayoutSettings(e,(we=t==null?void 0:t.layoutSettings)==null?void 0:we.organicLayoutSettings),pe=this._convertValidatedOrganicSettingsToCalculationSettings(Re);await et();let Z=oe.Error,E=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let r;({status:Z,links:E,graphics:r}=Ae(()=>{var h;return((h=t==null?void 0:t.signal)==null?void 0:h.aborted)??!1},p,g,f,I,N,M.subarray(0,_),u.subarray(0,_),S.subarray(0,_),F.subarray(0,_),e==="chronological-multi-timeline",(Me=t==null?void 0:t.layoutSettings)==null?void 0:Me.chronologicalLayoutSettings)),Z===oe.Success&&(this.chronologicalAuxiliaryGraphics=r)}else({status:Z,links:E}=V(()=>{var r;return((r=t==null?void 0:t.signal)==null?void 0:r.aborted)??!1},p,g,f,M.subarray(0,_),u.subarray(0,_),pe.computationBudgetTime,pe.idealEdgeLengthMultiplier,pe.repulsionRadiusMultiplier));if($(t==null?void 0:t.signal),Z===oe.Error)throw new Y("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(Z===oe.Canceled)throw Pe();for(let r=0;r<L.length;r++){if(f[r]>84.9999?f[r]=84.9999:f[r]<-84.9999&&(f[r]=-84.9999),g[r]>179.9999?g[r]=179.9999:g[r]<-179.9999&&(g[r]=-179.9999),L[r].feature.attributes[P]=new me(g[r],f[r]),s.has(L[r].typeName))(ke=s.get(L[r].typeName))==null||ke.set(L[r].feature.attributes[v],L[r].feature);else{const w=new Map;w.set(L[r].feature.attributes[v],L[r].feature),s.set(L[r].typeName,w)}l.set(L[r].feature.attributes[v],L[r].feature);const h=ee(L[r].feature.attributes[P]);this.entityLinkChartDiagramLookup.set(L[r].feature.attributes[v],L[r].feature.attributes[P]?h:null);const c=H(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,L[r].typeName,()=>({useAllData:!1,members:new Map}));H(c.members,L[r].feature.attributes[v],()=>({id:L[r].feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=L[r].feature.attributes[P];const{x:A,y:R}=L[r].feature.attributes[P];ge?(x.xmin=Math.min(x.xmin,A),x.xmax=Math.max(x.xmax,A),x.ymin=Math.min(x.ymin,R),x.ymax=Math.max(x.ymax,R)):(x.xmin=A-1e-7,x.xmax=A+1e-7,x.ymin=R-1e-7,x.ymax=R+1e-7,ge=!0)}if(this.linkChartExtent.xmin=x.xmin,this.linkChartExtent.xmax=x.xmax,this.linkChartExtent.ymin=x.ymin,this.linkChartExtent.ymax=x.ymax,!E)throw new Y("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const ne=new Map,de=new Map,ce=new Map,Le=new Set;for(let r=0;r<n.length;r++){const h=[],c=n[r],A=c.feature.attributes[re],R=c.feature.attributes[se];let w=A+"-"+R;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const m=(Ce=t==null?void 0:t.timeInfoByTypeName)==null?void 0:Ce.get(c.typeName),O=t!=null&&t.timeInfoByTypeName?m==null?void 0:m.startField:null,W=O?c.feature.attributes[O]:null,q=m==null?void 0:m.endField;w+="-"+W+"-"+(q?c.feature.attributes[q]:null)}const z=he.get(w).get(c.typeName),d=z===0?0:E==null?void 0:E.vertexEndIndex[z-1];if(!Le.has(z)){if(Le.add(z),E.types[z]===_e.Recursive){const m=[E.vertices[2*d],E.vertices[2*d+1]],O=[E.vertices[2*(d+1)],E.vertices[2*(d+1)+1]],W=[.5*(m[0]+O[0]),.5*(m[1]+O[1])],q=[W[0]-m[0],W[1]-m[1]],Ge=[W[0]+q[1],W[1]-q[0]],Fe=[W[0]-q[1],W[1]+q[0]];h.push(m),h.push(Ge),h.push(O),h.push(Fe),h.push(m)}else{if(E.types[z]!==_e.Regular){G.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let m=d;m<E.vertexEndIndex[z];m++)h.push([E.vertices[2*m],E.vertices[2*m+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const m=(Te=L[y.get(A)])==null?void 0:Te.feature.attributes[P],O=(Ne=L[y.get(R)])==null?void 0:Ne.feature.attributes[P];h[0][0]===m.x&&h[0][1]===m.y||(h[0]=[m.x,m.y]),h[h.length-1][0]===O.x&&h[h.length-1][1]===O.y||(h[h.length-1]=[O.x,O.y])}for(let m=1;m<h.length-1;m++)h[m][1]>85.5?h[m][1]=85.5:h[m][1]<-85.5&&(h[m][1]=-85.5),h[m][0]>179.9999?h[m][0]=179.9999:h[m][0]<-179.9999&&(h[m][0]=-179.9999);ne.has(w)?ne.get(w).push(h):ne.set(w,[h])}const C=ne.get(w);de.has(w)||(de.set(w,new Map),ce.set(w,new Map));const B=de.get(w),U=ce.get(w);B.has(c.typeName)||(B.set(c.typeName,C.shift()),U.set(c.typeName,0));const j=B.get(c.typeName);U.set(c.typeName,U.get(c.typeName)+1);const X=new Se({paths:[j]});if(c.feature.attributes[P]=X,o.has(c.typeName))(De=o.get(c.typeName))==null||De.set(c.feature.attributes[v],c.feature);else{const m=new Map;m.set(c.feature.attributes[v],c.feature),o.set(c.typeName,m)}l.set(c.feature.attributes[v],c.feature);const Ie=ee(c.feature.attributes[P]);this.relationshipLinkChartDiagramLookup.set(c.feature.attributes[v],c.feature.attributes[P]?Ie:null);const ze=H(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,c.typeName,()=>({useAllData:!1,members:new Map}));H(ze.members,c.feature.attributes[v],()=>({id:c.feature.attributes[v],linkChartLocation:void 0})).linkChartLocation=Ie}for(const r of n)r.feature.attributes[nt]=((ve=ce.get(r.feature.attributes[re]+"-"+r.feature.attributes[se]))==null?void 0:ve.get(r.typeName))??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:(xe=t==null?void 0:t.layoutSettings)==null?void 0:xe.clone()},{nodes:s,links:o,idMap:l}}async applyNewLinkChartLayout(e="organic-standard",t){const i=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(a=>{i.push(a.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){var t,i;const e=new Map;for(const[a,n]of((t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions.entries())??[])this.dataManager.relationshipTypeNames.has(a)||((i=n==null?void 0:n.members)==null||i.forEach(s=>{const o=s.linkChartLocation;let l;const y=s.id;o&&(l="x"in o?{x:o.x,y:o.y}:{x:o.coords[0],y:o.coords[1]},e.set(y,new me({x:l.x,y:l.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(i=>{t.push(i.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let a=[];for(const n of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(n);s&&(a=a.concat(Array.from(s.keys())))}i=await this.dataManager.getRelationshipsBetweenNodes(e,a,t),await this._handleNewRecords(i,t),$(t)}catch(a){throw ue(a)&&this.removeRecords(i),a}return{records:i}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let a=[];for(const s of this.dataManager.relationshipTypeNames){const o=this.sublayerIdsCache.get(s);o&&(a=a.concat(Array.from(o.keys())))}let n=[];for(const s of this.dataManager.entityTypeNames){const o=this.sublayerIdsCache.get(s);o&&(n=n.concat(Array.from(o)))}i=await this.dataManager.getRelationshipsFromNodes(e,n,a,t),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),$(t)}catch(a){throw ue(a)&&this.removeRecords(i),a}return{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){var a;const i=new Map;this.layers.forEach(n=>{i.set(n.objectType.name,n.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:i,...t}),(a=this.linkChart)==null||a.handleChronologicalOverlay()}async _handleNewRecords(e,t){const i=new Set,a=[],n=this.layers.concat(this.tables);for(const o of e)this._graphTypeLookup.has(o.typeName)&&(n.some(l=>l.objectType.name===o.typeName)===!1&&(this.dataManager.sublayerCaches.set(o.typeName,new Map),i.add(o.typeName)),H(this.sublayerIdsCache,o.typeName,()=>new Set).add(o.id),a.push(o));this.dataManager.addToLayer(a);for(const o of i){const l=this._graphTypeLookup.get(o);if(l){const y=this._createSublayer(l);l.type==="entity"?this.dataManager.entityTypeNames.add(o):this.dataManager.relationshipTypeNames.add(o),y.geometryType?this.layers.push(y):this.tables.push(y)}}await ye(this,Array.from(i),t),await this.dataManager.refreshCacheContent(e.map(o=>o.id),void 0,void 0,void 0,t);const s={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[o,l]of this.entityLinkChartDiagramLookup.entries())l&&s.lockedNodeLocations.set(o,new me(l.coords[0],l.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,s)}_createSublayers(e,t,i){e.forEach(a=>{const n=this._createSublayer(a);i(n)&&t.push(n),this._updateSublayerCaches(a)})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(n=>n.type===i.graphType&&n.name===i.graphTypeName);a&&(i.objectType=a,i.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=J.PORTAL_ITEM&&e<J.USER}async _initializeDiagram(){var e,t;this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?((t=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||t.forEach((i,a)=>{var n;(n=i==null?void 0:i.members)==null||n.forEach(s=>{const o=s.linkChartLocation;let l;const y=s.id;if(!o)return;l="x"in o?{x:o.x,y:o.y}:{x:o.coords[0],y:o.coords[1]};const p=ee(l);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(y,p):this.entityLinkChartDiagramLookup.set(y,p),this.linkChartExtent.xmin>l.x&&(this.linkChartExtent.xmin=l.x),this.linkChartExtent.xmax<l.x&&(this.linkChartExtent.xmax=l.x),this.linkChartExtent.ymin>l.y&&(this.linkChartExtent.ymin=l.y),this.linkChartExtent.ymax<l.y&&(this.linkChartExtent.ymax=l.y)})}),this.memberRelationshipTypes.forEach(i=>{var a;i.name&&((a=this.dataManager.sublayerCaches.get(i.name))==null||a.forEach(n=>{const s=this.relationshipLinkChartDiagramLookup.get(n.attributes[re]),o=this.relationshipLinkChartDiagramLookup.get(n.attributes[se]);if(s&&o){const l=ee(new Se({paths:[[[s.coords[0],s.coords[1]],[o.coords[0],o.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(n.attributes[v],l)}else this.relationshipLinkChartDiagramLookup.set(n.attributes[v],null)}))})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const i=M=>typeof M=="number"&&!isNaN(M),a=M=>i(M)&&M>=1,n=M=>i(M)&&M>=1,s=M=>Object.values(ie).includes(M),o=M=>i(M)&&M>=0,l={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return l;const{computationBudgetTime:y,autoRepulsionRadius:p,repulsionRadiusMultiplier:g,absoluteIdealEdgeLength:f,multiplicativeIdealEdgeLength:I,idealEdgeLengthType:N}=t;return n(y)?l.computationBudgetTime=y:y&&G.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),l.autoRepulsionRadius=p,!p&&a(g)?l.repulsionRadiusMultiplier=g:p||(l.autoRepulsionRadius=!0,G.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(s(N)?l.idealEdgeLengthType=N:N!==void 0&&G.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),N==="absolute-value"&&o(f)?l.absoluteIdealEdgeLength=f:N==="absolute-value"&&f!==void 0?G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):N==="multiplier"&&o(I)?l.multiplicativeIdealEdgeLength=I:N==="multiplier"&&I!==void 0&&G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),l}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===ie.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===ie.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new te({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){var n;const t=new Set((e.entityTypes??[]).map(s=>s.name).concat((e.relationshipTypes??[]).map(s=>s.name))),i=new Set((e.entityTypes??[]).map(s=>s.name)),a=new Set((e.relationshipTypes??[]).map(s=>s.name));if(this.layers){for(const o of this.layers)!o.graphType&&t.has(o.graphTypeName)&&(o.graphType=i.has(o.graphTypeName)?"entity":"relationship");const s=this.layers.filter(o=>t.has(o.graphTypeName)&&(o.graphType==="entity"?i.has(o.graphTypeName):a.has(o.graphTypeName)));this.setAtOrigin("layers",s,Ue(this.originIdOf("layers")))}else this.layers=new K;if(this.layers&&this._originalInclusionList){const s=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),o=((n=this.tables)==null?void 0:n.map(p=>p.graphTypeName))??[],l=this.layers.map(p=>p.graphTypeName).concat(o);for(const p of l)s.has(p)||this._originalInclusionList.namedTypeDefinitions.set(p,{useAllData:!1,members:new Map});const y=[];for(const p of this._originalInclusionList.namedTypeDefinitions.keys())l.includes(p)||(G.getLogger(this).warn(`A named type, ${p}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),y.push(p));for(const p of y)this._originalInclusionList.namedTypeDefinitions.delete(p)}}};T([D(st)],k.prototype,"url",void 0),T([D()],k.prototype,"dataPreloadedInLocalCache",void 0),T([D()],k.prototype,"initializationLinkChartConfig",void 0),T([D()],k.prototype,"membershipModified",void 0),T([D()],k.prototype,"dataManager",void 0),T([D()],k.prototype,"initializationInclusionModeDefinition",null),T([D()],k.prototype,"knowledgeGraph",void 0),T([D({type:K.ofType(te),json:{write:{ignoreOrigin:!0}}})],k.prototype,"layers",void 0),T([D({readOnly:!0})],k.prototype,"linkChart",null),T([D()],k.prototype,"entityLinkChartDiagramLookup",void 0),T([D()],k.prototype,"relationshipLinkChartDiagramLookup",void 0),T([D()],k.prototype,"linkChartExtent",void 0),T([D()],k.prototype,"memberEntityTypes",void 0),T([D()],k.prototype,"memberRelationshipTypes",void 0),T([D({type:["LinkChartLayer"]})],k.prototype,"operationalLayerType",void 0),T([D()],k.prototype,"sublayerIdsCache",void 0),T([D({type:K.ofType(te),json:{write:{ignoreOrigin:!0}}})],k.prototype,"tables",void 0),T([D({json:{read:!1}})],k.prototype,"type",void 0),T([D({json:{read:!1}})],k.prototype,"chronologicalAuxiliaryGraphics",void 0),k=T([je("esri.layers.LinkChartLayer")],k);const ga=k;export{ga as default};
