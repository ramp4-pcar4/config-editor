import{a as b}from"./floatRGBA-DRFmbkvz-CiE6BMWo.js";import{a6 as D,jF as A}from"./index-JysQxb7m.js";import{n as C}from"./defaultCIMValues-BcSaJjm--58G-soMN.js";import{J as R}from"./definitions-MCCItX4r-o3EUznKY.js";const U=15.5,x=4,z=64,J=1024,V={outlineWidth:.75,referenceWidth:.75,cap:C.CIMSolidStroke.capstyle,join:C.CIMSolidStroke.joinstyle,miterLimit:C.CIMSolidStroke.miterlimit},I=()=>D.getLogger("esri.symbols.cim.rasterizingUtils"),G=32,L=t=>t==="vertical"||t==="horizontal"||t==="cross"||t==="esriSFSCross"||t==="esriSFSVertical"||t==="esriSFSHorizontal";function O(t,s,n){const r=s.style,a=A(Math.ceil(n)),o=L(r)?8*a:16*a,e=2*a;t.width=o,t.height=o;const i=t.getContext("2d");i.strokeStyle="#ffffff",i.lineWidth=a,i.beginPath(),r!=="vertical"&&r!=="cross"&&r!=="esriSFSCross"&&r!=="esriSFSVertical"||(i.moveTo(o/2,-e),i.lineTo(o/2,o+e)),r!=="horizontal"&&r!=="cross"&&r!=="esriSFSCross"&&r!=="esriSFSHorizontal"||(i.moveTo(-e,o/2),i.lineTo(o+e,o/2)),r!=="backward-diagonal"&&r!=="diagonal-cross"&&r!=="esriSFSDiagonalCross"&&r!=="esriSFSBackwardDiagonal"||(i.moveTo(-e,-e),i.lineTo(o+e,o+e),i.moveTo(o-e,-e),i.lineTo(o+e,e),i.moveTo(-e,o-e),i.lineTo(e,o+e)),r!=="forward-diagonal"&&r!=="diagonal-cross"&&r!=="esriSFSForwardDiagonal"&&r!=="esriSFSDiagonalCross"||(i.moveTo(o+e,-e),i.lineTo(-e,o+e),i.moveTo(e,-e),i.lineTo(-e,e),i.moveTo(o+e,o-e),i.lineTo(o-e,o+e)),i.stroke();const h=i.getImageData(0,0,t.width,t.height),l=new Uint8Array(h.data);let f;for(let c=0;c<l.length;c+=4)f=l[c+3]/255,l[c]=l[c]*f,l[c+1]=l[c+1]*f,l[c+2]=l[c+2]*f;return[l,t.width,t.height,a]}function K(t){t.length%2==1&&(t=[...t,...t]);const s=t.reduce((c,m)=>c+m,0),n=Math.round(s*x),r=1,a=new Float32Array(n*r);let o=0,e=0,i=.5,h=!0;for(const c of t){for(o=e,e+=c*x;i<=e;){const m=i-.5,u=Math.min(Math.abs(i-o),Math.abs(i-e));a[m]=h?-u:u,i++}h=!h}const l=a.length,f=new Uint8Array(4*l);for(let c=0;c<l;++c){const m=a[c]/x;b(m/z*.5+.5,f,4*c)}return[f,n,r]}function Q(t,s){t==null&&(t=[]);const n=s==="Butt",r=s==="Square",a=!n&&!r;t.length%2==1&&(t=[...t,...t]);const o=U,e=2*o;let i=0;for(const g of t)i+=g;const h=Math.round(i*o),l=new Float32Array(h*e),f=.5*o;let c=0,m=0,u=.5,S=!0;for(const g of t){for(c=m,m+=g*o;u<=m;){let p=.5;for(;p<e;){const $=(p-.5)*h+u-.5,d=a?(p-o)*(p-o):Math.abs(p-o);l[$]=S?n?Math.max(Math.max(c+f-u,d),Math.max(u-m+f,d)):d:a?Math.min((u-c)*(u-c)+d,(u-m)*(u-m)+d):r?Math.min(Math.max(u-c,d),Math.max(m-u,d)):Math.min(Math.max(u-c+f,d),Math.max(m+f-u,d)),p++}u++}S=!S}const T=l.length,v=new Uint8Array(4*T);for(let g=0;g<T;++g){const p=(a?Math.sqrt(l[g]):l[g])/o;b(p,v,4*g)}return[v,h,e]}function Y(t,s){const{colorRamp:n,gradientType:r}=s,a=n.type==="CIMFixedColorRamp",o=s.interval||C.CIMGradientFill.interval;let e=w(n);return a&&(e=N(e,o)),r==="Discrete"||a?j(t,e,o):P(t,e)}let y;function X(t,s){const{colorRamp:n,gradientType:r}=s,a=w(n),o=n.type==="CIMFixedColorRamp";if(r==="Continuous"&&!o)return M(t,a);const e=s.interval??C.CIMGradientFill.interval;if(o)return M(t,N(a,e));const i=[];y??(y=document.createElement("canvas")),F(y,a,e,1,0);const h=y.getContext("2d").getImageData(0,0,e,1).data;for(let l=0,f=0;l<e;l++,f=4*l){const c=[h[f+0],h[f+1],h[f+2],h[f+3]];i.push({offset:l/e,color:c}),i.push({offset:(l+1)/e,color:c})}return M(t,i)}function w(t){const s=[];switch(t.type){case"CIMPolarContinuousColorRamp":case"CIMLinearContinuousColorRamp":{t.type==="CIMPolarContinuousColorRamp"&&I().warnOnce("CIMPolarContinuousColorRamp is currently unsupported. Falling back to CIMLinearContinuousColorRamp.");const n=t;s.push({offset:0,color:[n.fromColor[0],n.fromColor[1],n.fromColor[2],n.fromColor[3]/255]}),s.push({offset:1,color:[n.toColor[0],n.toColor[1],n.toColor[2],n.toColor[3]/255]});break}case"CIMFixedColorRamp":{const n=t,r=1/(n.colors.length-1);let a=0;for(const o of n.colors)s.push({offset:a,color:[o[0],o[1],o[2],o[3]/255]}),a+=r;break}case"CIMMultipartColorRamp":{const n=t,r=n.weights.reduce((o,e)=>o+e,0);let a=0;for(let o=0;o<n.colorRamps.length;o++){const e=n.colorRamps[o],i=n.weights[o],h=w(e);for(const l of h)s.push({offset:(a+l.offset*i)/r,color:l.color});a+=i}break}default:I().error(`Color ramp "${t.type}" currently unsupported.`)}return s}function N(t,s){const n=[],r=(t.length-1)/(s-1);for(let a=0;a<s;a++){const o=t[Math.round(a*r)].color;n.push({offset:a/s,color:o}),n.push({offset:(a+1)/s,color:o})}return n}function P(t,s){return F(t,s,G,1,R),k(t)}function j(t,s,n){return F(t,s,n,1,R),k(t)}function M(t,s,n=0){for(const{offset:r,color:a}of s)t.addColorStop(Math.min(Math.max(r,n),1-n),`rgba(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`)}function F(t,s,n,r,a){const o=n+2*a;t.width=o,t.height=r;const e=(a+1)/o,i=t.getContext("2d",{willReadFrequently:!0});if(s.length>0){const h=i.createLinearGradient(0,0,o,r);M(h,s,e),i.fillStyle=h}else i.fillStyle="rgba(128, 128, 128, 1)";i.fillRect(0,0,o,r)}function k(t){const{width:s,height:n}=t,r=t.getContext("2d").getImageData(0,0,s,n),a=new Uint8Array(r.data);for(let o=0;o<a.length;o+=4){const e=a[o+3]/255;a[o]*=e,a[o+1]*=e,a[o+2]*=e}return[a,s,n]}function q(t){var a,o,e,i;const s=((o=(a=t[0])==null?void 0:a[0])==null?void 0:o[0])??0,n=((i=(e=t[0])==null?void 0:e[0])==null?void 0:i[1])??0,r={ymin:n,xmin:s,ymax:n,xmax:s,width:0,height:0};for(let h=0;h<t.length;h++){const l=t[h];for(let f=0;f<l.length;f++){const c=l[f][0],m=l[f][1];c<r.xmin&&(r.xmin=c),c>r.xmax&&(r.xmax=c),m<r.ymin&&(r.ymin=m),m>r.ymax&&(r.ymax=m)}}return r.width=Math.abs(r.xmax-r.xmin),r.height=Math.abs(r.ymax-r.ymin),r}function Z(t,s){const n=q(t),r=n.width===0?1:n.width,a=n.height===0?1:n.height,o=[];for(let e=0;e<t.length;e++){const i=t[e],h=[];for(let l=0;l<i.length;l++){let f=Math.round(i[l][0]-n.xmin),c=Math.round(i[l][1]-n.ymin);if(f=s.xmin+f*s.width/r,c=s.ymin+c*s.height/a,isNaN(f)||isNaN(c))throw new Error("Scaled shape has NaN values");h.push([f,c])}o.push(h)}return o}function _(t,s,n){const r=[];for(let a=0;a<t.length;a++){const o=t[a],e=[];for(let i=0;i<o.length;i++){const h=o[i][0]+s,l=o[i][1]+n;if(isNaN(h)||isNaN(l))throw new Error("Scaled shape has NaN values");e.push([h,l])}r.push(e)}return r}export{J as $,X as B,V as E,O as G,Z as K,x as M,_ as Q,K as V,Q as W,z as b,Y as j};
