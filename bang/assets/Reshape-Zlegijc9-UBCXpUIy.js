import{v as c,eu as b,K as st,a0 as O,m1 as ot,ai as rt,a1 as x,ak as I,jE as nt,B as at,b0 as z,ao as $,ba as k,m2 as pt,l as S,gJ as V,a6 as Y,h as ht,S as d,ac as ct,ek as q,D as lt,aD as B,ax as H,ah as R,a7 as dt,gK as mt,n as A,aj as vt,ag as W,aG as yt,a2 as ut,u as gt}from"./index-CQ8-0QQp.js";import{g as X}from"./asyncUtils-BPUlNCrX-C7s4Eh4u.js";import C from"./GraphicsLayer-BiEC2-gS-CG3veBcP.js";import{o as _t}from"./ViewingMode-CdRKcXnc-Dab70bGf.js";import{w as ft}from"./SnappingVisualizer2D-Di4uotAR-DNkCAFOm.js";import{i as xt}from"./UpdatingHandles-Bd2FQ26N-C9WmxyOD.js";import{W as Gt}from"./symbolUtils-D5Wjfwrf-DeD8gFR7.js";import{i as Q,r as Mt,l as wt}from"./SelectedVertexTooltipInfo-4SubR9ql-BOC4PD53.js";import{J as bt}from"./drawUtils-pJlGx3nm-cQWRXrZM.js";import{a as Vt,E as St}from"./GraphicMover-BruWidUQ-C6UhV0Ts.js";import{w as tt,aq as It,ap as Et,A as Ot}from"./SketchViewModel-B0qFHK0t-D9umCsYg.js";import{y as L}from"./quantityUtils-B1Ov7DZK-rgHiV8tE.js";import{b as Tt,y as kt,w as Rt,k as Ct,v as Lt}from"./SketchTooltipInfo-CkyYTifq-2O_F6Yr8.js";import{t as Ht}from"./TranslateTooltipInfo-A8pO5CNj-CVJZrd6L.js";import{u as At}from"./settings-Dt5EB2Ay-jBDbOzGw.js";import{V as Ft,g as Pt}from"./utils-Dd8gTonD-Bmstp3bu.js";import{a as Ut,q as Dt,c as zt}from"./SnappingContext-OY7xJ98b-GYa1nic4.js";import"./GraphicsCollection-uWAVmks7-DZTgsLMB.js";import"./Layer-DvVVmz9x--HAWlOUX.js";import"./TimeExtent-Cf2Pienb-Yfjpk5DQ.js";import"./BlendLayer-DjW_5k0v-DsPLpepu.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-BBqLvREw.js";import"./parser-CWccHtwJ-CeF_pdxX.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-_RgowJk9.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ScaleRangeLayer-x42fwED3-BS9j8FJs.js";import"./ElevationInfo-DE5to86a-D1mqEVyw.js";import"./lengthUtils-C61nRlXw-C-u5HD5x.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./TooltipInfoWithCoordinates-Xxefy9Or-CQPOImOM.js";import"./PointSnappingHint-OKXicQ1z-lqoujR_0.js";import"./vec32-Cj8pVsU0-Zd1nuWax.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./utils-Cb2uXNfG-DKAy_g3B.js";import"./cimSymbolUtils-DCedSSCN-CSq18u1I.js";import"./utils-BfXZnjCE-CopoHYAx.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./colorUtils-Eg6lOlXm-7UV7YEXV.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./jsxFactory-Cua8zWVZ-CUIB-Lcq.js";import"./intl-BAA1onnp-CmgFU7qQ.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./webStyleSymbolUtils-r0H5toyk-Rf-0TE3r.js";import"./devEnvironmentUtils-CxrVv3RG-ktR0Kqgv.js";import"./styleUtils-DBPDLVBX-jec2DPp4.js";import"./layerViewUtils-DLIaYA64-C1LoqlpV.js";import"./GraphicManipulator-D_ewLKOT-D2TZyaKz.js";import"./projectionUtils-B-CplN3q-DW663dnS.js";import"./projectPointToVector-BZJhoF_5-DsbpeMeC.js";import"./elevationInfoUtils-Ccn2Wfoe-wXBJ3LbN.js";import"./drapedUtils-DARF9dbf-DqnXkkZI.js";import"./editableLayers-DFUBlMJy-CU9B0Bi-.js";import"./Cyclical-DgD7_U1C-Cid2rFMP.js";import"./projectVectorToVector-DcyiGOWJ-CG4mUBsc.js";import"./geodesicUtils-DKS2UG72-Bry_MBJ6.js";import"./Query-n1aoaaFC-CzM-0Osn.js";import"./Field-BIQ-quF4-kqmmAHwF.js";import"./fieldType-PhcL4ff8-X0HNaUrC.js";import"./plane-Cf3Koz3c-CA7z34Nb.js";import"./vectorStacks-5ZZtmT9E-CG_of2E1.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./sphere-zPMQWhGG-Bt0jxp2V.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./geodeticLengthOperator-DHGBHzf3-BLB-sKh-.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-ahI2lrOa.js";import"./lineSegment-BAWQVP9P-Dq3Pxq9G.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-BjseIZEx.js";import"./Queue-DV3gpSdl-n6S4F6IF.js";import"./Version-CnwD6MZa-BnQab16p.js";import"./MeshTransform-ByFk-Izc-D5gcV1nJ.js";import"./quat-DQgq9Ar5-PhbW6pwF.js";import"./axisAngleDegrees-BTSCyz4U-CQBtS2Xo.js";import"./meshVertexSpaceUtils-CCr86FVF-DRbwYYqv.js";import"./MeshLocalVertexSpace-Cfxtmv6L-B0ei08tR.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./a11yUtils-CoCwThtH-CzyV0bKh.js";import"./memoize-DvEt8OkT-Cy_RrfpZ.js";import"./unitFormatUtils-FAypDaT5-D7hkFnG5.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./index-kib5quT9-DJY7oq0I.js";import"./draw-store-DnCf4IRI-Dmbv8jDj.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./widget-p2YDjs4S-CVRMXWsN.js";import"./substitute-B3zxyWVi-BIO25uhR.js";var E;(function(t){t[t.FeatureMove=0]="FeatureMove",t[t.VertexMove=1]="VertexMove"})(E||(E={}));const $t=()=>Y.getLogger("esri.views.draw.support.ConnectedReshapeManager"),qt=Symbol();let M=class extends ct{constructor(t){super(t),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new xt}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some(t=>t.updating)}startFeatureMove(t){this.activeOperationType=E.FeatureMove,this._activeProviders.clear();for(const e of this.providerFactories)q(this._activeProviders,e.getFeatureReshapeProvider(t))}startVertexMove(t,e){this.activeOperationType=E.VertexMove,this._activeProviders.clear();for(const i of this.providerFactories)q(this._activeProviders,i.getVertexReshapeProvider(t,e))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[t,e]of this._pendingFeatures){this._pendingFeatures.delete(t),this._modifiedFeatures.set(t,e);const i=this._graphics.get(t);i&&(this._modifiedGraphicsLayer.add(i),this._pendingGraphicsLayer.remove(i))}}translate(t,e,i=0){if(this.activeOperationType===null)return;const s=T(t),r=T(e),o=T(i);for(const n of this._activeProviders){const a=n.translate(s,r,o);this._update(a)}}async _initializeGraphic(t,e){t.symbol??(t.symbol=await this._updatingHandles.addPromise(Gt(t,{scale:this.view.scale,useSourceLayer:!0}))),this._pendingFeatures.has(e.uniqueId)?this._pendingGraphicsLayer.add(t):this._modifiedFeatures.has(e.uniqueId)&&this._modifiedGraphicsLayer.add(t),this.addHandles(await Bt(e.originalGraphic,t,this.view),qt)}_update(t){for(const e of t){const i=this._modifiedFeatures.delete(e.uniqueId);this._pendingFeatures.set(e.uniqueId,e);const s=lt(this._graphics,e.uniqueId,()=>{const r=e.graphic.cloneShallow();return this._initializeGraphic(r,e),r});s.geometry=e.graphic.geometry,i&&(this._modifiedGraphicsLayer.remove(s),this._pendingGraphicsLayer.add(s))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};async function Bt(t,e,i){const s=t.sourceLayer,r=t.getObjectId();if(r==null)return $t().error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),B();let o=null;function n(a){o==null||o.abort(),o=X(async h=>{var p;const l=await N(i,s);gt(h),l&&((p=l.setVisibility)==null||p.call(l,r,a))})}return await Zt(i,e),n(!1),H([Nt(i,e,a=>n(!a)),B(async()=>{n(!0);const a=await N(i,s);await R(()=>!(a!=null&&a.updating))})])}function Nt(t,e,i){if(t.type==="3d"){const s=new Q({graphic:e});return H([t.trackGraphicState(s),x(()=>s.displaying,i)])}return x(()=>e.visible,i)}async function Zt(t,e){if(t.type==="3d"){const i=new Q({graphic:e}),s=t.trackGraphicState(i);await R(()=>i.displaying||i.error),s.remove()}else await R(()=>e.visible)}async function N(t,e){const i=dt(e)||mt(e)?e.parent:e;return i?t.whenLayerView(i):null}function T(t){return isNaN(t)?0:t}c([d()],M.prototype,"activeOperationType",void 0),c([d()],M.prototype,"providerFactories",void 0),c([d()],M.prototype,"updating",null),c([d({constructOnly:!0})],M.prototype,"view",void 0),M=c([A("esri.views.draw.support.ConnectedReshapeManager")],M);let G=class extends Ct{constructor(t){super(t),this.type="translate-vertex",this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}};c([d()],G.prototype,"type",void 0),c([d()],G.prototype,"distance",void 0),c([d()],G.prototype,"elevation",void 0),c([d()],G.prototype,"area",void 0),c([d()],G.prototype,"totalLength",void 0),G=c([A("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],G);function Kt(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new Mt(e),selectedVertex:new wt(e),translateGraphic:new Ht(e),translateVertices:new G(e)}}function jt(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return H([x(()=>{var n,a;const o=i();return{context:o,geometry:(n=o.graphic)==null?void 0:n.geometry,vertexGeometry:(a=o.selectedVertex)==null?void 0:a.geometry}},({context:o})=>{r(()=>{Jt(o),t.info=o.activeTooltipInfo})},vt),x(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>Z(o.context))},W),Rt(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{Z(i()),s=!1}})])}function Jt(t){const e=t.activeTooltipInfo;if(e){switch(e==null?void 0:e.type){case"move-point":return Yt(e,t);case"selected-vertex":return Wt(e,t)}e.sketchOptions=t.sketchOptions}}function Yt(t,{graphic:e}){et(t,e,e==null?void 0:e.geometry)}function Wt(t,{graphic:e,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:r}){et(t,e,i==null?void 0:i.geometry);const o=e==null?void 0:e.geometry;switch(o==null?void 0:o.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=s.autoArea2D(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=r.autoLength2D(o),t.area.visible=!1}}function et(t,e,i){var s;e&&(i==null?void 0:i.type)==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=Ot(i),t.elevation.visible=!!((s=e.geometry)!=null&&s.hasZ),t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function Z(t){function e(o,n){const a=n==null?void 0:n.geometry;if(!a||a.type!=="point")return;const{dx:h,dy:l,dz:p}=Lt(o,a);if(h===0&&l===0&&p===0)return;const{x:y,y:v,z:u,m:_,spatialReference:f}=a,w=new S({x:y+h,y:v+l,z:u!=null?u+p:void 0,m:_,spatialReference:f});t.updateGeometry(n,w,a,h,l)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i==null?void 0:i.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function Xt(t,e,i,s){t.clear(),it(t,e,s,i)}function Qt(t,e,i,s,r){t.clear();const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:n}=s;(i==null?void 0:i.type)==="polygon"?t.area=o.autoArea2D(i):(i==null?void 0:i.type)==="polyline"&&(t.totalLength=n.autoLength2D(i)),it(t,e,r,s)}function it(t,e,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:r,y:o}=i.origin,n=e.toMap(i),a=e.toMap(yt(r,o)),h=s.autoDistanceBetweenPoints2D(a,n);t.distance=h??L}class te{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class ee{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class ie{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class se{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class oe{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class re{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class ne{constructor(e){this.added=e,this.type="vertex-select"}}class ae{constructor(e){this.removed=e,this.type="vertex-deselect"}}class pe{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class he{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const g=At.reshapeGraphics,ce={vertices:{default:new b({style:"circle",size:g.vertex.size,color:g.vertex.color,outline:{color:g.vertex.outlineColor,width:1}}),hover:new b({style:"circle",size:g.vertex.hoverSize,color:g.vertex.hoverColor,outline:{color:g.vertex.hoverOutlineColor,width:1}}),selected:new b({style:"circle",size:g.selected.size,color:g.selected.color,outline:{color:g.selected.outlineColor,width:1}})},midpoints:{default:new b({style:"circle",size:g.midpoint.size,color:g.midpoint.color,outline:{color:g.midpoint.outlineColor,width:1}}),hover:new b({style:"circle",size:g.midpoint.size,color:g.midpoint.color,outline:{color:g.midpoint.outlineColor,width:1}})}};let m=class extends st.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=[],this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new O,this.midpointSymbol=new b({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new O,this.snappingManager=null,this.symbols=ce,this.sketchOptions=new tt,this.type="reshape",this.vertexGraphics=new O,this.view=null}initialize(){const t=this.view;this._highlightHelper=new Vt({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=ot(()=>{var e;return(e=this.graphic)==null?void 0:e.geometry},e=>{if(!e)return;const i=new Set(this.selectedVertices.map(l=>{var p;return(p=l.attributes)==null?void 0:p.pointIndex}));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(l=>i.has(l.attributes.pointIndex)).forEach(l=>this._addToSelection(l));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,h=a.concat(n).items;s&&h.push(o),r==null||r.set("graphics",h)},W),this.tooltip=Tt(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=Kt(this.sketchOptions),this.addHandles([rt(()=>t==null?void 0:t.ready,()=>{const{layer:e,view:i}=this;Et(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),Pt.TOOL))},{once:!0,initial:!0}),x(()=>this.graphic,()=>this.refresh()),x(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),x(()=>[this.highlightsEnabled,this.highlightName],()=>{var e;(e=this._highlightHelper)==null||e.removeAll(),this._setUpHighlights()}),x(()=>this.enableMidpoints,()=>this.refresh()),jt(this.tooltip,()=>this._tooltipsContext),x(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),ut),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){var t;this._reset(),(t=this._mover)==null||t.destroy(),this._mover=null,this._connectedReshapeManager=I(this._connectedReshapeManager),this.tooltip=I(this.tooltip)}get _coordinateHelper(){var t,e,i;return((t=this._editGeometryOperations)==null?void 0:t.data.coordinateHelper)??Ut(!!((e=this.graphic.geometry)!=null&&e.hasZ),!!((i=this.graphic.geometry)!=null&&i.hasM),this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,sketchOptions:i,activeTooltipInfo:s,graphic:r}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:r,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,updateGeometry:(o,n,a,h,l)=>{this._setUpGeometryHelper();const p=o===this.graphic;if(p?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,n,h,l,!0),p){const{view:y}=this,v=y.toScreen(a),u=y.toScreen(n),_=((u==null?void 0:u.x)??0)-((v==null?void 0:v.x)??0),f=((u==null?void 0:u.y)??0)-((v==null?void 0:v.y)??0);this._emitMoveEvent(_,f),this._emitMoveStopEvent(_,f)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=I(this._editGeometryOperations)}}}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||(t==null?void 0:t.geometry)==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&nt(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){var t;this.highlightsEnabled&&this.graphic&&((t=this._highlightHelper)==null||t.add(this.graphic,this.highlightName))}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new at({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Dt.fromGeometry(e,_t.Local)}_saveSnappingContextForHandle(t,e){var s;this._snappingGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;z(i),this._snappingContext=new zt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:((s=e.viewEvent)==null?void 0:s.pointerType)||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new ft(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){var t;this._clearSelection(),(t=this._highlightHelper)==null||t.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&((t=this.view)!=null&&t.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=I(this._editGeometryOperations),this._snappingTask=$(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=K(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t==null||t.forEach((r,o)=>{r.forEach((n,a)=>{var h;s.push(new k({geometry:this._coordinateHelper.arrayToPoint(n),symbol:(h=i==null?void 0:i.vertices)==null?void 0:h.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){var r;const{_graphicAttributes:e,symbols:i}=this,s=[];for(let o=0;o<t.length;o++){const n=t[o];for(let a=0;a<n.length;a++){const h=(a+1)%n.length;if(((r=this.graphic.geometry)==null?void 0:r.type)==="polyline"&&h===0)continue;const l=n[a],p=n[h],y=this._getMidpoint(l,p);s.push(new k({geometry:y,symbol:i.midpoints.default,attributes:{...e,pathIndex:o,pointIndexStart:a,pointIndexEnd:h}}))}}return s}_updateSymbolsForTheme(){var e;const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:(e=this.symbols.vertices.hover)==null?void 0:e.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const i of this.vertexGraphics)this._isSelected(i)?i.symbol=this.symbols.vertices.selected:this._hoverGraphic===i?i.symbol=this.symbols.vertices.hover:i.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new St({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:t}=this;t.length!==0&&(this._connectedReshapeManager=new M({providerFactories:t,view:this.view}))}_onGraphicClickCallback(t){var i,s;t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),(s=(i=this.callbacks).onGraphicClick)==null||s.call(i,t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const r=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],r,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t,r=this._connectedReshapeManager,o=r?le(this.graphic):null;if(s===this.graphic){const{geometry:a}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),o&&(r==null||r.startFeatureMove([o])),void(a!=null&&a.type==="point"&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}const{selectedVertices:n}=this;if(!n.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const a=this.graphic.clone(),h=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],a,h)}this._addToSelection(s)}this._setUpOperation(t),o&&(r==null||r.startVertexMove(o,de(n))),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){var a;const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if(n.type==="polyline"||n.type==="polygon"){const h=K(n);this._updateVertexGraphicLocations(h);const{dxMap:l,dyMap:p}=me(i,s,this.view);(a=this._connectedReshapeManager)==null||a.translate(l,p,0),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(t){var n;const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),(n=this._connectedReshapeManager)==null||n.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,h,l]=pt(o,n),p=i.hasM()?0:void 0;return new S({x:a,y:h,z:l,m:p,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=j(t);return z(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){$(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=t.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const h=this.snappingManager;this._stagedVertex=h.update({point:n,context:o}),this._syncGeometryAfterVertexMove(t,new S(this._stagedVertex),e,i,a),r(),this._snappingTask=X(async l=>{const p=await h.snap({point:n,context:o,signal:l});p.valid&&(this._stagedVertex=p.apply(),this._syncGeometryAfterVertexMove(t,new S(this._stagedVertex),e,i,a),r())})}else{const h=this._stagedVertex!=null?new S(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,h,e,i,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){var n,a,h;const o=(n=this._editGeometryOperations)==null?void 0:n.data.geometry;if(o)if(o.type==="point")t.geometry=e;else if(o.type==="mesh")t.geometry=o.centerAt(e);else{const{_coordinateHelper:l}=this,[p,y]=j(t);let v=V(o);const u=v[p].length-1,_=l.pointToArray(e);v[p][y]=_,o.type==="polygon"&&(y===0?v[p][u]=_:y===u&&(v[p][0]=_)),this._isVertex(t)&&(v=this._moveRelatedCoordinates(v,t,_),v=this._moveSelectedHandleCoordinates(v,t,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(v)),this._updateGraphicGeometry(o.clone());const f=l.pointToVector(e),w=this._getVertexFromEditGeometry(t),F=l.getZ(f),P=f[0]-w.pos[0],U=f[1]-w.pos[1],D=F!=null?F-w.pos[2]:0;(a=this._editGeometryOperations)==null||a.moveVertices([w],P,U,D),(h=this._connectedReshapeManager)==null||h.translate(P,U,D),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:h}=o.attributes,l=bt(o.geometry,i,s,this.view),p=V(l),y=t[n].length-1;t[n][a]=p,o.geometry=l,r&&(a===0?t[n][y]=p:a===y&&(t[n][0]=p));for(const v of h){const u=this.vertexGraphics.at(v),{pathIndex:_,pointIndex:f}=u.attributes;t[_][f]=p,u.geometry=l}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:h}=t.attributes,l=V(t.geometry),p=h===0?a+1:h,y=V(r);return y[n].splice(p,0,l),t.attributes={...e,pathIndex:n,pointIndex:p,relatedGraphicIndices:[]},o.push({coordinates:y[n][p],componentIndex:n,vertexIndex:p}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=J(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&kt(t,this.tooltip)||Ft.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=V(s);const o=[],n=J(t);for(const a of n){const{x:h,y:l}=a.geometry;for(let p=0;p<r.length;p++){const y=r[p];for(let v=0;v<y.length;v++){const[u,_]=y[v];h===u&&l===_&&(o.push({coordinates:r[p][v],componentIndex:p,vertexIndex:v}),r[p].splice(Number(v),1))}}}if(s.type==="polygon")r=r.filter(a=>{if(a.length<2)return!1;const[h,l]=a[0],[p,y]=a[a.length-1];return(a.length!==2||h!==p||l!==y)&&(h===p&&l===y||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s==null?void 0:s.geometry;(n==null?void 0:n.type)==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,Xt(i,r,this._tooltipsContext,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,Qt(i,r,n,this._tooltipsContext,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){var e,i;(e=this._updateHandlesOnExternalGeometryChange)==null||e.pause(),this.graphic.geometry=t,(i=this._updateHandlesOnExternalGeometryChange)==null||i.resume()}_emitMoveStartEvent(t,e){var s,r;const i=new se(this.graphic,t,e);this.emit("move-start",i),(r=(s=this.callbacks).onMoveStart)==null||r.call(s,i)}_emitMoveEvent(t,e){var s,r;const i=new oe(this.graphic,t,e);this.emit("move",i),(r=(s=this.callbacks).onMove)==null||r.call(s,i)}_emitMoveStopEvent(t,e){var s,r;if(t==null||e==null){const o=this._activeOperationInfo;if(!o)return;t=o.totalDx,e=o.totalDy}const i=new re(this.graphic,t,e);this.emit("move-stop",i),(r=(s=this.callbacks).onMoveStop)==null||r.call(s,i)}_emitReshapeStartEvent(t){var i,s;const e=new te(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),(s=(i=this.callbacks).onReshapeStart)==null||s.call(i,e)}_emitReshapeEvent(t){var i,s;const e=new ee(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),(s=(i=this.callbacks).onReshape)==null||s.call(i,e)}_emitReshapeStopEvent(t){var i,s;const e=new ie(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),(s=(i=this.callbacks).onReshapeStop)==null||s.call(i,e)}_emitSelectEvent(t){var i,s;const e=new ne(t);this.emit("select",e),(s=(i=this.callbacks).onVertexSelect)==null||s.call(i,e)}_emitDeselectEvent(t){var i,s;const e=new ae(t);this.emit("deselect",e),(s=(i=this.callbacks).onVertexDeselect)==null||s.call(i,e)}_emitVertexAddEvent(t,e,i){var r,o;const s=new pe(t,this.graphic,e,i);this.emit("vertex-add",s),(o=(r=this.callbacks).onVertexAdd)==null||o.call(r,s)}_emitVertexRemoveEvent(t,e,i){var r,o;const s=new he(t,this.graphic,e,i);this.emit("vertex-remove",s),(o=(r=this.callbacks).onVertexRemove)==null||o.call(r,s)}_logGeometryTypeError(){Y.getLogger(this).error(new ht("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function K(t){const e=V(t.clone());if(t.type==="polygon")for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function j({attributes:t}){return[(t==null?void 0:t.pathIndex)||0,(t==null?void 0:t.pointIndex)||0]}function J(t){return t instanceof k?[t]:[...t]}function le(t){const e=t.sourceLayer??t.layer;return It(e)?{graphic:t,layer:e}:null}function de(t){return t.toArray().map(e=>({pathIndex:e.attributes.pathIndex,vertexIndex:e.attributes.pointIndex}))}function me(t,e,i){const s=i.state.inverseTransform;return{dxMap:s[0]*t+s[2]*e,dyMap:s[1]*t+s[3]*e}}c([d()],m.prototype,"_activeOperationInfo",void 0),c([d()],m.prototype,"_connectedReshapeManager",void 0),c([d()],m.prototype,"_coordinateHelper",null),c([d()],m.prototype,"_editGeometryOperations",void 0),c([d()],m.prototype,"tooltip",void 0),c([d()],m.prototype,"tooltipInfos",void 0),c([d()],m.prototype,"activeTooltipInfo",void 0),c([d({constructOnly:!0})],m.prototype,"automaticAreaMeasurementUtils",void 0),c([d({constructOnly:!0})],m.prototype,"automaticLengthMeasurementUtils",void 0),c([d()],m.prototype,"_selectedVertex",null),c([d()],m.prototype,"_tooltipsContext",null),c([d()],m.prototype,"callbacks",void 0),c([d()],m.prototype,"connectedReshapeProviders",void 0),c([d()],m.prototype,"enableMidpoints",void 0),c([d()],m.prototype,"enableMovement",void 0),c([d()],m.prototype,"enableVertices",void 0),c([d()],m.prototype,"graphic",void 0),c([d()],m.prototype,"highlightName",void 0),c([d()],m.prototype,"highlightsEnabled",void 0),c([d()],m.prototype,"layer",void 0),c([d({readOnly:!0})],m.prototype,"midpointGraphics",void 0),c([d()],m.prototype,"midpointSymbol",void 0),c([d({readOnly:!0})],m.prototype,"selectedVertices",void 0),c([d()],m.prototype,"snappingManager",void 0),c([d({readOnly:!0})],m.prototype,"state",null),c([d()],m.prototype,"symbols",void 0),c([d({type:tt})],m.prototype,"sketchOptions",void 0),c([d({readOnly:!0})],m.prototype,"type",void 0),c([d({readOnly:!0})],m.prototype,"vertexGraphics",void 0),c([d()],m.prototype,"view",void 0),m=c([A("esri.views.draw.support.Reshape")],m);const ss=m;export{ss as default};
