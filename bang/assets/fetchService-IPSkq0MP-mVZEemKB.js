import{N as f,it as p}from"./index-DECxckyg.js";async function y(e,t){const{data:r}=await f(e,{responseType:"json",query:{f:"json",...t==null?void 0:t.customParameters,token:t==null?void 0:t.apiKey}});return r}const L=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function h(e,t){const{loadContext:r,...a}=t||{},n=r?await r.fetchServiceMetadata(e,a):await y(e,a),l=p();u(n),i(n);const o={serviceJSON:n,preferredHost:l};if((n.currentVersion??0)<10.5)return o;const c=`${e}/layers`,s=r?await r.fetchServiceMetadata(c,a):await y(c,a);return u(s),i(s),o.layersJSON={layers:s.layers,tables:s.tables},o}function b(e){const{type:t}=e;return!!t&&L.has(t)}function d(e){return e.type==="Table"}function i(e){var t,r;e.layers=(t=e.layers)==null?void 0:t.filter(b),e.tables=(r=e.tables)==null?void 0:r.filter(d)}function m(e){e.type||(e.type="Feature Layer")}function w(e){e.type||(e.type="Table")}function u(e){var t,r;(t=e.layers)==null||t.forEach(m),(r=e.tables)==null||r.forEach(w)}function F(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}export{h as b,F as g,y as o};
