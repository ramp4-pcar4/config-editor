import{E as q,c as d,ii as K,bL as G,dX as I,G as O,cX as Q,cn as ee,r as D,L as te,el as U,bP as R,en as W,a8 as ie,b3 as ne,ij as se,cW as ae}from"./index-DLCK036j.js";import{Q as M,O as z}from"./projection-m8vi7Cxv-BuVyJKtc.js";import{e as N}from"./TileKey-B_6qmYK--BtZdR-Xy.js";const V=()=>ie.getLogger("esri.layers.support.ElevationSampler");class X{queryElevation(e){return oe(e.clone(),this)}on(){return ne()}projectIfRequired(e,t){return Y(e,t)}}class le extends X{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super(),this.tile=e,this.noDataValue=i;const n=e.tile.extent;this.extent=W(n,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=n;const s=R(t.spatialReference),a=t.lodAt(e.tile.level).resolution*s;this.demResolution={min:a,max:a}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return t!=null&&this.containsAt(t.x,t.y)}containsAt(e,t){return se(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const i=this.extent,n=`${i.xmin}, ${i.ymin}, ${i.xmax}, ${i.ymax}`;return V().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class Z extends X{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){let n;super(),typeof t=="number"?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(a=>new le(a,n,this.noDataValue)):e;const s=this.samplers[0];if(s){this.extent=s.extent.clone();const{min:a,max:o}=s.demResolution;this.demResolution={min:a,max:o};for(let r=1;r<this.samplers.length;r++){const c=this.samplers[r];this.extent.union(c.extent),this.demResolution.min=Math.min(this.demResolution.min,c.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,c.demResolution.max)}}else this.extent=W(Q(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){let i,n=!1;for(const s of this.samplers)if(s.containsAt(e,t)&&(n=!0,i=s.elevationAt(e,t),i!==s.noDataValue))return i;return i??(n||V().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue)}}function oe(l,e){const t=Y(l,e.spatialReference);if(!t)return null;switch(l.type){case"point":re(l,t,e);break;case"polyline":ce(l,t,e);break;case"multipoint":ue(l,t,e)}return l}function Y(l,e){if(l==null)return null;const t=l.spatialReference;if(t.equals(e))return l;const i=ae(l,e);return i||V().error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),i}function re(l,e,t){l.z=t.elevationAt(e.x,e.y)}function ce(l,e,t){y.spatialReference=e.spatialReference;const i=l.hasM&&!l.hasZ;for(let n=0;n<l.paths.length;n++){const s=l.paths[n],a=e.paths[n];for(let o=0;o<s.length;o++){const r=s[o],c=a[o];y.x=c[0],y.y=c[1],i&&(r[3]=r[2]),r[2]=t.elevationAt(y.x,y.y)}}l.hasZ=!0}function ue(l,e,t){y.spatialReference=e.spatialReference;const i=l.hasM&&!l.hasZ;for(let n=0;n<l.points.length;n++){const s=l.points[n],a=e.points[n];y.x=a[0],y.y=a[1],i&&(s[3]=s[2]),s[2]=t.elevationAt(y.x,y.y)}l.hasZ=!0}const y=new q;let he=class{constructor(l,e){this.data=l,this.safeWidth=.99999999*(l.width-1),this.dx=(l.width-1)/(e[2]-e[0]),this.dy=(l.width-1)/(e[3]-e[1]),this.x0=e[0],this.y1=e[3]}};class B{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new he(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}get hasNoDataValues(){var e;return!!((e=this._samplerData)!=null&&e.data.hasNoDataValues)}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:s,dy:a,y1:o,x0:r}=this._samplerData,{width:c,values:u,noDataValue:m}=n,f=P(a*(o-t),0,i),h=P(s*(e-r),0,i),v=Math.floor(f),b=Math.floor(h),_=v*c+b,F=_+c,A=u[_],E=u[F],k=u[_+1],S=u[F+1];if(A!==m&&E!==m&&k!==m&&S!==m){const L=h-b,$=A+(k-A)*L;return $+(E+(S-E)*L-$)*(f-v)}}}function P(l,e,t){return l<e?e:l>t?t:l}class De{async queryAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(c=>c.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=x.fromGeometry(t);let s=!1;i!=null&&i.returnSampleInfo||(s=!0);const a={...T,...i,returnSampleInfo:!0},o=await this.query(e[e.length-1],n,a),r=await this._queryAllContinue(e,o,a);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof x)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...T,...i},s=new fe(e,t.spatialReference,n),a=n.signal;return await e.load({signal:a}),await me(s,t,a),await this._selectTiles(s,a),await g(s,a),Te(s),ge(s,a)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...T,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i!=null&&i.ignoreInvisibleLayers?e.filter(a=>a.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...T,...i,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,s,n)}async _createSampler(e,t,i,n){const s=i.signal;await e.load({signal:s});const a=t.spatialReference,o=e.tileInfo.spatialReference;a.equals(o)||(await M([{source:a,dest:o}],{signal:s}),t=z(t,o));const r=new pe(e,t,i,n);return await this._selectTiles(r,s),await g(r,s),new Z(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.filter(c=>!c.tile.hasNoDataValues).map(c=>K(c.extent)),a=await this._createSampler(e[e.length-1],t,n,s);if(a.samplers.length===0)return i;const o=i.samplers.concat(a.samplers),r=new Z(o,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),s=t.geometry.coordinates,a=t.sampleInfo;G(a);const o=[],r=[];for(let f=0;f<s.length;f++){const h=a[f];h.demResolution>=0?h.source||(h.source=n):e.length&&(o.push(s[f]),r.push(f))}if(!e.length||o.length===0)return t;const c=t.geometry.clone(o),u=await this.query(e[e.length-1],c,i),m=u.sampleInfo;if(!m)throw new Error("no sampleInfo");return r.forEach((f,h)=>{s[f].z=u.geometry.coordinates[h].z,a[f].demResolution=m[h].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&de(e);const i=e.options.demResolution;if(typeof i=="number")xe(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,s=J(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const s=n.tilemapCache,a=e.getTilesToFetch();try{if(s&&!C(s))await I(Promise.all(a.map(o=>s.fetchAvailability(o.level,o.row,o.col,{signal:i}))),i);else if(await g(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(o){O(o),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){ve(e),we(e);const i=e.layer.tilemapCache;if(!i||C(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),s={},a=n.map(async o=>{const r=new N(null,0,0,0,Q()),c=await ee(i.fetchAvailabilityUpsample(o.level,o.row,o.col,r,{signal:t}));c.ok!==!1?o.id!=null&&(s[o.id]=r):O(c.error)});await I(Promise.all(a),t),e.remapTiles(s)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await g(e,t);let n=!1;e.forEachTileToFetch((s,a)=>{i.upsampleTile(s)?n=!0:a()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await M([{source:this.spatialReference,dest:e}],{signal:t});const i=new D({spatialReference:this.spatialReference,points:this.coordinates.map(o=>[o.x,o.y])}),n=z(i,e);if(!n)return null;const s=this.coordinates.map((o,r)=>{const c=o.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c}),a=this.clone(s);return a.spatialReference=e,a}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const s=e.clone(i);return s.spatialReference=n,s};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?[new p(i.x,i.y,i.z,i.m)]:n?[new p(i.x,i.y,i.z)]:s?[new p(i.x,i.y,null,i.m)]:[new p(i.x,i.y)],t._exporter=(a,o)=>e.hasM?new q(a[0].x,a[0].y,a[0].z,a[0].m,o):new q(a[0].x,a[0].y,a[0].z,o);break}case"multipoint":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?i.points.map(a=>new p(a[0],a[1],a[2],a[3])):n?i.points.map(a=>new p(a[0],a[1],a[2])):s?i.points.map(a=>new p(a[0],a[1],null,a[2])):i.points.map(a=>new p(a[0],a[1])),t._exporter=(a,o)=>e.hasM?new D({points:a.map(r=>[r.x,r.y,r.z,r.m]),hasZ:!0,hasM:!0,spatialReference:o}):new D(a.map(r=>[r.x,r.y,r.z]),o);break}case"polyline":{const i=e,n=[],s=[],{hasZ:a,hasM:o}=e;let r=0;for(const c of i.paths)if(s.push([r,r+c.length]),r+=c.length,a&&o)for(const u of c)n.push(new p(u[0],u[1],u[2],u[3]));else if(a)for(const u of c)n.push(new p(u[0],u[1],u[2]));else if(o)for(const u of c)n.push(new p(u[0],u[1],null,u[2]));else for(const u of c)n.push(new p(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const m=e.hasM?c.map(h=>[h.x,h.y,h.z??0,h.m??0]):c.map(h=>[h.x,h.y,h.z??0]),f=s.map(h=>m.slice(h[0],h[1]));return new te({paths:f,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class p{constructor(e,t,i=null,n=null,s=null,a=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=s,this.elevationTile=a}clone(){return new p(this.x,this.y,this.z,this.m)}}class H{constructor(e,t){this.layer=e,this.options=t}}class fe extends H{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i)[e].level;this.geometry.coordinates.forEach(s=>s.tile=t.tileAt(n,s.x,s.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const s=n.tile;if(!s)continue;const a=(i=n.tile)==null?void 0:i.id;n.elevationTile||!a||e[a]||(e[a]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class pe extends H{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i);if(!e)return n.length-1;const s=this.extent;if(s==null)return-1;for(let a=n.length-1;a>=0;a--){const o=n[a],r=o.resolution*t.size[0],c=o.resolution*t.size[1];if(Math.ceil(s.width/r)*Math.ceil(s.height/c)<=e)return a}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=j(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let s=!1;e(n,()=>s=!0),s?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=j(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,s=w(i,n)[e],a=i.tileAt(s.level,t.xmin,t.ymin),o=a.extent;if(o==null)return;const r=s.resolution*i.size[0],c=s.resolution*i.size[1],u=Math.ceil((t.xmax-o[0])/r),m=Math.ceil((t.ymax-o[1])/c);for(let f=0;f<m;f++)for(let h=0;h<u;h++){const v=new N(null,a.level,a.row-f,a.col+h);i.updateTileInfo(v),this._tileIsMasked(v)||this._candidateTiles.push(v)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&U(t,e.extent))}}function J(l,e,t=0){const i=w(l,e);let n=i.length-1;if(t>0){const s=t/R(l.spatialReference),a=i.findIndex(o=>o.resolution<s);a===0?n=0:a>0&&(n=a-1)}return n}const T={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function me(l,e,t){let i;const n=l.layer.tileInfo.spatialReference;if(e instanceof x?i=await e.project(n,t):(await M([{source:e.spatialReference,dest:n}],{signal:t}),i=z(e,n)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);l.geometry=x.fromGeometry(i)}function de(l){if(l.layer.fullExtent==null)return;const e=new B(null);e.sample=()=>l.options.noDataValue,l.outsideExtentTile=e;const t=l.layer.fullExtent;l.geometry.coordinates.forEach(i=>{const n=i.x,s=i.y;(n<t.xmin||n>t.xmax||s<t.ymin||s>t.ymax)&&(i.elevationTile=e)})}function ye(l,e){const{tileInfo:t,tilemapCache:i}=l.layer,n=e/R(t.spatialReference),s=w(t,i);let a=s[0],o=0;for(let r=1;r<s.length;r++){const c=s[r];Math.abs(c.resolution-n)<Math.abs(a.resolution-n)&&(a=c,o=r)}return o}function xe(l,e){const t=ye(l,e);l.selectTilesAtLOD(t)}function ve(l){const{tileInfo:e,tilemapCache:t}=l.layer,i=J(e,t,l.options.minDemResolution);l.selectTilesAtLOD(i,l.options.maximumAutoTileRequests)}function w(l,e){const t=l.lods;if(C(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(s=>s.level>=i&&s.level<=n)}return t}async function g(l,e){const t=l.getTilesToFetch(),i={},n=l.options.cache,s=l.options.noDataValue,a=t.map(async o=>{if(o.id==null)return;const r=`${l.layer.uid}:${o.id}:${s}`,c=n!=null?n.get(r):null,u=c??await l.layer.fetchTile(o.level,o.row,o.col,{noDataValue:s,signal:e});n==null||n.put(r,u),i[o.id]=new B(o,u)});await I(Promise.allSettled(a),e),l.populateElevationTiles(i)}function we(l){const e=l.layer.tileInfo;let t=0;const i={},n=o=>{o.id!=null&&(o.id in i?i[o.id]++:(i[o.id]=1,t++))},s=o=>{if(o.id==null)return;const r=i[o.id];r===1?(delete i[o.id],t--):i[o.id]=r-1};l.forEachTileToFetch(n,s);let a=!0;for(;a&&(a=!1,l.forEachTileToFetch(o=>{t<=l.options.maximumAutoTileRequests||(s(o),e.upsampleTile(o)&&(a=!0),n(o))},s),a););}function Te(l){l.geometry.coordinates.forEach(e=>{const t=e.elevationTile;let i=l.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i})}function j(l,e){const t={},i=[];for(const s of l){const a=s.id;a&&!t[a]?(t[a]=s,i.push(s)):e&&e(s)}const n=i.sort((s,a)=>s.level-a.level);return n.filter((s,a)=>{for(let o=0;o<a;o++){const r=n[o].extent;if(r&&s.extent&&U(r,s.extent))return e&&e(s),!1}return!0})}async function ge(l,e){const t=await l.geometry.project(l.outSpatialReference,e);G(t);const i={geometry:t.export(),noDataValue:l.options.noDataValue};return l.options.returnSampleInfo&&(i.sampleInfo=Re(l)),l.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),i}function Re(l){const e=l.layer.tileInfo,t=R(e.spatialReference);return l.geometry.coordinates.map(i=>{let n=-1;return i.elevationTile&&i.elevationTile!==l.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}})}function C(l){return(l==null?void 0:l.tileInfo)!=null}export{De as ElevationQuery,x as GeometryDescriptor,J as getFinestLodIndex};
