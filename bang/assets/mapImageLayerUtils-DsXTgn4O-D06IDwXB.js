import{U as p,D as u}from"./utils-DyDDSDvN-B5LhAnGp.js";import{R as y,l as f,c as I,I as o,f as i}from"./portalItemUtils-BfWDJg-S-Cye-E-nz.js";import"./index-12gn5LMs.js";import"./originUtils-BLsWtgV9-CGkwp8uO.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./PortalItem-BP-IQXnZ-BvE7Tu8a.js";import"./jsonContext-C9WBVzLb-CEuGbb9z.js";import"./saveUtils-W0sSii7v-GjPPAApG.js";import"./projectionUtils-B-CplN3q-BJPnkKI4.js";const s="Map Service",v="map-image-layer-save",d="map-image-layer-save-as";function m(r){var e;return{isValid:r.type==="map-image"&&!((e=r.sourceJSON)!=null&&e.tileInfo),errorMessage:"Layer.type should be 'map-image' and reference a dynamic (non-cached) map service"}}function l(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}function g(r,e){return c(r,e),Promise.resolve()}async function A(r,e){const{parsedUrl:t,title:a,fullExtent:n}=r;e.url=t.path,e.title||(e.title=a),e.extent=n?await y(n):null,f(e,i.METADATA),c(r,e)}function c(r,e){var a;I(e,i.DYNAMIC);const t=((a=r.sublayers)==null?void 0:a.length)??0;o(e,i.MULTI_LAYER,t>1),o(e,i.SINGLE_LAYER,t===1)}async function S(r,e){return p({layer:r,itemType:s,validateLayer:m,createItemData:l,errorNamePrefix:v,setItemProperties:g},e)}async function b(r,e,t){return u({layer:r,itemType:s,validateLayer:m,createItemData:l,errorNamePrefix:d,newItem:e,setItemProperties:A},t)}export{S as save,b as saveAs};
