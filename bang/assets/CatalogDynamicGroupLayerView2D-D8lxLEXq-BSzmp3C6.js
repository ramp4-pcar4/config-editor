import{a0 as b,v as p,n as S,S as n,bv as U,ax as x,aD as _,b3 as H,a6 as I,bJ as g}from"./index-1o7Uo5_u.js";import{G as O}from"./LayerView2D-BaefGYf9-DxMpdQ3e.js";import{t as N}from"./LayerView-DdANuT-Y-BwzKAa0L.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-Dr2EdOEZ-4QDlOA_v.js";import"./MapView-DVZSZHRJ-Cebedyfx.js";import"./Cyclical-DgD7_U1C-CS_HLB-2.js";import"./CollectionFlattener-DyEG1Q6J-DWFNs5mx.js";import"./workers-CeRXsnNJ-DvG5AvTn.js";import"./Queue-DV3gpSdl-CaOyhJy3.js";import"./intl-BAA1onnp-CqFGGOQF.js";import"./projectionUtils-B-CplN3q-D6LxMKAS.js";import"./TileInfo-U28GysF5-CzAjmeSR.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-DNYIfQLy.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-BjItE280.js";import"./asyncUtils-BPUlNCrX-CkkepdUd.js";import"./utils-Dd8gTonD-vSfr4Pmb.js";import"./Version-CnwD6MZa-DNpnXeBY.js";import"./Map-7V1pm_Jo-DwqFSo_K.js";import"./Basemap-C_NhFN5u-KsdOdFjA.js";import"./loadAll-DQWsVoX1-Cw90ceIp.js";import"./PortalItem-BP-IQXnZ-BgLaZTp-.js";import"./writeUtils-DAOvycBP-DYDki-_x.js";import"./persistable-DgPk2hdg-DUUvjDKJ.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-cBOmBGj3.js";import"./PolygonCollection-Btw6sA7T-DvG2Yw73.js";import"./editableLayers-DFUBlMJy-HnBQroao.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-C2pUVsZe.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-BORwbVPt-Cf2s-C_5.js";import"./Layer-DvVVmz9x-DPmiazsV.js";import"./TimeExtent-Cf2Pienb-Cf2x6jj_.js";import"./GraphicsCollection-uWAVmks7-Beh0EV8U.js";import"./HeightModelInfo-C4voFc4k-CK9MZri_.js";import"./timeZoneUtils-d5p0Jda1-DOnF-q59.js";import"./ReactiveMap-iPeM8evD-TeLsiYH2.js";import"./Query-n1aoaaFC-DhJp6MZC.js";import"./Field-BIQ-quF4-X7Arem4z.js";import"./fieldType-PhcL4ff8-C5l4Xhbr.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-DyTGmILj.js";import"./projectionUtils-Dt6hj1Xh-BxXUfIZS.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-CuGOcFat.js";import"./normalizeUtilsCommon-ClagynAA-Tfm8XoVn.js";import"./utils-BO8hgPs3-BIQC0bAi.js";import"./utils-DpLVEUvg-CaXyb1MK.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-BMUiOznT.js";import"./debugFlags-8tOwPnHK-Efdkzy2c.js";import"./vec32-Cj8pVsU0-Cl_uQ3p6.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-BjT6ztUq.js";import"./TileKey-_zikB14n-Clq_QAqL.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./Texture-D5XWO2GQ-DP3iy6MI.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./imageUtils-D3tfFRL_-DyzsxNo3.js";import"./capabilities-BaKzUyhi-B84We26i.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-CzccJBMQ.js";import"./EffectView-Bpu5U548-CQnUAZXX.js";import"./parser-CWccHtwJ-CpOFcNhd.js";import"./layerViewUtils-DLIaYA64-CDq67iI-.js";const y=Symbol(),T=d=>{let r=class extends d{constructor(){super(...arguments),this.layerViews=new b,this._debouncedUpdate=U(async()=>{const{layer:t,parent:e}=this,o=e==null?void 0:e.footprintLayerView;let a=[];const s=this._createQuery();if(s&&o){const{features:h}=await o.queryFeatures(s);this.suspended||(a=h.map(u=>t.acquireLayer(u)))}this.removeHandles(y),this.addHandles(a,y)})}get creatingLayerViews(){var t;return((t=this.view)==null?void 0:t.layerViewManager.isCreatingLayerViewsForLayer(this.layer))??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(t=>t.updating)}enableLayerUpdates(){return x([this._updatingHandles.addWhen(()=>{var t,e;return((e=(t=this.parent)==null?void 0:t.footprintLayerView)==null?void 0:e.dataUpdating)===!1},()=>this.updateLayers()),this._updatingHandles.add(()=>{var t,e,o,a,s;return[this.layer.maximumVisibleSublayers,(t=this.layer.parent)==null?void 0:t.orderBy,(o=(e=this.parent)==null?void 0:e.footprintLayerView)==null?void 0:o.filter,(s=(a=this.parent)==null?void 0:a.footprintLayerView)==null?void 0:s.timeExtent,this.suspended]},()=>this.updateLayers()),_(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(H(this._debouncedUpdate()).catch(t=>{I.getLogger(this).error(t)}))}_createQuery(){var V,v;const t=(V=this.parent)==null?void 0:V.footprintLayerView,e=(v=this.layer)==null?void 0:v.parent;if(!t||!e||e.destroyed)return null;const{layer:{maximumVisibleSublayers:o},view:{scale:a}}=this;if(!o)return null;const{itemTypeField:s,itemSourceField:h,itemNameField:u,minScaleField:c,maxScaleField:f,objectIdField:$,orderBy:w}=e,C=g(`${c} IS NULL OR ${a} <= ${c} OR ${c} = 0`,`${f} IS NULL OR ${a} >= ${f}`),m=w==null?void 0:w.find(l=>l.field&&!l.valueExpression),i=t.createQuery();if(i.returnGeometry=!1,i.num=o,i.outFields=[$,h,u],i.where=g(i.where,C),this.unsupportedItemTypes!=null){const l=`${s} NOT IN (${this.unsupportedItemTypes.map(F=>`'${F}'`)})`;i.where=g(i.where,l)}return m!=null&&m.field&&(i.orderByFields=[`${m.field} ${m.order==="descending"?"DESC":"ASC"}`],i.outFields.push(m.field)),i}};return p([n({readOnly:!0})],r.prototype,"creatingLayerViews",null),p([n()],r.prototype,"layer",void 0),p([n()],r.prototype,"layerViews",void 0),p([n({readOnly:!0})],r.prototype,"unsupportedItemTypes",void 0),p([n()],r.prototype,"parent",void 0),p([n({readOnly:!0})],r.prototype,"isUpdating",null),r=p([S("esri.views.layers.CatalogDynamicGroupLayerView")],r),r};let L=class extends T(O(N)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new b}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(d){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((d,r)=>this.container.addChildAt(d.container,r))}};L=p([S("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],L);const pe=L;export{pe as default};
