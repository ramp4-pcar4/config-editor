import{v as d,S as g,o as T,n as $,l as j,N as z,a0 as G,a1 as W,ao as K,ak as C,ar as A,cj as O,A as E,Q as Y,X as H}from"./index-DRDU_nTl.js";import{K as Q,O as q}from"./projectionUtils-B-CplN3q-B7QPK1Xx.js";import{L as M,j as J,M as X}from"./kmlUtils-in2U-qbi-BZdJZiJp.js";import{m as Z}from"./utils-BO8hgPs3-CHxondnJ.js";import{o as P}from"./GraphicsCollection-uWAVmks7-DTcnCn7t.js";import{B as tt,M as it,h as et}from"./BitmapTechnique-CHUhq2KJ-BkDsk2OP.js";import{n as rt}from"./BitmapContainer-CRol5kLe-DkBbr4h-.js";import{G as ot}from"./LayerView2D-BaefGYf9-DMc36Z1J.js";import{d as R}from"./GraphicContainer-c1LxUVI--D6kLxRLr.js";import{b as k}from"./GraphicsView2D-D4hKcKkn-Dz3-rlb7.js";import{t as at}from"./LayerView-DdANuT-Y-CNsg-F8d.js";import{execute as st}from"./projectOperator-BEghhU44-CgHAls0Z.js";import{I as nt,D as pt,W as lt}from"./rasterProjectionHelper-DGqzGF1m-BmJoAw_B.js";import{w as mt,F as ht,R as ct}from"./RenderingContext-Ce9q3uBe-B6I38VeE.js";import{U as L,F as dt,Y as ut}from"./enums-wEDHPbCF-Cf76M5_x.js";import{d as gt}from"./FramebufferObject-D3QloItC-BCl1Wh2i.js";import{F as _t}from"./rasterUtils-CV4tTwvB-D9apXnPe.js";import{Y as N,_ as wt}from"./Texture-D5XWO2GQ-B9aUQzsa.js";import"./jsonUtils-CzRaZnmS-5ikt-6i3.js";import"./typeUtils-CB2EGBWO-h5-rwMVV.js";import"./ClassBreaksRenderer-Bq2XGpfI-XPZkvr3K.js";import"./commonProperties-CJLeiNuA-CShbG08T.js";import"./colorRamps-trM-CPFS-HGlbOVMC.js";import"./ColorStop-CL7v3R-A-BUT3nBNw.js";import"./visualVariableUtils-BTS148WR-LL3NWewP.js";import"./lengthUtils-C61nRlXw-ttxBda7R.js";import"./RendererLegendOptions-Bil_IDab-DmYL58TV.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./DictionaryScriptEvaluator-DW5hOK9A-31xRLS33.js";import"./Version-CnwD6MZa-bAZgKPIl.js";import"./FieldsIndex-Bt0Y8aWr-BXn84fF2.js";import"./UnknownTimeZone-DxjyzFvs-cjzeJI3F.js";import"./timeZoneUtils-d5p0Jda1-BUF1-4-D.js";import"./ArcadeExpression-XjY3x7KV-DNejdRYH.js";import"./TimeOnly-CGkId3bj-44ueVjBl.js";import"./enum-g1DWyQyu-BtAPMkcr.js";import"./utils-BfXZnjCE-SvVDBGfQ.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-14xziRoT.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./SimpleRenderer-C1YRhRzu-B3fJ4OCP.js";import"./UniqueValueRenderer-CLXHFtg9-DeGd1Q65.js";import"./diffUtils-BxG8DCnW-CCukhNys.js";import"./styleUtils-DBPDLVBX-AaWiwUYu.js";import"./FeatureSet-BVGGhhH9-BrSwvD-j.js";import"./Field-BIQ-quF4-D9klJRUl.js";import"./fieldType-PhcL4ff8-mKwAUt_F.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./MapView-DVZSZHRJ-Bmk5RAAw.js";import"./Cyclical-DgD7_U1C-DW5Gd-GL.js";import"./CollectionFlattener-DyEG1Q6J-CX4KYnzI.js";import"./workers-CeRXsnNJ-CHie0kLD.js";import"./Queue-DV3gpSdl-BBj5GUvp.js";import"./intl-BAA1onnp-DGsLCBho.js";import"./TileInfo-U28GysF5-Csxj8poM.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-C6Sz0VgP.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-CvefNm7m.js";import"./asyncUtils-BPUlNCrX-B0y5b9rY.js";import"./utils-Dd8gTonD-CbyytSu2.js";import"./Map-7V1pm_Jo-BJlgGPmn.js";import"./Basemap-C_NhFN5u-mtWBZJ1F.js";import"./loadAll-DQWsVoX1-B6Kwb4K3.js";import"./PortalItem-BP-IQXnZ-BpV17zma.js";import"./writeUtils-DAOvycBP-TEGxhpVZ.js";import"./persistable-DgPk2hdg-ByJO8YtM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-C0f9QwIa.js";import"./PolygonCollection-Btw6sA7T-BubY2NyE.js";import"./editableLayers-DFUBlMJy-RfZacUvm.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DudBwkox.js";import"./TablesMixin-BORwbVPt-BTmIdbrD.js";import"./Layer-DvVVmz9x-KWeeum0v.js";import"./TimeExtent-Cf2Pienb-B-fbcJgZ.js";import"./HeightModelInfo-C4voFc4k-ZWt6RJCe.js";import"./ReactiveMap-iPeM8evD-D_plRwrp.js";import"./Query-n1aoaaFC-BPSxItRE.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-B4i-ITaq.js";import"./projectionUtils-Dt6hj1Xh-CqPdsQLe.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-BaTNjyav.js";import"./normalizeUtilsCommon-ClagynAA-CL_yyNFN.js";import"./utils-DpLVEUvg-DfFfnFbm.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-DdlN6Bbf.js";import"./debugFlags-8tOwPnHK-BqltlLcW.js";import"./vec32-Cj8pVsU0-DklfJOsw.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-MC1jhLeH.js";import"./TileKey-_zikB14n-CUHpBhEx.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./imageUtils-D3tfFRL_-CBYTfd6H.js";import"./capabilities-BaKzUyhi-B84We26i.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-BBYkjxC8.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./Container-Dr2EdOEZ-CzLxKNxT.js";import"./EffectView-Bpu5U548-BXGJ3-MG.js";import"./parser-CWccHtwJ-8TX6iggd.js";import"./GraphShaderModule-Baq-N_YO-DmKQtn5M.js";import"./ProgramTemplate-C4wmhGXE-B6rC2P_i.js";import"./ShaderBuilder-CU5v4tk1-Bn7BRqDf.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import"./bitmapUtils-CAdCGIbP-ytaDNmnl.js";import"./WGLContainer-qQmF3DRB-_szZeR5u.js";import"./Utils-Co3xiu1z-BxeuuqeG.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./VertexArrayObject-CieliEx4-zmEENbvB.js";import"./memoryEstimations-DeWfxwaV-CXv6j7jy.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./StyleDefinition-BOKVAZI1-DGWlgUVE.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./featureConversionUtils-Bjjlcfdo-CwDtXgIk.js";import"./OptimizedFeature-mIz_HhJg-Doe9CXLP.js";import"./OptimizedGeometry-pzfNw1AT-ML0atVKH.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-DLIaYA64-4unvfMZY.js";import"./AGraphicContainer-DtNijdEa-Bdy9U5OK.js";import"./TechniqueInstance-CwLUZ8IR-BeelUBjn.js";import"./UpdateTracking2D-GEad80KZ-Bv69YlIw.js";import"./TileContainer-CAC1uSjc-CgfIAAsw.js";import"./FeatureCommandQueue-C2MKcQFq-DFKZoUw_.js";import"./CIMSymbolHelper-34UsTwam-DkYGvg0X.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-B0N_tcIh.js";import"./GeometryUtils-B8e3Iwyx-Dtp5Za2L.js";import"./rasterizingUtils-1wASRzSP-a77rXvQA.js";import"./floatRGBA-DRFmbkvz-B5sBFye2.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./utils-OrDMNKn4-ChKy2ZJJ.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-DWzXstPV.js";import"./OverrideHelper-DgyARgwI-JQJB6wdi.js";import"./colorUtils-Eg6lOlXm-CIpqqE7k.js";import"./callExpressionWithFeature-Bk8k1lJI-DP7jVp_Z.js";import"./quantizationUtils-D907S7Bm-CFnglEIz.js";import"./AttributeStore-Oa0mwyTc-C9C2Gq2y.js";import"./labelUtils-Oapo6DRu-C15mxCqt.js";import"./queryUtils-DZy8hWx3-B8GFciH6.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-C84Fhu_2.js";import"./normalizeUtilsSync-DslYq1HB-CHfDNOzQ.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./dehydratedFeatures-CE8L86IW-D1wsqccH.js";import"./SimpleGeometryCursor-DSF_YyIm-TAMgMsbK.js";import"./webglDeps-B1MbyxEI-DYQpCuuv.js";import"./NestedMap-DL9KstBd-DzPVXgde.js";import"./renderState-BM-MCKUz-CkGIEsl7.js";import"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";import"./glsl-Z5uYj8ka-BRgh2Cgo.js";import"./testSVGPremultipliedAlpha-silsadBl-CsGkc5qP.js";let _=class extends H{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new T}};d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"id",void 0),d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"rotation",void 0),d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"href",void 0),d([g({type:T,nonNullable:!0,json:{write:!0}})],_.prototype,"extent",void 0),_=d([$("esri.layers.support.KMLMapImage")],_);const m=class m{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(m._instance)return m._instanceRefCount++,m._instance;m._instanceRefCount=1,m._instance=this,this._ownsRctx=!0;const r=document.createElement("canvas").getContext("webgl2");r.getExtension("OES_texture_float"),this._rctx=new mt(r,{})}const o={applyProjection:!0,bilinear:!1,bicubic:!1},a=ht("raster/reproject","raster/reproject",new Map([["a_position",0]]),o);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new ct(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,a=!1){const r=st(t.extent,o),e=new j({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:n,y:l}=nt(e,o,t.extent);let p=(n+l)/2;const h=Math.round((r.xmax-r.xmin)/p),s=Math.round((r.ymax-r.ymin)/p);p=(r.width/h+r.height/s)/2;const D=new j({x:p,y:p,spatialReference:r.spatialReference}),x=pt({projectedExtent:r,srcBufferExtent:t.extent,pixelSize:D,hasWrapAround:!0,spacing:[16,16]}),f=_t(this._rctx,x),b=new N(h,s);b.wrapMode=L.CLAMP_TO_EDGE;const c=new gt(this._rctx,b);this._rctx.bindFramebuffer(c),this._rctx.setViewport(0,0,h,s),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:V=0,height:v=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",x.spacing),this._program.setUniform2fv("u_transformGridSize",x.size),this._program.setUniform2f("u_targetImageSize",h,s),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),a){const{width:u,height:I}=c,y=new ImageData(u??0,I??0);c.readPixels(0,0,u??0,I??0,dt.RGBA,ut.UNSIGNED_BYTE,y.data);const B=c.detachColorTexture();return c.dispose(),{texture:B,extent:r,imageData:y}}const S=c.detachColorTexture();return c.dispose(),{texture:S,extent:r}}reprojectBitmapData(t,o){const a=tt(t.bitmapData)?it(t.bitmapData):t.bitmapData,r=new N;r.wrapMode=L.CLAMP_TO_EDGE,r.width=t.bitmapData.width,r.height=t.bitmapData.height;const e=new wt(this._rctx,r,a),n=this.reprojectTexture({texture:e,extent:t.extent},o,!0);n.texture.dispose();const l=document.createElement("canvas"),p=n.imageData;return l.width=p.width,l.height=p.height,l.getContext("2d").putImageData(p,0,0),{bitmapData:l,extent:n.extent}}async loadAndReprojectBitmapData(t,o,a){const[r]=await Promise.all([z(t,{responseType:"image"}).then(h=>h.data),lt()]),e=document.createElement("canvas");e.width=r.width,e.height=r.height;const n=e.getContext("2d");n.drawImage(r,0,0);const l=n.getImageData(0,0,e.width,e.height);if(o.spatialReference.equals(a))return{bitmapData:l,extent:o};const p=this.reprojectBitmapData({bitmapData:l,extent:o},a);return{bitmapData:p.bitmapData,extent:p.extent}}destroy(){this._ownsRctx?(m._instanceRefCount--,m._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),m._instance=null)):(this._quad.dispose(),this._program.dispose())}};m._instanceRefCount=0;let U=m;class F{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let w=class extends ot(at){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new rt,this._kmlVisualData=new F,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new G}async hitTest(i,t){var a,r,e;const o=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(i),(r=this._polylinesView)==null?void 0:r.hitTest(i),(e=this._polygonsView)==null?void 0:e.hitTest(i)].flat().filter(Boolean).map(n=>(n.layer=o,n.sourceLayer=o,{type:"graphic",graphic:n,layer:o,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new k({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new k({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new k({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),W(()=>this.layer.visibleSublayers,i=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const t of i){const o=this._kmlVisualData.allSublayers.get(t.id);o&&(o.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new U}detach(){this._fetchController=K(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){var t,o;((t=this.view.spatialReference)!=null&&t.isWGS84||(o=this.view.spatialReference)!=null&&o.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,i.extent,this.view.spatialReference).then(a=>{const r=new et(a.bitmapData);r.x=a.extent.xmin,r.y=a.extent.ymax,r.resolution=a.extent.width/a.bitmapData.width,r.rotation=i.rotation,this._mapImageContainer.addChild(r),this._bitmapIndex.set(i,r)})}async _getViewDependentUrl(i,t){const{viewFormat:o,viewBoundScale:a,httpQuery:r}=i;if(o!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let e;if(await Q(),a!=null&&a!==1){const u=new T(t.extent);u.expand(a),e=u}else e=t.extent;e=q(e,A.WGS84);const n=q(e,A.WebMercator),l=e.xmin,p=e.xmax,h=e.ymin,s=e.ymax,D=t.size[0]*t.pixelRatio,x=t.size[1]*t.pixelRatio,f=Math.max(n.width,n.height),b={"[bboxWest]":l.toString(),"[bboxEast]":p.toString(),"[bboxSouth]":h.toString(),"[bboxNorth]":s.toString(),"[lookatLon]":e.center.x.toString(),"[lookatLat]":e.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":e.center.x.toString(),"[lookatTerrainLat]":e.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":e.center.x.toString(),"[cameraLat]":e.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":D.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":O,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},c=u=>{for(const I in u){let y;for(y in b)u[I]=u[I].replace(y,b[y])}},V=E(o);c(V);let v={};r!=null&&(v=E(r),c(v));const S=Z(i.href);return S.query={...S.query,...V,...v},`${S.path}?${Y(V)}`}return i.href}async _fetchService(i){const t=new F;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,o){return this._fetchParsedKML(i,o).then(async a=>{var r;for(const e of a.sublayers){t.allSublayers.set(e.id,e);const n=e.points?await M(e.points):[],l=e.polylines?await M(e.polylines):[],p=e.polygons?await M(e.polygons):[],h=((r=e.mapImages)==null?void 0:r.map(s=>_.fromJSON(s)))??[];if(t.allPoints.push(...n.map(s=>({item:s,sublayerId:e.id}))),t.allPolylines.push(...l.map(s=>({item:s,sublayerId:e.id}))),t.allPolygons.push(...p.map(s=>({item:s,sublayerId:e.id}))),t.allMapImages.push(...h.map(s=>({item:s,sublayerId:e.id}))),e.networkLink){const s=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(s,t,o)}}})}_fetchParsedKML(i,t){return J(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(o=>X(o.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};d([g()],w.prototype,"_pointsView",void 0),d([g()],w.prototype,"_polylinesView",void 0),d([g()],w.prototype,"_polygonsView",void 0),d([g()],w.prototype,"updating",void 0),w=d([$("esri.views.2d.layers.KMLLayerView2D")],w);const Mr=w;export{Mr as default};
