import{v as s,S as l,d_ as h,n as m,a0 as n,a1 as o,ag as p,a5 as d}from"./index-12gn5LMs.js";import{G as V}from"./LayerView2D-BaefGYf9-c0AcWBCD.js";import{t as w}from"./LayerView-DdANuT-Y-DT19WIFF.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-Dr2EdOEZ-C402762l.js";import"./MapView-DVZSZHRJ-DxLIQx32.js";import"./Cyclical-DgD7_U1C-B-0tqIEW.js";import"./CollectionFlattener-DyEG1Q6J-CN2VFcnB.js";import"./workers-CeRXsnNJ-DmAccjPJ.js";import"./Queue-DV3gpSdl-CInt-_Hb.js";import"./intl-BAA1onnp-Eg1Cq3Wo.js";import"./projectionUtils-B-CplN3q-BJPnkKI4.js";import"./TileInfo-U28GysF5-jJF_9vCW.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-CDYobKXl.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-BlV8vJSx.js";import"./asyncUtils-BPUlNCrX-D7S7qRhi.js";import"./utils-Dd8gTonD-CHAErNuR.js";import"./Version-CnwD6MZa-B4oOiwWw.js";import"./Map-7V1pm_Jo-CzfT6eWY.js";import"./Basemap-C_NhFN5u-DTxCvab-.js";import"./loadAll-DQWsVoX1-h33-SEHI.js";import"./PortalItem-BP-IQXnZ-BvE7Tu8a.js";import"./writeUtils-DAOvycBP-BKa1EcwY.js";import"./persistable-DgPk2hdg-D4WtmhBQ.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-DJoJhB9h.js";import"./PolygonCollection-Btw6sA7T-DZWezCl4.js";import"./editableLayers-DFUBlMJy-XIU5mohc.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DxHlGyKX.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-BORwbVPt-BXSy6wOJ.js";import"./Layer-DvVVmz9x-n7WDhQeo.js";import"./TimeExtent-Cf2Pienb-CjK3i2gr.js";import"./GraphicsCollection-uWAVmks7-nPiwRcG0.js";import"./HeightModelInfo-C4voFc4k-DOxXcHQ7.js";import"./timeZoneUtils-d5p0Jda1-Dw4XhjBV.js";import"./ReactiveMap-iPeM8evD-BJBhtKfF.js";import"./Query-n1aoaaFC-DjTmKLYr.js";import"./Field-BIQ-quF4-DssnJ4fn.js";import"./fieldType-PhcL4ff8-TJALxuGf.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-HQPhKLEu.js";import"./projectionUtils-Dt6hj1Xh-Bw8WG3ul.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-DGucVTnS.js";import"./normalizeUtilsCommon-ClagynAA-BP5poeh3.js";import"./utils-BO8hgPs3-CSpNGQF8.js";import"./utils-DpLVEUvg-D1Ynm5FY.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-BlwA9E6Y.js";import"./debugFlags-8tOwPnHK-Cc9082SW.js";import"./vec32-Cj8pVsU0-DilQFd61.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-DxG4glug.js";import"./TileKey-_zikB14n-C6LF5xbI.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./Texture-D5XWO2GQ-DgDJ6koW.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./imageUtils-D3tfFRL_-BNI-HkrL.js";import"./capabilities-BaKzUyhi-B84We26i.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-DkotNMxp.js";import"./EffectView-Bpu5U548-DQvWCKzL.js";import"./parser-CWccHtwJ-DtdJCE-N.js";import"./layerViewUtils-DLIaYA64-C0efQoNT.js";let t=class extends w{constructor(i){super(i),this.type="group",this.layerViews=new n}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),o(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},p),o(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},p)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){var i,e;return((e=(i=this.view)==null?void 0:i.layerViewManager)==null?void 0:e.isCreatingLayerViewsForLayer(this.layer))??!1}set layerViews(i){this._set("layerViews",d(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{var r;return!!((r=this._findLayerViewForLayer(e))!=null&&r.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(r=>o(()=>r.visible,a=>this._applyVisibility(()=>{a!==this.visible&&(r.visible=this.visible)},()=>this._applyExclusiveVisibility(a?r:null)),p)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var r,a;this._hasLayerViewVisibleOverrides()&&(((r=this.layer)==null?void 0:r.visibilityMode)==="inherited"?i():((a=this.layer)==null?void 0:a.visibilityMode)==="exclusive"&&e())}};s([l({readOnly:!0})],t.prototype,"creatingLayerViews",null),s([l({cast:h})],t.prototype,"layerViews",null),s([l({readOnly:!0})],t.prototype,"updatingProgress",null),s([l()],t.prototype,"view",void 0),t=s([m("esri.views.layers.GroupLayerView")],t);let y=class extends V(t){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};y=s([m("esri.views.2d.layers.GroupLayerView2D")],y);const ki=y;export{ki as default};
