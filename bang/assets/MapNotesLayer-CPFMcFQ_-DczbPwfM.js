import{v as i,S as p,n as C,eK as P,eJ as $,eu as L,lV as F,ar as h,a0 as w,q as N,i$ as M,lY as J,md as I,e5 as R,ba as q,h as Y,eb as k,ap as z,aR as T,w as c,F as A,o as K,le as D}from"./index-12gn5LMs.js";import{w as V}from"./MultiOriginJSONSupport-BqiFJbbt-CpBBWE1E.js";import{X as S,L as W,k as Z,K as X,O as H}from"./projectionUtils-B-CplN3q-BJPnkKI4.js";import{B as Q}from"./normalizeUtils-u00NGW3M-DGucVTnS.js";import U from"./FeatureLayer-D09djTpa-DCbwFTqZ.js";import ee from"./GraphicsLayer-BiEC2-gS-DshyfRxA.js";import{e as te}from"./Layer-DvVVmz9x-n7WDhQeo.js";import{i as re}from"./objectIdUtils-EszJVKSV-D22R5Sme.js";import{u as oe}from"./BlendLayer-DjW_5k0v-BzN8IuYN.js";import{u as ie}from"./OperationalLayer-CbXUnTH0-omm55nj8.js";import{x as le}from"./PortalLayer-B34ZUA2x-CukjOJwt.js";import{S as ae}from"./ScaleRangeLayer-x42fwED3-CMUV_hOS.js";import{m as E}from"./Field-BIQ-quF4-DssnJ4fn.js";import"./normalizeUtilsCommon-ClagynAA-BP5poeh3.js";import"./utils-BO8hgPs3-CSpNGQF8.js";import"./utils-DpLVEUvg-D1Ynm5FY.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./FeatureLayerBase-B8QtBTYG-BlTJrGFG.js";import"./HeightModelInfo-C4voFc4k-DOxXcHQ7.js";import"./timeZoneUtils-d5p0Jda1-Dw4XhjBV.js";import"./labelingInfo-DuLk-IW_-Ctx4ttUr.js";import"./asyncUtils-BPUlNCrX-D7S7qRhi.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Query-n1aoaaFC-DjTmKLYr.js";import"./TimeExtent-Cf2Pienb-CjK3i2gr.js";import"./fieldType-PhcL4ff8-TJALxuGf.js";import"./SimpleRenderer-C1YRhRzu-9aC4roTF.js";import"./commonProperties-CJLeiNuA-BXgs3Cbs.js";import"./colorRamps-trM-CPFS-D7qaI5Xg.js";import"./ColorStop-CL7v3R-A-B2Zy-Gdi.js";import"./visualVariableUtils-BTS148WR-BY2Amw9B.js";import"./lengthUtils-C61nRlXw-CxDWeNsK.js";import"./UniqueValueRenderer-CLXHFtg9-D3oRWhvv.js";import"./diffUtils-BxG8DCnW-n5FHLz8q.js";import"./RendererLegendOptions-Bil_IDab-DgkN2EHX.js";import"./styleUtils-DBPDLVBX-CN8vakaS.js";import"./RelationshipQuery-CaEbQySU-CHj5Xi0F.js";import"./NormalizationBinParametersMixin-70JA0FRq-DB7ghHll.js";import"./labelUtils-Oapo6DRu-DwzD0Ame.js";import"./LayerFloorInfo-CkeH-P4_-eZuiRlDN.js";import"./Relationship-B6fQjk3--YQkR5NVB.js";import"./serviceCapabilitiesUtils-BerH-9mt-D_MHgh_a.js";import"./infoFor3D-BeWnZejW-CnXQECJx.js";import"./portalItemUtils-BfWDJg-S-Cye-E-nz.js";import"./workers-CeRXsnNJ-DmAccjPJ.js";import"./Queue-DV3gpSdl-CInt-_Hb.js";import"./intl-BAA1onnp-Eg1Cq3Wo.js";import"./editsZScale-BWHgeDdL-Chj0Ij1W.js";import"./queryZScale-CwrUzBjP-BsHtNKzQ.js";import"./FeatureSet-BVGGhhH9-M6Osa-fb.js";import"./APIKeyMixin-BNzYY3QS-BCe0ID-h.js";import"./ArcGISService-B6M5rzsr-CxcuWT6G.js";import"./CustomParametersMixin-CSMgHDaw-C7mKOQx-.js";import"./DisplayFilteredLayer-DTxK0R7U-DNaiJcni.js";import"./scaleUtils-Br-smv3A-Cl6rnZk0.js";import"./displayFilterUtils-DvWUbJDp-zEV3n-nO.js";import"./EditBusLayer-CAIKbP5V-Cci-UIvw.js";import"./FeatureEffectLayer-BVJTjFhg-B86Lowor.js";import"./FeatureEffect-D3G_gJ5F-3z-GkTIx.js";import"./jsonUtils-BwLwuQj7-D1wBdrne.js";import"./parser-CWccHtwJ-DtdJCE-N.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DxHlGyKX.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./FeatureFilter-DXpQKGs4-zaBc6IBJ.js";import"./FeatureReductionLayer-vR-evpIv-Ced3l0Qw.js";import"./FeatureReductionSelection-DzXAxMK9-CBTP-wAJ.js";import"./jsonUtils-CzRaZnmS-rg-i7gFG.js";import"./typeUtils-CB2EGBWO-DFpFHRzl.js";import"./ClassBreaksRenderer-Bq2XGpfI-Dsm1tRw0.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./DictionaryScriptEvaluator-DW5hOK9A-BUCamXlX.js";import"./Version-CnwD6MZa-B4oOiwWw.js";import"./FieldsIndex-Bt0Y8aWr-bnm7YOAs.js";import"./UnknownTimeZone-DxjyzFvs-BVA_pH2M.js";import"./ArcadeExpression-XjY3x7KV-CjLfOB5S.js";import"./TimeOnly-CGkId3bj-B_DrnhBv.js";import"./enum-g1DWyQyu-DbyUc3c9.js";import"./utils-BfXZnjCE-DjcUoNQC.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-BFWs8pjd.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-nllCrp3C.js";import"./OrderByInfo-SNGyPlhJ-DltPXcpt.js";import"./RefreshableLayer-Qpvyi8qY-CtD7Dg9w.js";import"./TemporalLayer-lQRje9wB-BWKpd0ts.js";import"./TimeInfo-COHxjenm-CfaO_JCb.js";import"./TrackableLayer-D0OccxDX-B111qfJZ.js";import"./FeatureTemplate-CW5LOQ_p-FMGQiRAH.js";import"./FeatureType-DdIqcZ2U-BO8Ukpxx.js";import"./fieldProperties-Cgp0UdcB-DBw2jum1.js";import"./TitleCreator-DZ9r9lVc-CiB6cD3d.js";import"./versionUtils-BwTR8Ufq-DPIYueya.js";import"./styleUtils-BnJpZ0Gl-DvrZsJEC.js";import"./popupUtils-B99PyAFi-DyhWomNb.js";import"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./ElevationInfo-DE5to86a-zEEw4gu_.js";import"./PortalItem-BP-IQXnZ-BvE7Tu8a.js";import"./GraphicsCollection-uWAVmks7-nPiwRcG0.js";function b(t){return t.featureCollectionType==="markup"||t.layers.some(e=>e.layerDefinition.visibilityField!=null||!j(e))}function j({layerDefinition:t,featureSet:e}){const r=t.geometryType??e.geometryType;return v.find(o=>{var l,n,s;return r===o.geometryTypeJSON&&((s=(n=(l=t.drawingInfo)==null?void 0:l.renderer)==null?void 0:n.symbol)==null?void 0:s.type)===o.identifyingSymbol.type})}function _(){return new K({xmin:-180,ymin:-90,xmax:180,ymax:90})}const x=new E({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ne=new E({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let m=class extends ee{constructor(t){super(t),this.visibilityMode="inherited"}initialize(){for(const t of this.graphics)t.sourceLayer=this.layer;this.graphics.on("after-add",t=>{t.item.sourceLayer=this.layer}),this.graphics.on("after-remove",t=>{t.item.sourceLayer=null})}get fullExtent(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference,e=this.fullBounds;return t?e==null?S(_(),t).geometry:R(e,t):null}get fullBounds(){var r;const t=(r=this.layer)==null?void 0:r.spatialReference;if(!t)return null;const e=M();return this.graphics.forEach(o=>{const l=o.geometry!=null?S(o.geometry,t).geometry:null;l!=null&&J(e,l.type==="point"?l:l.extent,e)}),I(e,D)?null:e}get sublayers(){return this.graphics}};i([p({readOnly:!0})],m.prototype,"fullExtent",null),i([p({readOnly:!0})],m.prototype,"fullBounds",null),i([p({readOnly:!0})],m.prototype,"sublayers",null),i([p()],m.prototype,"layer",void 0),i([p()],m.prototype,"layerId",void 0),i([p({readOnly:!0})],m.prototype,"visibilityMode",void 0),m=i([C("esri.layers.MapNotesLayer.MapNotesSublayer")],m);const v=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new P().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new $().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new L().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new L().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new F().toJSON()}];let a=class extends oe(ae(ie(le(V(te))))){constructor(t){super(t),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=h.WGS84,this.sublayers=new w(v.map(e=>new m({id:e.id,layerId:e.layerId,title:e.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(t,e,r){return{operations:{supportsMapNotesEditing:!b(e)&&(r==null?void 0:r.origin)!=="portal-item"}}}readFeatureCollections(t,e,r){if(!b(e))return null;const o=e.layers.map(l=>{const n=new U;return n.read(l,r),n});return new w({items:o})}readLegacyfeatureCollectionJSON(t,e){return b(e)?N(e.featureCollection):null}get fullExtent(){var r;const t=this.spatialReference,e=M();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?J(e,o,e):e,e):(r=this.featureCollectionJSON)!=null&&r.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const l=S(o.layerDefinition.extent,t).geometry;l!=null&&J(e,l,e)}),I(e,D)?S(_(),t).geometry:R(e,t)}readMinScale(t,e){for(const r of e.layers)if(r.layerDefinition.minScale!=null)return r.layerDefinition.minScale;return 0}readMaxScale(t,e){for(const r of e.layers)if(r.layerDefinition.maxScale!=null)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(t,e){return e.layers.length?h.fromJSON(e.layers[0].layerDefinition.spatialReference):h.WGS84}readSublayers(t,e,r){if(b(e))return null;const o=[];let l=e.layers.reduce((n,s)=>Math.max(n,s.layerDefinition.id??-1),-1)+1;for(const n of e.layers){const{layerDefinition:s,featureSet:y}=n,u=s.id??l++,d=j(n);if(d!=null){const f=new m({id:d.id,title:s.name,layerId:u,layer:this,graphics:y.features.map(({geometry:g,symbol:O,attributes:B,popupInfo:G})=>q.fromJSON({attributes:B,geometry:g,symbol:O,popupTemplate:G}))});o.push(f)}}return new w(o)}writeSublayers(t,e,r,o){var d;const{minScale:l,maxScale:n}=this;if(t==null)return;const s=t.some(f=>f.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(s&&((d=o==null?void 0:o.messages)==null?void 0:d.push(new Y("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))));const y=[];let u=this.spatialReference.toJSON();e:for(const f of t)for(const g of f.graphics)if(g.geometry!=null){u=g.geometry.spatialReference.toJSON();break e}for(const f of v){const g=t.find(O=>f.id===O.id);this._writeMapNoteSublayer(y,g,f,l,n,u,o)}k("featureCollection.layers",y,e)}get textLayer(){return this._findSublayer("textLayer")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}read(t,e){"featureCollection"in t&&(t=N(t),Object.assign(t,t.featureCollection)),super.read(t,e)}async beforeSave(){if(this.sublayers==null)return;let t=null;const e=[];for(const o of this.sublayers)for(const l of o.graphics)if(l.geometry!=null){const n=l.geometry;t?z(n.spatialReference,t)||(W(n.spatialReference,t)||Z()||await X(),l.geometry=H(n,t)):t=n.spatialReference,e.push(l)}const r=await Q(e.map(o=>o.geometry));e.forEach((o,l)=>o.geometry=r[l])}_findSublayer(t){var e;return this.sublayers==null?null:((e=this.sublayers)==null?void 0:e.find(r=>r.id===t))??null}_writeMapNoteSublayer(t,e,r,o,l,n,s){const y=[];if(e!=null){for(const u of e.graphics)this._writeMapNote(y,u,r.geometryType,s);this._normalizeObjectIds(y,x),t.push({layerDefinition:{name:e.title,drawingInfo:{renderer:{type:"simple",symbol:N(r.identifyingSymbol)}},id:e.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[x.toJSON(),ne.toJSON()],spatialReference:n},featureSet:{features:y,geometryType:r.geometryTypeJSON}})}}_writeMapNote(t,e,r,o){var u,d;if(e==null)return;const{geometry:l,symbol:n,popupTemplate:s}=e;if(l==null)return;if(l.type!==r)return void((u=o==null?void 0:o.messages)==null?void 0:u.push(new T("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:e})));if(n==null)return void((d=o==null?void 0:o.messages)==null?void 0:d.push(new T("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:e})));const y={attributes:{...e.attributes},geometry:l.toJSON(),symbol:n.toJSON()};s!=null&&(y.popupInfo=s.toJSON()),t.push(y)}_normalizeObjectIds(t,e){const r=e.name;let o=re(r,t)+1;const l=new Set;for(const n of t){n.attributes||(n.attributes={});const{attributes:s}=n;(s[r]==null||l.has(s[r]))&&(s[r]=o++),l.add(s[r])}}};i([p({readOnly:!0})],a.prototype,"capabilities",void 0),i([c(["portal-item","web-map"],"capabilities",["layers"])],a.prototype,"readCapabilities",null),i([p({readOnly:!0})],a.prototype,"featureCollections",void 0),i([c(["web-map","portal-item"],"featureCollections",["layers"])],a.prototype,"readFeatureCollections",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],a.prototype,"featureCollectionJSON",void 0),i([c(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],a.prototype,"readLegacyfeatureCollectionJSON",null),i([p({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],a.prototype,"featureCollectionType",void 0),i([p({readOnly:!0})],a.prototype,"fullExtent",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],a.prototype,"legendEnabled",void 0),i([p({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"minScale",void 0),i([c(["web-map","portal-item"],"minScale",["layers"])],a.prototype,"readMinScale",null),i([p({type:Number,nonNullable:!0,json:{write:!1}})],a.prototype,"maxScale",void 0),i([c(["web-map","portal-item"],"maxScale",["layers"])],a.prototype,"readMaxScale",null),i([p({readOnly:!0})],a.prototype,"multipointLayer",null),i([p({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],a.prototype,"operationalLayerType",void 0),i([p({readOnly:!0})],a.prototype,"pointLayer",null),i([p({readOnly:!0})],a.prototype,"polygonLayer",null),i([p({readOnly:!0})],a.prototype,"polylineLayer",null),i([p({type:h})],a.prototype,"spatialReference",void 0),i([c(["web-map","portal-item"],"spatialReference",["layers"])],a.prototype,"readSpatialReference",null),i([p({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],a.prototype,"sublayers",void 0),i([c("web-map","sublayers",["layers"])],a.prototype,"readSublayers",null),i([A("web-map","sublayers")],a.prototype,"writeSublayers",null),i([p({readOnly:!0})],a.prototype,"textLayer",null),i([p()],a.prototype,"title",void 0),i([p({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),a=i([C("esri.layers.MapNotesLayer")],a);const or=a;export{or as default};
