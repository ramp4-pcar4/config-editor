const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-CVKk0WAC-DhjFFP6h.js","./index-uAe2c5m-.js","./index-CliIjrnX.css","./draw-store-C1_quxsr-ujkLScHf.js","./GraphicsLayer-GkJJfSu5-D5AvdOvE.js","./GraphicsCollection-rAFZo1AJ-BL-B-_dN.js","./Layer-B8q-l4yV-LM-Kugl0.js","./TimeExtent-gZaEUVeW-CVNwGJ9K.js","./ScaleRangeLayer-DIxukUBC-Xz-iG0lC.js","./layerContainerType-ChWdCT09-G5sdAsSy.js","./jsonUtils-DzmXEA9_-B4ABav3C.js","./parser-hXQyB-Qx-bP7Mb1uC.js","./mat4f32-CiZjBg9k-CUm34GoR.js","./mat4-BFStKTjU-C7vnCOg9.js","./common-CYWrYyJl-E8-sukrT.js","./ElevationInfo-DkWlof50-DknL-Kif.js","./lengthUtils-wU9RRIqK-CVQkyj5V.js","./intl-DLmy-Li5-C9qQwwT1.js","./SketchViewModel-T2dNp9Tt-CDvlAoYq.js","./UpdatingHandles-DBzjq66S-DyQpTgpN.js","./projection-m8vi7Cxv-B0qO7Oqc.js","./globalCss-CFN4F315-CLNsVej6.js","./Queue-B8H6jIv7-B3gKU8Xk.js","./signal-DxzURL18-DzA1B3WE.js","./Version-BTMwSXf1-BWg8lhFJ.js","./quantityUtils-RaoZoCNH-xCihS5WJ.js","./vec2-BnynUbeJ-CKtGJQAy.js","./vec2f64-CEUyUoff-BBc0aQ6D.js","./vec32-BuqRmYBM-BdfZIctT.js","./projectVectorToVector-D0K_S4MR-Bom8-o-W.js","./projectPointToVector-CG1hALQu-pHYMsD9o.js","./geodesicUtils-DV-lFWtb-BWjkdqHV.js","./Query-CxQYWcUQ-Bt-5NUmt.js","./Field-Cj6Pz3TI-DKnhyIXm.js","./fieldType-VTpxE-EM-B8lwOeyh.js","./vec42-D8CJyqHG-DnfLTeQH.js","./vec4f64-CjUMzAyX-DPYbdAom.js","./plane-B_adY3_o-D-rv9d7_.js","./mat3f64-Dh9_zhFu-BIT-k8Dm.js","./mat4f64-BaJwL7tQ-k0uMm8LY.js","./quatf64-C16JxGFv-BKWK1F8U.js","./sphere-Cj20syUS-Di3MiqPq.js","./mat3-DOnW3DjW-C3hbW9XY.js","./jsxFactory-C5LxVioS-DEYBju5_.js","./uuid-Dj9mdEVg-BaKSCiyT.js","./layerViewUtils-Bk5QNiAa-fyGrOGEz.js","./widget-BgluoE6k-sPifB7_r.js","./diffUtils-BSe9IE26-COT8sfri.js","./ViewingMode-CyR_b1T8-_s7_Gbsk.js","./meshVertexSpaceUtils-BwEbYR8F-Bw-ItnnJ.js","./MeshLocalVertexSpace-DFCiKNRA-BOCwjJFk.js","./hydratedFeatures-BDT5zTGB-CL72p8nq.js","./Scheduler-Br-2v2ys-CBaGdNyv.js","./geometryEngineBase-DueYg7ux-B6e4gAE3.js","./_commonjsHelpers-BITg13Vk-KnjfkSck.js","./hydrated-Bae3cp-4-7-WdTTIr.js","./mat2d-BQA-1WB--Pnyy0dhf.js","./quat-D8L_R4I0-BH51XIdz.js","./drapedUtils-7RfmdK5D-Dz63JTRV.js","./utils-C0LvbFCo-RMQaTNpt.js","./substitute-TfjvVaWd-CnqoCIYT.js"])))=>i.map(i=>d[i]);
import{v as c,I as h,a1 as Fs,c9 as Z,ca as H,J as Ct,U as $t,t as F,z as J,dE as Hs,bI as qs,c as Wt,E as ne,s as St,Y as We,jy as Lt,_ as Xs,bP as ts}from"./index-uAe2c5m-.js";import{s as Ks}from"./projection-m8vi7Cxv-B0qO7Oqc.js";import{u as Ns,f as Rs,D as A,y as Ys,a as Zs,h as Qs,U as tn,b as en,e as sn,p as nn,T as rn,J as Ss,c as ue,K as on,H as Je,n as an,X as st,t as un,g as ln,i as cn,Z as pn,R as mn}from"./dataUtils-CkgWlGaX-BSKky2ip.js";import{D as It,Z as hn,e as fn,f as Is,g as dn,_ as gn,o as yn,I as xn,t as wn,a as pe,h as Cs,x as vn,T as Zt,j as bn,r as re,k as ks,l as _s,m as An,A as Tn,$ as Pn,R as le,n as Fn,p as Nn,s as Rn,u as Bs}from"./RasterSymbolizer-YAjvxuoS-D59Ckfmy.js";import{h as es}from"./colorUtils-DxUhbS7D-DDdX49Nc.js";import{p as kt,A as $,U as ce,v as Sn,V as js}from"./pixelRangeUtils-BteWOAF5-CWUmGYA-.js";import{$ as In,I as Cn,D as kn,a as _n,V as Bn}from"./rasterProjectionHelper-BV-HUScL-RcTS7IA-.js";import{v as Ms,g as jn}from"./colorRamps-KMmVdCPJ-CqzRsTQm.js";import{y as nt}from"./Field-Cj6Pz3TI-DKnhyIXm.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./fieldType-VTpxE-EM-B8lwOeyh.js";function Mn(t,e){if(t.spatialReference.equals(e))return t;const s=ts(t.spatialReference),n=ts(e);if(s===n)return t;const r=s/n;return{x:t.x*r,y:t.y*r}}async function na(t,e,s){if(s.type==="extent")return Gn(t,e,s);const{width:n,height:r}=t,o=new Uint8Array(n*r),{contains:a,intersects:i}=await Xs(async()=>{const{contains:u,intersects:l}=await import("./index-CVKk0WAC-DhjFFP6h.js");return{contains:u,intersects:l}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]),import.meta.url).then(u=>u.V);return i(e,s)?s.type==="polyline"?zn(t,e,s):a(s,e)?t:On(t,e,s):new A({pixelType:t.pixelType,width:n,height:r,mask:o,maskIsAlpha:!1,pixels:[...t.pixels]})}function On(t,e,s){if(!t)return t;const{width:n,height:r}=t,o=e.width/n,a=e.height/r,{xmin:i,ymax:u}=e;let l;if(s.type==="extent"){const d=(s.xmin-i)/o,w=(s.xmax-i)/o,v=(u-s.ymax)/a,b=(u-s.ymin)/a;l=[[[d,v],[d,b],[w,b],[w,v],[d,v]]]}else l=s.rings.map(d=>d.map(([w,v])=>[(w-i)/o,(u-v)/a]));const m=document.createElement("canvas");m.width=n,m.height=r;const p=m.getContext("2d");p.fillStyle="#f00",p.beginPath(),l.forEach(d=>{p.moveTo(d[0][0],d[0][1]);for(let w=0;w<d.length;w++)p.lineTo(d[w][0],d[w][1]);p.closePath()}),p.fill();const f=p.getImageData(0,0,n,r).data,x=t.mask,g=n*r,y=new Uint8Array(g);for(let d=0;d<g;d++)x&&!x[d]||(y[d]=f[4*d+3]>127?255:0);return new A({pixelType:t.pixelType,width:n,height:r,mask:y,maskIsAlpha:!1,pixels:[...t.pixels]})}function Gn(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),a=e.width/n,i=e.height/r;if(s.width/a<.5||s.height/i<.5)return new A({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const{xmin:u,xmax:l,ymin:m,ymax:p}=e,{xmin:f,xmax:x,ymin:g,ymax:y}=s,d=Math.max(u,f),w=Math.min(l,x),v=Math.max(m,g),b=Math.min(p,y),T=.5*a,N=.5*i;if(w-d<T||b-v<N||w<u+T||d>l-T||v>p-N||b<m+N)return new A({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const P=Math.max(0,(d-u)/a),R=Math.min(n,Math.max(0,(w-u)/a)),k=Math.max(0,(p-b)/i),I=Math.min(r,Math.max(0,(p-v)/i)),C=Math.round(P),B=Math.round(R)-1,z=Math.round(k),Q=Math.round(I)-1;if(C===B&&P%1>.5&&R%1<.5||z===Q&&k%1>.5&&I%1<.5)return new A({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});if(C===0&&z===0&&B===n&&Q===r)return t;const Ze=t.mask;for(let ie=z;ie<=Q;ie++)for(let ae=C;ae<=B;ae++){const Qe=ie*n+ae;o[Qe]=Ze?Ze[Qe]:255}return new A({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}function zn(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),a=e.width/n,i=e.height/r,{xmin:u,ymax:l}=e,{paths:m}=s,p=t.mask;for(let f=0;f<m.length;f++){const x=m[f];for(let g=0;g<x.length-1;g++){const[y,d]=x[g],[w,v]=x[g+1];let b=Math.floor((l-d)/i),T=Math.floor((l-v)/i);if(T<b){const P=b;b=T,T=P}b=Math.max(0,b),T=Math.min(r-1,T);const N=(w-y)/(v-d);for(let P=b;P<=T;P++){const R=P===b?Math.max(d,v):(r+1-P)*i,k=P===T?Math.min(d,v):R-i;let I=Math.floor(v===d?(y-u)/a:(N*(R-d)+y-u)/a),C=Math.floor(v===d?(w-u)/a:(N*(k-d)+y-u)/a);if(C<I){const z=I;I=C,C=z}const B=P*n;I=Math.max(0,I),C=Math.min(n-1,C);for(let z=B+I;z<=B+C;z++)o[z]=p?p[z]:255}}}return new A({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}function Dn(t,e){const{extent:s}=En(t,e,new ne({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:n}=t.extent;if(s.xmax=Math.min(s.xmax,n.xmax),s.ymax=Math.min(s.ymax,n.ymax),s.xmin<s.xmax&&s.ymin<s.ymax){const{x:r,y:o}=t.pixelSize,a=Math.round(s.width/r),i=Math.round(s.height/o);t.extent=s,t.width=a,t.height=i}}function En(t,e,s,n=!0){const{spatialReference:r}=t,{x:o,y:a}=Mn(s,r);let i,u,l;const m=e.type==="extent"?e:e.extent;let{xmin:p,xmax:f,ymax:x,ymin:g}=m;const{xmin:y,ymax:d}=t.extent;return n?(p=y+(p>y?o*Math.round((p-y)/o):0),x=d-(x<d?a*Math.round((d-x)/a):0),f=y+(f>y?o*Math.round((f-y)/o):0),g=d-(g<d?a*Math.round((d-g)/a):0),i=new St({xmin:p,ymax:x,xmax:f,ymin:g,spatialReference:r}),u=Math.round(i.width/o),l=Math.round(i.height/a)):(u=Math.floor((f-p)/o+.8),l=Math.floor((x-g)/a+.8),p=y+(p>y?o*Math.floor((p-y)/o+.1):0),x=d-(x<d?a*Math.floor((d-x)/a+.1):0),f=p+u*o,g=x-l*a,i=new St({xmin:p,ymax:x,xmax:f,ymin:g,spatialReference:r})),{extent:i,width:u,height:l}}let Qt=class extends We{constructor(){super(...arguments),this.raster=void 0}};c([h({json:{write:!0}})],Qt.prototype,"raster",void 0),Qt=c([F("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Qt);const D=Qt;var me;let _t=me=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new me({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([h({json:{write:!0}})],_t.prototype,"operation",void 0),c([h({json:{write:!0}})],_t.prototype,"raster2",void 0),c([h({readOnly:!0})],_t.prototype,"rasters",null),_t=me=c([F("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],_t);const Un=_t,Vn=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let E=class extends We{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){var i;const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n!=null&&n.length;){e.unshift(...n);const u=[];for(let l=0;l<n.length;l++){const{parameters:m}=n[l],p=m.rasters||m.raster&&[m.raster];p!=null&&p.length&&u.push(...p)}n=u}for(let u=e.length-1;u>=0;u--)e[u].isNoopProcess&&e.splice(u,1);let r=!1;for(let u=0;u<e.length;u++){const l=e[u];l.id=e.length-u-1;const{rasters:m}=l.parameters;r=r||m!=null&&m.length>1}const o=e.some(({name:u})=>Vn.has(u.toLowerCase())),{rawSourceRasterInfos:a}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:((i=a==null?void 0:a[0])==null?void 0:i.bandCount)===1}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let o=0;o<n.length;o++){const a=n[o];if(a!=null&&this._isRasterFunctionValue(a)){const i=a.bind(t,e,this.id+o);if(!i.success)return this._bindingResult=i,i;r=r&&i.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(a=>a.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((a,i)=>a!==i);const o=t.filter(a=>a.functionName==="ExtractBand");return o.length&&o.forEach((a,i)=>{a.isInputBandIdsSwizzled=!0,a.swizzledBandSelection=[i,i,i]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let o=0;o<r;o++)e.push(o)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some((r,o)=>r!==o),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>n!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const r=n.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){var e;t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,(e=t.multidimensionalInfo)==null||e.variables.forEach(s=>{s.statistics=void 0,s.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(e.length===0)return s;const r=e.map(a=>a&&typeof a=="object"&&"bind"in a&&a.rasterInfo?a.rasterInfo:typeof a=="string"&&n.includes(a)?s[n.indexOf(a)]:typeof a!="number"?s[0]:void 0),o=r.find(a=>a)??s[0];return r.forEach((a,i)=>{a===void 0&&(r[i]=o)}),r}_getPrimaryRasterId(t){return t==null?void 0:t.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,s);else{const o=r,a=this._getPrimaryRasterId(o);if(a==null)continue;s.includes(a)||(this.mainPrimaryRasterId===a?(e.unshift(o),s.unshift(a)):(e.push(o),s.push(a)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const n=s[0];return n==null?null:n.clone()}if(typeof t=="string"){const n=e.primaryRasterIds.indexOf(t);return n===-1?null:s[n]}if(typeof t=="number"){const n=s[0];if(n==null)return null;const{width:r,height:o,pixelType:a}=n,i=new Float32Array(r*o);i.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(i);return new A({width:r,height:o,pixelType:a,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!(t!=null&&t.keyProperties))return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([h({json:{write:!0}})],E.prototype,"functionName",void 0),c([h({json:{write:!0}})],E.prototype,"functionArguments",void 0),c([h()],E.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}}),Fs(t=>t==null?void 0:t.toLowerCase())],E.prototype,"outputPixelType",void 0),c([h({json:{write:!0}})],E.prototype,"mainPrimaryRasterId",void 0),c([h()],E.prototype,"sourceRasters",void 0),c([h({type:[hn],json:{write:!0}})],E.prototype,"sourceRasterInfos",void 0),c([h({json:{write:!0}})],E.prototype,"rasterInfo",void 0),c([h({json:{write:!0}})],E.prototype,"readingBufferSize",void 0),c([h({json:{write:!0}})],E.prototype,"id",void 0),c([h()],E.prototype,"isNoopProcess",void 0),c([h()],E.prototype,"supportsGPU",null),c([h()],E.prototype,"rawInputBandIds",void 0),c([h()],E.prototype,"rawSourceRasterInfos",void 0),c([h()],E.prototype,"isInputBandIdsSwizzled",void 0),c([h()],E.prototype,"swizzledBandSelection",void 0),c([h()],E.prototype,"isBranch",void 0),c([h({readOnly:!0})],E.prototype,"flatWebGLFunctionChain",null),c([h()],E.prototype,"_bindingResult",void 0),E=c([F("esri.layers.support.rasterFunctions.BaseRasterFunction")],E);const G=E,_={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ln={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},W={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},K={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},$n={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Os={setNull:50,conditional:78},ss={...Ln,...W,...K,...$n,...Os},Gs=new Map([[K.acos,{domain:[0,Math.PI],isInteger:!1}],[K.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.cos,{domain:[-1,1],isInteger:!1}],[K.sin,{domain:[-1,1],isInteger:!1}],[W.booleanAnd,{domain:[0,1],isInteger:!0}],[W.booleanNot,{domain:[0,1],isInteger:!0}],[W.booleanOr,{domain:[0,1],isInteger:!0}],[W.booleanXOr,{domain:[0,1],isInteger:!0}],[W.equalTo,{domain:[0,1],isInteger:!0}],[W.notEqual,{domain:[0,1],isInteger:!0}],[W.greaterThan,{domain:[0,1],isInteger:!0}],[W.greaterThanEqual,{domain:[0,1],isInteger:!0}],[W.lessThan,{domain:[0,1],isInteger:!0}],[W.lessThanEqual,{domain:[0,1],isInteger:!0}],[W.isNull,{domain:[0,1],isInteger:!0}]]);function ns(t){return Gs.get(t)}const rs=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Wn(t,e=!1){const s=t.map(i=>i.mask),n=s.filter(i=>i!=null),r=t[0].pixels[0].length;if(n.length===0||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const o=n[0],a=new Uint8Array(o);if(n.length===1)return a;if(!e){for(let i=1;i<n.length;i++){const u=n[i];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let i=1;i<n.length;i++){const u=n[i];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function Jn(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]+r[i]);return a}function Hn(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand("f32",r);return o.set(n),o}function qn(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);for(let a=0;a<r;a++)e&&!e[a]||(o[a]=n[a]*n[a]);return o}function Xn(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]-r[i]);return a}function Kn(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]*r[i]);return a}function Yn(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);for(let a=0;a<r;a++)e&&!e[a]||(o[a]=Math.sign(n[a])*Math.floor(Math.abs(n[a])));return o}function zs(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]/r[i]);return a}function Zn(t,e,s){return zs(t,e,"f32")}function Qn(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=Math.floor(n[i]/r[i]));return a}function tr(t,e,s,n){const r=t[0],o=r.length,a=A.createEmptyBand(s,o);if(n===K.atanh){for(let u=0;u<o;u++)if(e[u]){const l=r[u];Math.abs(l)>=1?e[u]=0:a[u]=Math.atanh(l)}return a}const i=n===K.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(e[u]){const l=r[u];Math.abs(l)>1?e[u]=0:a[u]=i(l)}return a}function er(t,e,s,n){const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n(r[i]));return a}function sr(t,e,s,n){const[r,o]=t,a=r.length,i=A.createEmptyBand(s,a);for(let u=0;u<a;u++)e&&!e[u]||(i[u]=n(r[u],o[u]));return i}function nr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]&r[i]);return a}function rr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]<<r[i]);return a}function or(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);for(let a=0;a<r;a++)e&&!e[a]||(o[a]=~n[a]);return o}function ir(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]|r[i]);return a}function ar(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]>>r[i]);return a}function ur(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]^r[i]);return a}function lr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]&&r[i]?1:0);return a}function cr(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);for(let a=0;a<r;a++)e&&!e[a]||(o[a]=n[a]?0:1);return o}function pr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]||r[i]?1:0);return a}function mr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=(n[i]?1:0)^(r[i]?1:0));return a}function hr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]===r[i]?1:0);return a}function He(t,e,s,n){const[r]=t,o=r.length,a=A.createEmptyBand(s,o),i=n===Math.E;for(let u=0;u<o;u++)e&&!e[u]||(a[u]=i?Math.exp(r[u]):n**r[u]);return a}function fr(t,e,s){return He(t,e,s,10)}function dr(t,e,s){return He(t,e,s,2)}function gr(t,e,s){return He(t,e,s,Math.E)}function qe(t,e,s,n){const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(r[i]<=0?e[i]=0:a[i]=n(r[i]));return a}function yr(t,e,s){return qe(t,e,s,Math.log10)}function xr(t,e,s){return qe(t,e,s,Math.log2)}function wr(t,e,s){return qe(t,e,s,Math.log)}function vr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]>r[i]?1:0);return a}function br(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]>=r[i]?1:0);return a}function Ar(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]<r[i]?1:0);return a}function Tr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]<=r[i]?1:0);return a}function Pr(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);if(!e)return o;for(let a=0;a<r;a++)o[a]=e[a]?0:1;return o}function Fr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]%r[i]);return a}function Nr(t,e,s){const[n]=t,r=n.length,o=A.createEmptyBand(s,r);for(let a=0;a<r;a++)e&&!e[a]||(o[a]=-n[a]);return o}function Rr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]===r[i]?0:1);return a}function Sr(t,e,s){const[n,r]=t,o=n.length,a=A.createEmptyBand(s,o),i=new Uint8Array(o);for(let u=0;u<o;u++)e!=null&&!e[u]||n[u]!==0||(a[u]=r[u],i[u]=255);return{band:a,mask:i}}function os(t,e,s){const[n,r,o]=t,a=n.length,i=A.createEmptyBand(s,a);for(let u=0;u<a;u++)e&&!e[u]||(i[u]=n[u]?r[u]:o[u]);return i}function is(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i]){let u=r[i];for(let l=1;l<n;l++){const m=t[l][i];u<m&&(u=m)}a[i]=u}return a}function as(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i]){let u=r[i];for(let l=1;l<n;l++){const m=t[l][i];u>m&&(u=m)}a[i]=u}return a}function us(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i]){let u=r[i],l=u;for(let m=1;m<n;m++){const p=t[m][i];l<p?l=p:u>p&&(u=p)}a[i]=l-u}return a}function ls(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i]){let u=0;for(let l=0;l<n;l++)u+=t[l][i];a[i]=u/n}return a}function cs(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i])for(let u=0;u<n;u++){const l=t[u];a[i]+=l[i]}return a}function ps(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)if(!e||e[i]){const u=new Float32Array(n);let l=0;for(let p=0;p<n;p++){const f=t[p];l+=f[i],u[p]=f[i]}l/=n;let m=0;for(let p=0;p<n;p++)m+=(u[p]-l)**2;a[i]=Math.sqrt(m/n)}return a}function ms(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,a=o.length,i=A.createEmptyBand(s,a),u=new Float32Array(n),l=n%2==1;for(let m=0;m<a;m++)if(!e||e[m]){for(let p=0;p<n;p++)u[p]=t[p][m];u.sort(),i[m]=l?u[r]:(u[r]+u[r-1])/2}return i}function Ds(t,e,s){const[n,r]=t;if(r==null)return n;const o=n.length,a=A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]<r[i]?n[i]:r[i]);return a}function hs(t,e,s){const n=t.length;if(n<=2)return Ds(t,e,s);const r=t[0].length,o=A.createEmptyBand(s,r),a=new Map;for(let i=0;i<r;i++)if(!e||e[i]){a.clear();for(let p=0;p<n;p++){const f=t[p][i];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,l=0;const m=[];for(const p of a.keys())u=a.get(p),u>l?(l=u,m.length=0,m.push(p)):u===l&&m.push(p);m.length>1&&m.sort((p,f)=>p-f),o[i]=m[0]}return o}function fs(t,e,s){const n=t.length;if(n<=2)return Ds(t,e,s);const r=t[0].length,o=A.createEmptyBand(s,r),a=new Map;for(let i=0;i<r;i++)if(!e||e[i]){a.clear();for(let p=0;p<n;p++){const f=t[p][i];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,l=t.length;const m=[];for(const p of a.keys())u=a.get(p),u<l?(l=u,m.length=0,m.push(p)):u===l&&m.push(p);m.length>1&&m.sort((p,f)=>p-f),o[i]=m[0]}return o}function ds(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,a=A.createEmptyBand(s,o),i=new Set;for(let u=0;u<o;u++)if(!e||e[u]){let l;i.clear();for(let m=0;m<n;m++)l=t[m][u],i.add(l);a[u]=i.size}return a}const U=new Map,oe=new Map,S=new Map,O=new Map;function Ir(){U.size||(U.set(4,Math.sqrt),U.set(6,Math.acos),U.set(7,Math.asin),U.set(8,Math.atan),U.set(9,Math.atanh),U.set(10,Math.abs),U.set(21,Math.cos),U.set(22,Math.cosh),U.set(48,Math.floor),U.set(49,Math.ceil),U.set(51,Math.sin),U.set(52,Math.sinh),U.set(56,Math.tan),U.set(57,Math.tanh),U.set(59,Math.acosh),U.set(60,Math.asinh),U.set(65,Math.floor),oe.set(5,Math.pow),oe.set(61,Math.atan2),S.set(1,Jn),S.set(2,Xn),S.set(3,Kn),S.set(11,nr),S.set(12,rr),S.set(13,or),S.set(14,ir),S.set(15,ar),S.set(16,ur),S.set(17,lr),S.set(18,cr),S.set(19,pr),S.set(20,mr),S.set(23,zs),S.set(24,hr),S.set(25,gr),S.set(26,fr),S.set(27,dr),S.set(28,vr),S.set(29,br),S.set(30,Yn),S.set(31,Pr),S.set(32,Hn),S.set(33,Ar),S.set(34,Tr),S.set(35,wr),S.set(36,yr),S.set(37,xr),S.set(44,Fr),S.set(45,Nr),S.set(46,Rr),S.set(53,qn),S.set(64,Zn),S.set(65,Qn),S.set(76,os),S.set(78,os),O.set(38,hs),O.set(39,is),O.set(40,ls),O.set(41,ms),O.set(42,as),O.set(43,fs),O.set(47,us),O.set(54,ps),O.set(55,cs),O.set(58,ds),O.set(66,hs),O.set(67,is),O.set(68,ls),O.set(69,ms),O.set(70,as),O.set(71,fs),O.set(72,us),O.set(73,ps),O.set(74,cs),O.set(75,ds))}function Es(t,e,s={}){Ir();let n=Wn(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!O.has(e)||s.processAsMultiband,a=o?t[0].pixels.length:1,i=[];for(let l=0;l<a;l++){const m=O.has(e)&&!o?t.flatMap(x=>x.pixels):t.map(x=>x.pixels[l]);let p,f=!0;if(e===Os.setNull){const x=Sr(m,n,r);p=x.band,n=x.mask,f=!1}else S.has(e)?p=S.get(e)(m,n,"f64"):U.has(e)?p=e===K.asin||e===K.acos||e===K.atanh?tr(m,n,"f64",e):er(m,n,"f64",U.get(e)):oe.has(e)?p=sr(m,n,"f64",oe.get(e)):O.has(e)?p=O.get(e)(m,n,"f64"):(p=m[0],f=!1);if(f&&e!==W.isNull&&!Gs.has(e)){const x=A.createEmptyBand(r,p.length);n||(n=new Uint8Array(p.length).fill(255)),Sn(p,n),js(p,n,r,x),p=x}i.push(p)}const u=t[0];return new A({width:u.width,height:u.height,pixelType:r,mask:e===W.isNull?null:n,pixels:i})}function Cr(t,e,s){return Es(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}let Bt=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return(e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null?null:Cr(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=kt(s);const o=$(s);return o&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:o}}};c([h({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([h({type:Un,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([h()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([F("esri.layers.support.rasterFunctions.ArithmeticFunction")],Bt);const kr=Bt;var he;let fe=he=class extends D{clone(){return new he({raster:this.raster})}};fe=he=c([F("esri.layers.support.rasterFunctions.AspectFunctionArguments")],fe);const _r=fe;let lt=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return null;const{extent:s,primaryPixelSizes:n}=t,r=n==null?void 0:n[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return wn(e,{resolution:o})}};c([h({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),c([h({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),c([h()],lt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],lt.prototype,"isGCS",void 0),lt=c([F("esri.layers.support.rasterFunctions.AspectFunction")],lt);const Br=lt,jr=new Set(["+","-","*","/","(",")"]);function Mr(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const s=t.split(""),n=[],r=[];let o="";for(let a=0;a<s.length;a++){const i=s[a];jr.has(i)?(o.length&&r.push(gs(o,e)),n.push(i),o=""):o=o.concat(i)}return o.length&&r.push(gs(o,e)),{ops:n,nums:r}}function gs(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Or(t,e,s,n){if(typeof s=="number"&&typeof n=="number")return s+n;let r,o,a;typeof s=="number"?(a=n,r=a.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(a=new Float32Array(r),a.fill(n)):a=n);const i=new Float32Array(r);switch(e){case"+":for(let u=0;u<r;u++)(t==null||t[u])&&(i[u]=o[u]+a[u]);break;case"-":for(let u=0;u<r;u++)(t==null||t[u])&&(i[u]=o[u]-a[u]);break;case"*":for(let u=0;u<r;u++)(t==null||t[u])&&(i[u]=o[u]*a[u]);break;case"/":for(let u=0;u<r;u++)(t==null||t[u])&&a[u]&&(i[u]=o[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return i}function Gr(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let r=0;r<t.length;r++)if(t[r]==="(")s=r;else if(t[r]===")"){n=r;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function zr(t){if(t.length===1)return{opIndex:0,numIndex:0};let e=0,s=0;for(let a=0;a<t.length;a++)if(t[a]==="(")e=a;else if(t[a]===")"){s=a;break}const n=s===0?t:t.slice(e+1,s);let r=-1;for(let a=0;a<n.length;a++)if(n[a]==="*"||n[a]==="/"){r=a;break}if(r>-1)s>0&&(r+=e+1);else{for(let a=0;a<n.length;a++)if(n[a]==="+"||n[a]==="-"){r=a;break}s>0&&(r+=e+1)}let o=0;for(let a=0;a<r;a++)t[a]==="("&&o++;return{opIndex:r,numIndex:r-o}}function Dr(t,e,s){let n,{ops:r,nums:o}=Mr(s,e);if(r.length===0){const a=o.length===1?o[0]:e[0];if(a instanceof Float32Array)return[a];const i=new Float32Array(e[0].length);return typeof a=="number"?i.fill(a):i.set(a),[i]}for(;r.length>0;){const{numIndex:a,opIndex:i}=zr(r);if(n=Or(t,r[i],o[a],o[a+1]),r.length===1)break;r=Gr(r,i),o.splice(a,2,n)}return[n]}const Er=new Z({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ur(t,e){if(!mn(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map(f=>f-1),{pixels:o,mask:a}=t;let i;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":i=ys(a,o[r[0]],o[r[1]]);break;case"ndwi":i=ys(a,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":i=Lr(a,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":i=$r(a,o[r[0]],o[r[1]]);break;case"savi":i=Wr(a,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":i=Jr(a,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":i=Hr(a,o[r[0]],o[r[1]]);break;case"gemi":i=qr(a,o[r[0]],o[r[1]]);break;case"pvi":i=Xr(a,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":i=Kr(a,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":i=Yr(a,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":i=Zr(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":i=Qr(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":i=to(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":i=eo(a,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":i=so(a,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":i=no(a,o[r[0]],o[r[1]]);break;case"custom":i=Dr(a,o,s);break;default:return t}const{outputPixelType:u="f32"}=e,l=u!=null&&$(u);let m;a?(m=new Uint8Array(t.width*t.height),m.set(a)):l&&(m=new Uint8Array(t.width*t.height).fill(255)),l&&(i=i.map(f=>{const x=A.createEmptyBand(u,f.length);return js(f,m,u,x),x}));const p=new A({width:t.width,height:t.height,pixelType:u,pixels:i,mask:m});return p.updateStatistics(),p}function Vr(t,e,s,n){const{mask:r,pixels:o,width:a,height:i}=t,u=o[s],l=o[e],m=l.length,p=n?new Uint8Array(m):new Float32Array(m),f=n?100:1,x=n?100.5:0;for(let y=0;y<m;y++)if(r==null||r[y]){const d=u[y],w=l[y],v=d+w;v&&(p[y]=(d-w)/v*f+x)}const g=new A({width:a,height:i,mask:r,pixelType:n?"u8":"f32",pixels:[p]});return g.updateStatistics(),g}function V(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function ys(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o]){const a=e[o],i=s[o],u=a+i;u&&(r[o]=(a-i)/u)}return[r]}function Lr(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o]){const a=e[o],i=s[o];i&&(r[o]=a/i)}return[r]}function $r(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o]){const a=e[o],i=s[o];i&&(r[o]=a/i-1)}return[r]}function Wr(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let a=0;a<r;a++)if(t==null||t[a]){const i=s[a],u=e[a],l=u+i+n;l&&(o[a]=(u-i)/l*(1+n))}return[o]}function Jr(t,e,s,n,r,o){const a=s.length,i=new Float32Array(a),u=-r*n+o*(1+n*n);for(let l=0;l<a;l++)if(t==null||t[l]){const m=s[l],p=e[l],f=r*p+m+u;f&&(i[l]=n*(p-n*m-r)/f)}return[i]}function Hr(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o]){const a=s[o],i=e[o],u=2*i+1;r[o]=.5*(u-Math.sqrt(u*u-8*(i-a)))}return[r]}function qr(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o]){const a=s[o],i=e[o];if(a!==1&&i+a+.5!==0){const u=(2*(i*i-a*a)+1.5*i+.5*a)/(i+a+.5);r[o]=u*(1-.25*u)-(a-.125)/(1-a)}}return[r]}function Xr(t,e,s,n,r){const o=s.length,a=new Float32Array(o),i=1/Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(t==null||t[u]){const l=s[u],m=e[u];a[u]=(m-n*l-r)*i}return[a]}function Kr(t,e){const[s,n,r,o,a,i]=e,u=s.length,l=new Float32Array(u);for(let m=0;m<u;m++)(t==null||t[m])&&(l[m]=-.2848*s[m]-.2435*n[m]-.5436*r[m]+.7243*o[m]+.084*a[m]-.18*i[m]);return[l]}function Yr(t,e){const[s,n,r,o,a]=e,i=s.length,u=new Float32Array(i),l=new Float32Array(i),m=new Float32Array(i);for(let p=0;p<i;p++)(t==null||t[p])&&(u[p]=a[p]?o[p]/a[p]*100:0,l[p]=s[p]?o[p]/s[p]*100:0,m[p]=r[p]?n[p]/r[p]*(o[p]/r[p])*100:0);return[u,l,m]}function Zr(t,e){const[s,n,r]=e,o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(t==null||t[i])for(i=0;i<o;i++){const u=s[i],l=n[i],m=l+u-r[i];m&&(a[i]=(l-u)/m)}return[a]}function Qr(t,e){const[s,n,r]=e,o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(t==null||t[i])for(i=0;i<o;i++){const u=s[i],l=n[i],m=r[i],p=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(p){const f=1.5*(1.2*(u-m)-2.5*(l-m));a[i]=f/p}}return[a]}function to(t,e){const[s,n,r]=e,o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(t==null||t[i])for(i=0;i<o;i++){const u=s[i],l=n[i],m=r[i];a[i]=100*(u-l)-10*(u-m)}return[a]}function eo(t,e){const[s,n,r]=e,o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(t==null||t[i])for(i=0;i<o;i++){const u=s[i],l=n[i],m=u+6*l-7.5*r[i]+1;m&&(a[i]=2.5*(u-l)/m)}return[a]}function so(t,e,s=.5){const[n,r,o]=e,a=r.length,i=new Float32Array(a);for(let u=0;u<a;u++)if(t==null||t[u])for(u=0;u<a;u++){const l=n[u],m=r[u],p=o[u],f=l+s*m+(1-s)*p;f&&(i[u]=(l-s*m-(1-s)*p)/f)}return[i]}function no(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(t==null||t[o])for(o=0;o<n;o++){const a=(.1-e[o])**2+(.06-s[o])**2;a&&(r[o]=1/a)}return[r]}var de;let Jt=de=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new de({method:this.method,bandIndexes:this.bandIndexes,raster:J(this.raster)})}};c([h({json:{type:String,write:!0}})],Jt.prototype,"bandIndexes",void 0),c([H(Er)],Jt.prototype,"method",void 0),Jt=de=c([F("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Jt);const ro=Jt,oo=new Set(["vari","mtvi2","rtvi-core","evi"]);let jt=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map(a=>parseFloat(a));return Ur(e,{method:s,bandIndexes:r,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=V([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=V([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=V([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=V([e[0],e[1],0]),n="ci";break;case"savi":s=V([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=V([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=V([e[0],e[1],0]),n="msavi";break;case"gemi":s=V([e[0],e[1],0]),n="gemi";break;case"pvi":s=V([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=V([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=V([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=V([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=V([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=V([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=V([e[1],e[0],0]),n="bai";break;default:s=V([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r,isOutputRounded:$(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1),s=t.length,n=e.map(a=>a>=s?s-1:a),r=oo.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map(a=>t[a]);return o.length===2&&o.push(0),o}};c([h({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),c([h({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),c([h()],jt.prototype,"rasterArgumentNames",void 0),jt=c([F("esri.layers.support.rasterFunctions.BandArithmeticFunction")],jt);const io=jt;var ge;const xs=new Z({1:"outside",2:"inside"},{useNumericKeys:!0});let Ht=ge=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ge({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([h({types:Hs,json:{read:qs,write:!0}})],Ht.prototype,"clippingGeometry",void 0),c([h({json:{read:xs.read,write:xs.write}})],Ht.prototype,"clippingType",void 0),Ht=ge=c([F("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ht);const ao=Ht;let ct=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(n==="outside")try{const{spatialReference:r}=t,o=s.type==="extent"?_n(s,r):Bn(s,r).extent;o&&Dn(t,o)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([h({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([h()],ct.prototype,"rasterArgumentNames",void 0),c([h()],ct.prototype,"isNoopProcess",void 0),ct=c([F("esri.layers.support.rasterFunctions.ClipFunction")],ct);const uo=ct;var ye;let Y=ye=class extends D{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return fn.includes(e)?e:null}readColorRamp(t){return Ms(t)}readColorRampName(t,e){if(!t)return null;const s=It.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return s?It.fromJSON(s):null}clone(){var t;return new ye({colormap:J(this.colormap),colormapName:this.colormapName,colorRamp:(t=this.colorRamp)==null?void 0:t.clone(),colorRampName:this.colorRampName})}};c([h({type:[[Number]],json:{write:!0}})],Y.prototype,"colormap",void 0),c([h({type:String,json:{write:!0}})],Y.prototype,"colormapName",void 0),c([Fs("colormapName")],Y.prototype,"castColormapName",null),c([h({types:jn,json:{write:!0}})],Y.prototype,"colorRamp",void 0),c([Ct("colorRamp")],Y.prototype,"readColorRamp",null),c([h({type:It.apiValues,json:{type:It.jsonValues,write:It.write}})],Y.prototype,"colorRampName",void 0),c([Ct("colorRampName")],Y.prototype,"readColorRampName",null),Y=ye=c([F("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Y);const lo=Y,co=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],po=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Xe(t,e){const s=[],n=[];for(let o=0;o<t.length-1;o++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[o].slice(1),toColor:t[o+1].slice(1)}),n.push(t[o+1][0]-t[o][0]);const r=t[t.length-1][0];return Bs({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}function mo(){return Xe([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function ho(){const t=Xe([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function fo(){return Bs({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function go(){const t=[];for(let e=0;e<256;e++){const s=[];for(let n=0;n<3;n++)s.push(Math.round(255*Math.random()));t.push(s)}return t}function yo(){return Xe([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function xo(t){let e;switch(t){case"elevation":e=mo();break;case"gray":e=fo();break;case"hillshade":e=yo();break;case"ndvi":e=co;break;case"ndvi2":e=ho();break;case"ndvi3":e=po;break;case"random":e=go()}return e?(e=e.map((s,n)=>[n,...s]),e):null}let tt=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!(e!=null&&e.length))if(n)this.colorRamp=n,e=pe(n,{interpolateAlpha:!0});else if(r){const i=Is(r);i&&(e=pe(i),this.colorRamp=Ms(i))}else s&&(e=xo(s));if(!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var s;let e=(s=t.pixelBlocks)==null?void 0:s[0];return!e||$(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([h({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),c([h({type:lo,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),c([h()],tt.prototype,"rasterArgumentNames",void 0),c([h()],tt.prototype,"isNoopProcess",void 0),c([h({json:{write:!0}})],tt.prototype,"indexedColormap",void 0),c([h()],tt.prototype,"colorRamp",void 0),tt=c([F("esri.layers.support.rasterFunctions.ColormapFunction")],tt);const wo=tt;var xe;let we=xe=class extends D{clone(){return new xe({raster:this.raster})}};we=xe=c([F("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],we);const vo=we;let pt=class extends G{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var o;const t=this.sourceRasterInfos[0];if(t.bandCount>1||!((o=t.colormap)!=null&&o.length))return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort((a,i)=>a[0]-i[0]),{indexedColormap:n,offset:r}=Ss({colormap:s});return n?(this.lookup={indexedColormap:n,offset:r},{success:!0,supportsGPU:Cs(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){var m;let e=(m=t.pixelBlocks)==null?void 0:m[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),r=new Uint8Array(s.length),o=new Uint8Array(s.length),a=new Uint8Array(s.length),{indexedColormap:i,offset:u}=this.lookup,l=i.length;for(let p=0;p<s.length;p++)if(n[p]){let f=4*(s[p]-u);f<0||f>l-4?n[p]=0:(r[p]=i[f++],o[p]=i[f++],a[p]=i[f++])}return e.pixels=[r,o,a],e.statistics=[new ue(0,255),new ue(0,255),new ue(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};c([h({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([h({type:vo,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([h()],pt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=c([F("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],pt);const bo=pt;var ve;let qt=ve=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new ve({rasters:J(this.rasters)})}};c([h({json:{write:!0}})],qt.prototype,"rasters",void 0),c([$t("rasters")],qt.prototype,"writeRasters",null),qt=ve=c([F("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],qt);const Ao=qt;let Mt=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:r})=>r).reduce((r,o)=>r+o),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:o})=>o!=null&&r.push(...o)),s.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:o})=>o!=null&&r.push(...o)),s.histograms=r}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(r=>{const o=t.map(u=>{var l;return(l=u.multidimensionalInfo)==null?void 0:l.variables.find(({name:m})=>m===r.name)}),a=o.map(u=>{var l;return(l=u==null?void 0:u.statistics)!=null&&l.length?u.statistics:null}),i=o.map(u=>{var l;return(l=u==null?void 0:u.histograms)!=null&&l.length?u.histograms:null});r.statistics=a.every(u=>u!=null)?a.flat():null,r.histograms=i.every(u=>u!=null)?i.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every(r=>{var o;return(o=r.keyProperties.BandProperties)==null?void 0:o.length})?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?(e==null?void 0:e[0])==null?null:on(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([h({json:{write:!0,name:"rasterFunction"}})],Mt.prototype,"functionName",void 0),c([h({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],Mt.prototype,"functionArguments",void 0),c([h()],Mt.prototype,"rasterArgumentNames",void 0),Mt=c([F("esri.layers.support.rasterFunctions.CompositeBandFunction")],Mt);const To=Mt,Po=new Z({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Fo=new Z({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function No(t,e,s,n){const[r,o]=t,a=$(s)&&!$(r.pixelType)&&!$(o.pixelType),i=[r.mask,o.mask].filter(g=>g),u=A.combineBandMasks(i),l=t.map(g=>g.pixels[0]),{width:m,height:p}=r,f=A.createEmptyBand(s,m*p);switch(e){case"difference":case"relative-difference":Ro({bands:l,mask:u,outBand:f,isRoundingNeeded:a,isRelative:e==="relative-difference"});break;case"categorical":So({bands:l,mask:u,outBand:f,...n});break;case"euclidean-distance":Io({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"angle-difference":Co({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"band-with-most-change":ko({pixels:t.map(g=>g.pixels),mask:u,outBand:f})}const x=new A({width:m,height:p,pixels:[f],pixelType:s,mask:u});return x.updateStatistics(),x}function Ro(t){const{bands:[e,s],mask:n,isRelative:r,isRoundingNeeded:o,outBand:a}=t,i=e.length;for(let u=0;u<i;u++)if(!n||n[u]){let l=e[u]-s[u];if(r){const m=Math.max(Math.abs(e[u])-Math.abs(s[u]));l=m>0?l/m:0}a[u]=o?Math.round(l):l}}function So(t){const{bands:[e,s],categoryIndexLookups:[n,r],classNames:[o,a],mask:i,keepMethod:u,outBand:l}=t,m=e.length,p=o.length,f=a.length,x=p*f,g=x+1,y=x+2;for(let d=0;d<m;d++)if(!i||i[d]){const w=e[d],v=s[d],b=n[w],T=r[v],N=o[b],P=a[T];l[d]=b==null||T==null?x:u==="changed"&&N===P?g:u==="unchanged"&&N!==P?y:b*f+T}}function Io(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,a=e.length;for(let i=0;i<o;i++)if(!n||n[i]){let u=0;for(let l=0;l<a;l++){const m=e[l][i]-s[l][i];u+=m*m}r[i]=Math.sqrt(u)}}function Co(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,a=e.length;for(let i=0;i<o;i++)if(!n||n[i]){let u=0,l=0,m=0;for(let f=0;f<a;f++){const x=e[f][i],g=s[f][i];u+=x*g,l+=x*x,m+=g*g}const p=Math.sqrt(l*m);r[i]=p?Math.acos(u/p):1.5707963267948966}}function ko(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,a=e.length;for(let i=0;i<o;i++)if(!n||n[i]){let u=0,l=0;for(let m=0;m<a;m++){const p=Math.abs(e[m][i]-s[m][i]);p>u&&(u=p,l=m)}r[i]=l}}var be;let mt=be=class extends D{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new be({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([H(Po)],mt.prototype,"method",void 0),c([H(Fo)],mt.prototype,"keepMethod",void 0),c([h({json:{write:!0}})],mt.prototype,"raster2",void 0),c([h({readOnly:!0})],mt.prototype,"rasters",null),mt=be=c([F("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],mt);const _o=mt;let ht=class extends G{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(o=>o.attributeTable),n=this._getFieldNames(s,"value"),r=s.map(o=>this._getClassFieldName(o));if(n[0]==null||n[1]==null||r[0]==null||r[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,r)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if((e==null?void 0:e[0])==null||(e==null?void 0:e[1])==null)return null;const{method:s}=this.functionArguments;return No(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=kt(t);const n=$(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map(b=>b.attributeTable),r=n.map((b,T)=>b.features.map(N=>N.attributes[e[T]])),o=n.map((b,T)=>b.features.map(N=>N.attributes[s[T]])),a=r.map(b=>{const T=[];return b.forEach((N,P)=>T[N]=P),T}),{keepMethod:i}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:o,keepMethod:i};const u=n[0].clone();u.fields=[new nt({name:"OID",type:"oid"}),new nt({name:"Value",type:"integer"}),new nt({name:"ClassName",type:"string"}),new nt({name:"Class_From",type:"string"}),new nt({name:"Class_To",type:"string"})];const l=this._getFieldNames(n,"red"),m=this._getFieldNames(n,"green"),p=this._getFieldNames(n,"blue"),f=[],x=l.length===2&&m.length===2&&p.length===2;x&&(f.push(...n.map((b,T)=>b.features.map(N=>[N.attributes[l[T]],N.attributes[m[T]],N.attributes[p[T]]]))),u.fields.push(new nt({name:"Red",type:"integer"}),new nt({name:"Green",type:"integer"}),new nt({name:"Blue",type:"integer"})));const g=u.features[0].clone();g.geometry=null;const y=[],[d,w]=r.map(b=>b.length);let v=1;for(let b=0;b<d;b++){const T=o[0][b];for(let N=0;N<w;N++){const P=o[1][N];if(i==="changed"&&T===P||i==="unchanged"&&T!==P)continue;const R=g.clone();R.attributes={OID:v++,Value:b*w+N,ClassName:T===P?T:`${T} -> ${P}`,Class_From:T,Class_To:P},x&&(R.attributes.Red=f[0][b][0]+f[1][N][0]>>1,R.attributes.Green=f[0][b][1]+f[1][N][1]>>1,R.attributes.Blue=f[0][b][2]+f[1][N][2]>>1),y.push(R)}}if(i==="changed"){const b=g.clone();b.attributes={OID:v++,Value:d*w+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},y.push(b)}else if(i==="unchanged"){const b=g.clone();b.attributes={OID:v++,Value:d*w+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},y.push(b)}u.features=y,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:s})=>{var n;return(n=s.find(r=>r.name.toLowerCase()===e))==null?void 0:n.name}).filter(s=>s)}_getClassFieldName(t){var e;return(e=t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>s.type==="string"))==null?void 0:e.name}};c([h({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),c([h({type:_o,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),c([h()],ht.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ht.prototype,"_categoryConfig",void 0),ht=c([F("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ht);const Bo=ht;var Ae;let Xt=Ae=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ae({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([h({json:{write:!0}})],Xt.prototype,"contrastOffset",void 0),c([h({json:{write:!0}})],Xt.prototype,"brightnessOffset",void 0),Xt=Ae=c([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Xt);const jo=Xt;let ft=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=vn(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Je(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([h({type:jo,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([h()],ft.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ft.prototype,"lookup",void 0),ft=c([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ft);const Mo=ft;function Ke(t,e,s,n,r){const o=Math.floor(n/2);for(let i=0;i<o;i++)for(let u=0;u<e;u++)t[i*e+u]=t[(r-1-i)*e+u],t[(s-1-i)*e+u]=t[(s-r+i)*e+u];const a=Math.floor(r/2);for(let i=0;i<s;i++){const u=i*e;for(let l=0;l<a;l++)t[u+l]=t[u+r-1-l],t[u+e-l-1]=t[u+e+l-r]}}const M=new Map;function Oo(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let r=1;r<e;r++){let o=null;for(let a=0;a<e;a++){const i=t[a+r*e],u=t[a];if(o==null)if(u===0){if(i)return{separable:!1,row:null,col:null}}else o=i/u;else if(i/u!==o)return{separable:!1,row:null,col:null}}if(o==null)return{separable:!1,row:null,col:null};n.push(o)}return{separable:!0,row:s,col:n}}function ws(t,e,s,n,r,o,a){const i=new Float32Array(e*s),u=o.length,l=a?0:n,m=a?n:0,p=a?1:e;for(let f=l;f<s-l;f++){const x=f*e;for(let g=m;g<e-m;g++){if(r&&!r[x+g])continue;let y=0;for(let d=0;d<u;d++)y+=t[x+g+(d-n)*p]*o[d];i[x+g]=y}}return i}function Go(t,e,s,n,r,o,a){const i=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let m=u;m<s-u;m++){const p=m*e;for(let f=l;f<e-l;f++){if(o&&!o[p+f])continue;let x=0;for(let g=0;g<n;g++)for(let y=0;y<r;y++)x+=t[p+f+(g-u)*e+y-l]*a[g*r+y];i[p+f]=x}}return i}function zo(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:a,mask:i}=t,u=n.length,l=[],{kernel:m,rows:p,cols:f}=e;for(let x=0;x<u;x++){const g=Go(n[x],r,o,p,f,i,m);s&&Ke(g,r,o,p,f),l.push(g)}return new A({width:r,height:o,pixelType:a,pixels:l,mask:i})}function Do(t,e,s,n=!0){const{pixels:r,width:o,height:a,pixelType:i,mask:u}=t,l=r.length,m=[],p=e.length,f=s.length,x=Math.floor(p/2),g=Math.floor(f/2);for(let y=0;y<l;y++){let d=ws(r[y],o,a,x,u,e,!0);d=ws(d,o,a,g,u,s,!1),n&&Ke(d,o,a,p,f),m.push(d)}return new A({width:o,height:a,pixelType:i,pixels:m,mask:u})}function Eo(t,e){const s=Oo(e.kernel),n=e.mirrorEdges!==!1,r=s.separable?Do(t,s.row,s.col,n):zo(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}M.set(_.none,[0,0,0,0,1,0,0,0,0]),M.set(_.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),M.set(_.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),M.set(_.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),M.set(_.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),M.set(_.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),M.set(_.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),M.set(_.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),M.set(_.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),M.set(_.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),M.set(_.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),M.set(_.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),M.set(_.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),M.set(_.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),M.set(_.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),M.set(_.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),M.set(_.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),M.set(_.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),M.set(_.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),M.set(_.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),M.set(_.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),M.set(_.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),M.set(_.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Te;let dt=Te=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=M.get(t);if(!e||t===_.userDefined||t===_.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Te({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:J(this.raster)})}};c([h({json:{type:Number,write:!0}})],dt.prototype,"rows",void 0),c([h({json:{type:Number,write:!0}})],dt.prototype,"cols",void 0),c([h({json:{name:"type",type:Number,write:!0}})],dt.prototype,"convolutionType",null),c([h({json:{type:[Number],write:!0}})],dt.prototype,"kernel",void 0),dt=Te=c([F("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],dt);const Uo=dt,vs=25;let gt=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((n,r)=>n+r);return e===-1||s===0||s===1?t:t.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(_).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==_.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const a=[_.none,_.sharpen,_.sharpen2,_.sharpening3x3,_.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!a.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=vs}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null||this.functionArguments.convolutionType===_.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return Eo(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(vs);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:kt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),c([h({type:Uo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),c([h()],gt.prototype,"rasterArgumentNames",void 0),c([h()],gt.prototype,"_normalizedKernel",null),gt=c([F("esri.layers.support.rasterFunctions.ConvolutionFunction")],gt);const Vo=gt;var Pe;const Us=new Z({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Ot=Pe=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Us.fromJSON(e.type??e.curvatureType??0)}clone(){return new Pe({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([h({json:{write:{target:"type"}}}),H(Us)],Ot.prototype,"curvatureType",void 0),c([Ct("curvatureType",["type","curvatureType"])],Ot.prototype,"readCurvatureType",null),c([h({type:Number,json:{write:!0}})],Ot.prototype,"zFactor",void 0),Ot=Pe=c([F("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Ot);const Lo=Ot;let yt=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(e==null)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,a=o==null?void 0:o[0],i=a??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*Zt:s;return bn(e,{zFactor:u,curvatureType:n,resolution:i})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};c([h({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),c([h({type:Lo,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),c([h()],yt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],yt.prototype,"isGCS",void 0),yt=c([F("esri.layers.support.rasterFunctions.CurvatureFunction")],yt);const $o=yt;var Fe;let et=Fe=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Ns.bestMatch}clone(){var t,e,s;return new Fe({bandIds:(t=this.bandIds)==null?void 0:t.slice(),bandNames:(e=this.bandNames)==null?void 0:e.slice(),bandWavelengths:(s=this.bandWavelengths)==null?void 0:s.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([h({json:{write:!0}})],et.prototype,"bandIds",void 0),c([h({json:{write:!0}})],et.prototype,"bandNames",void 0),c([h({json:{write:!0}})],et.prototype,"bandWavelengths",void 0),c([H({0:"name",1:"wavelength",2:"id"})],et.prototype,"method",void 0),c([h({json:{write:!0}})],et.prototype,"missingBandAction",void 0),c([h({json:{write:!0}})],et.prototype,"wavelengthMatchTolerance",void 0),et=Fe=c([F("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],et);const Wo=et;let Gt=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){var d;const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:a,missingBandAction:i}=t,u=(r==null?void 0:r.length)&&(n==="name"||n!=="id"&&!(a!=null&&a.length)),l=(o==null?void 0:o.length)&&(n==="wavelength"||n!=="id"&&!(a!=null&&a.length)),m=i===Ns.fail,p=u?Ho(s,r):l?Xo(s,o,this.functionArguments,m):qo(s,a,m);if(p==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const f=s.clone();f.pixelType=this.outputPixelType,f.bandCount=p.length;const{statistics:x,histograms:g}=f;x!=null&&x.length&&(f.statistics=p.map(w=>x[w]||x[x.length-1])),g!=null&&g.length&&(f.histograms=p.map(w=>g[w]||g[g.length-1])),f.multidimensionalInfo&&f.multidimensionalInfo.variables.forEach(w=>{const{statistics:v,histograms:b}=w;v!=null&&v.length&&(w.statistics=p.map(T=>v[T]||v[v.length-1])),b!=null&&b.length&&(w.histograms=p.map(T=>b[T]||b[b.length-1]))});let y=(d=f.keyProperties)==null?void 0:d.BandProperties;return y!=null&&y.length&&(y=p.map(w=>w>=y.length?y[y.length-1]:y[w]),f.keyProperties={...f.keyProperties,BandProperties:y}),this.rasterInfo=f,{success:!0,supportsGPU:f.bandCount<=3}}_processPixels(t){var r;const e=(r=t.pixelBlocks)==null?void 0:r[0];if(e==null)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=s?s-1:o);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:V(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};c([h({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),c([h({type:Wo,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),c([h()],Gt.prototype,"rasterArgumentNames",void 0),Gt=c([F("esri.layers.support.rasterFunctions.ExtractBandFunction")],Gt);const Jo=Gt;function Ho(t,e){const s=t.bandInfos.map(({name:r})=>r.toLowerCase()),n=[];for(let r=0;r<e.length;r++){const o=e[r].toLowerCase();let a=s.indexOf(o);if(a===-1&&o==="nearinfrared"&&(a=s.findIndex(i=>i.startsWith("nearinfrared_1")),a===-1&&(a=s.findIndex(i=>i.startsWith("nearinfrared")))),a===-1)return null;n.push(a)}return n}function qo(t,e,s){const{bandCount:n}=t;return!(e!=null&&e.length)||s&&e.some(r=>r<0||r>=n)?null:e}function Xo(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:r}=t,o=[];for(let i=0;i<r.length;i++){const{minWavelength:u,maxWavelength:l}=r[i];if(!u||!l)return null;o.push({minWavelength:u,maxWavelength:l})}const a=[];for(let i=0;i<e.length;i++){const u=e[i];let l=!1,m=-1,p=Number.MAX_VALUE;for(let f=0;f<o.length;f++){const x=o[f],g=u>=x.minWavelength&&u<=x.maxWavelength,y=Math.abs(u-(x.minWavelength+x.maxWavelength)/2);g?y<p&&(l=!0,m=f,p=y):!l&&y<p&&(m=f,p=y)}if(!l&&s&&p<s&&(l=!0),!l&&n)return null;a.push(m)}return a}function Ko(t,e,s){const{pixels:n,width:r,height:o,mask:a,bandMasks:i}=t,u=r*o,l=i!=null&&i.length?A.combineBandMasks(i):a,m=Math.min(e.length,n.length),p=s.startsWith("f"),f=!p&&s!==t.pixelType,[x,g]=kt(s),y=A.createEmptyBand(s,u);for(let w=0;w<o;w++){let v=w*r;for(let b=0;b<r;b++,v++)if(!l||l[v]){let T=0;for(let N=0;N<m;N++)T+=e[N]*n[N][v];p||(T=Math.round(T),f&&(T=T>g?g:T<x?x:T)),y[v]=T}}const d=new A({width:r,height:o,pixels:[y],pixelType:s,mask:l});return d.updateStatistics(),d}var Ne;let te=Ne=class extends D{clone(){return new Ne({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([h({type:[Number],json:{write:!0}})],te.prototype,"conversionParameters",void 0),te=Ne=c([F("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],te);const Yo=te;let xt=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,n)=>s+n);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!(t!=null&&t.length))return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){var s;const e=(s=t.pixelBlocks)==null?void 0:s[0];return e==null?null:Ko(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([h({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([h({type:Yo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([h()],xt.prototype,"rasterArgumentNames",void 0),c([h()],xt.prototype,"_normalizedWeights",null),xt=c([F("esri.layers.support.rasterFunctions.GrayscaleFunction")],xt);const Zo=xt;var Re;const Qo=new Z({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),ti=new Z({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let X=Re=class extends D{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Re({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([h({type:Number,json:{write:!0}})],X.prototype,"altitude",void 0),c([h({type:Number,json:{write:!0}})],X.prototype,"azimuth",void 0),c([h(),H(Qo)],X.prototype,"hillshadeType",void 0),c([h({type:Number,json:{write:!0,name:"psPower"}})],X.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{write:!0,name:"psZFactor"}})],X.prototype,"pixelSizeFactor",void 0),c([h(),H(ti)],X.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],X.prototype,"zFactor",void 0),c([h({type:Boolean,json:{write:!0}})],X.prototype,"removeEdgeEffect",void 0),X=Re=c([F("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],X);const Vs=X;let wt=class extends G{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=((s=e.spatialReference)==null?void 0:s.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var u;const e=(u=t.pixelBlocks)==null?void 0:u[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n==null?void 0:n[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),a=re(this.functionArguments,o,this.isGCS),i=ks(e,a);return i.pixelType=this.outputPixelType,i}_getWebGLParameters(){const t=re(this.functionArguments,{x:1,y:1},this.isGCS),e=_s(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,a=s==="scaled",i=$(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:a?r:0,pixelSizePower:a?o:0,isOutputRounded:i}}};c([h({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),c([h({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),c([h()],wt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],wt.prototype,"isGCS",void 0),wt=c([F("esri.layers.support.rasterFunctions.HillshadeFunction")],wt);const ei=wt;var Se;let vt=Se=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new Se({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:J(this.rasters)})}};c([h({json:{write:!0}})],vt.prototype,"operation",void 0),c([h({json:{write:!0}})],vt.prototype,"rasters",void 0),c([$t("rasters")],vt.prototype,"writeRasters",null),c([h({json:{write:!0}})],vt.prototype,"processAsMultiband",void 0),vt=Se=c([F("esri.layers.support.rasterFunctions.LocalFunctionArguments")],vt);const si=vt;let zt=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(u=>u.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,a=rs[r];if(!(a===999||o.length===a||o.length<=1&&a===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${a}`};const i=e.clone();return i.bandCount=a!==999||n?s:1,this._removeStatsHistColormapVAT(i),this._updateStatistics(i),this._updatePixelType(i),this.rasterInfo=i,{success:!0,supportsGPU:i.bandCount===1&&a<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:Es(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var i;const{operation:t}=this.functionArguments,e=rs[t],s=((i=Object.keys(ss).find(u=>ss[u]===t))==null?void 0:i.toLowerCase())??"undefined",n=this.outputPixelType??"f32";let[r,o]=kt(n);const a=$(n);return a&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:a}}_updateStatistics(t){var r,o;const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=(r=ns(s))==null?void 0:r.domain;if(n){t.statistics=[];for(let a=0;a<t.bandCount;a++)t.statistics[a]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else s===45&&((o=e.statistics)!=null&&o.length)&&(t.statistics=e.statistics.map(a=>({min:-a.max,max:-a.min,avg:a.avg!=null?-a.avg:void 0,stddev:a.stddev!=null?-a.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:o}=ns(n)??{domain:null,isInteger:!1};let a="f32";if(r&&o)a=ce(r[0],r[1]);else if(n===30){const i=e==null?void 0:e[0];a=i?ce(i.min,i.max):$(s)?s:"s32"}else if(n===45&&$(s)){const i=e==null?void 0:e.map(({max:p})=>-p),u=e==null?void 0:e.map(({min:p})=>-p),l=i!=null&&i.length?Math.min(...i):null,m=u!=null&&u.length?Math.min(...u):null;a=l!=null&&m!=null?ce(l,m):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};c([h({json:{write:!0,name:"rasterFunction"}})],zt.prototype,"functionName",void 0),c([h({type:si,json:{write:!0,name:"rasterFunctionArguments"}})],zt.prototype,"functionArguments",void 0),c([h()],zt.prototype,"rasterArgumentNames",void 0),zt=c([F("esri.layers.support.rasterFunctions.LocalFunction")],zt);const ni=zt;var Ie;let bt=Ie=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Rs.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!(t!=null&&t.length))return null;let e=!1;const s=t.map(n=>{if(typeof n=="number")return e=!0,[n];if(typeof n=="string"){const r=n.trim().split(" ").filter(o=>o.trim()!=="").map(o=>Number(o));return e=e||r.length>0,r.length===0?null:r}return null});return e?s:null}clone(){var t,e;return new Ie({includedRanges:((t=this.includedRanges)==null?void 0:t.slice())??[],noDataValues:((e=this.noDataValues)==null?void 0:e.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([h({json:{write:!0}})],bt.prototype,"includedRanges",void 0),c([h({json:{write:!0}})],bt.prototype,"noDataValues",void 0),c([h()],bt.prototype,"normalizedNoDataValues",null),c([h({json:{write:!0}})],bt.prototype,"noDataInterpretation",void 0),bt=Ie=c([F("esri.layers.support.rasterFunctions.MaskFunctionArguments")],bt);const ri=bt;let At=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!(s!=null&&s.length)&&!(n!=null&&n.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let a=0;a<t.bandCount;a++){const i=an(e,s==null?void 0:s.slice(2*a,2*a+2),n==null?void 0:n[a]);if(i==null){r=null;break}r.push(i)}this.lookups=r;const o=n!=null&&n.every(a=>{var i;return(a==null?void 0:a.length)===((i=n[0])==null?void 0:i.length)});return{success:!0,supportsGPU:(!s||s.length<=2*st)&&(!n||o&&n[0].length<=st)}}_processPixels(t){var u;const e=(u=t.pixelBlocks)==null?void 0:u[0];if(e==null)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:a}=this.functionArguments,i=o===Rs.matchAll;return un(e,{includedRanges:r,noDataValues:a,outputPixelType:s,matchAll:i,lookups:n})}_getWebGLParameters(){var r;const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(st);s.fill(Lt),(r=e==null?void 0:e[0])!=null&&r.length&&s.set(e[0]);const n=new Float32Array(st);for(let o=0;o<n.length;o+=2)n[o]=(t==null?void 0:t[o])??-Lt,n[o+1]=(t==null?void 0:t[o+1])??Lt;return t!=null&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};c([h({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),c([h({type:ri,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),c([h()],At.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],At.prototype,"lookups",void 0),At=c([F("esri.layers.support.rasterFunctions.MaskFunction")],At);const oi=At;var Ce;let Dt=Ce=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Ce({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};c([h({json:{write:!0}})],Dt.prototype,"visibleBandID",void 0),c([h({json:{write:!0}})],Dt.prototype,"infraredBandID",void 0),c([h({json:{write:!0}})],Dt.prototype,"scientificOutput",void 0),Dt=Ce=c([F("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Dt);const ii=Dt;let Et=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const o=n.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[a,i,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:a,max:i,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return Vr(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:V(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};c([h({json:{write:!0,name:"rasterFunction"}})],Et.prototype,"functionName",void 0),c([h({type:ii,json:{write:!0,name:"rasterFunctionArguments"}})],Et.prototype,"functionArguments",void 0),c([h()],Et.prototype,"rasterArgumentNames",void 0),Et=c([F("esri.layers.support.rasterFunctions.NDVIFunction")],Et);const ai=Et;var ke;let rt=ke=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new ke({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([h({json:{write:!0}})],rt.prototype,"inputRanges",void 0),c([h({json:{write:!0}})],rt.prototype,"outputValues",void 0),c([h({json:{write:!0}})],rt.prototype,"noDataRanges",void 0),c([h({json:{write:!0}})],rt.prototype,"allowUnmatched",void 0),c([h({json:{write:!0}})],rt.prototype,"isLastInputRangeInclusive",void 0),rt=ke=c([F("esri.layers.support.rasterFunctions.RemapFunctionArguments")],rt);const ui=rt;let Tt=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,outputValues:r,inputRanges:o,noDataRanges:a,isLastInputRangeInclusive:i}=this.functionArguments;if(s!=null&&s.length&&(r!=null&&r.length))if(n){const u=Math.min.apply(null,[...r,s[0].min]),l=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:u,max:l}]}else{let u=r[0],l=u;for(let m=0;m<r.length;m++)u=u>r[m]?r[m]:u,l=l>r[m]?l:r[m];t.statistics=[{...s[0],min:u,max:l}]}return this.rasterInfo=t,this.lookup=n?null:ln({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:a,allowUnmatched:n,isLastInputRangeInclusive:i,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=st)&&(!a||a.length<=st)}}_processPixels(t){var l;const e=(l=t.pixelBlocks)==null?void 0:l[0];if(e==null)return null;const{lookup:s,outputPixelType:n}=this;if(s){const m=Je(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return m!=null&&s.mask&&(m.mask=cn(e.pixels[0],e.mask,s.mask,s.offset,"u8")),m}const{inputRanges:r,outputValues:o,noDataRanges:a,allowUnmatched:i,isLastInputRangeInclusive:u}=this.functionArguments;return pn(e,{inputRanges:r,outputValues:o,noDataRanges:a,outputPixelType:n,allowUnmatched:i,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*st),r=1e-5,o=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],i=a.length;for(let l=0;l<st;l++)n[3*l]=o[2*l]??Lt-1,n[3*l+1]=o[2*l+1]??Lt,n[3*l+2]=a[l]??0,l<i&&(l>0&&(n[3*l]-=r),(l<i-1||!s)&&(n[3*l+1]-=r));const u=new Float32Array(2*st);return u.fill(Lt),e!=null&&e.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:kt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([h({type:ui,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([h()],Tt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Tt.prototype,"lookup",void 0),Tt=c([F("esri.layers.support.rasterFunctions.RemapFunction")],Tt);const li=Tt;var _e;let Ut=_e=class extends Vs{readColorRamp(t){if(typeof t=="string"){const e=It.jsonValues.find(s=>s.toLowerCase()===t.toLowerCase());return e?Is(It.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new _e({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};c([h({json:{write:!0}})],Ut.prototype,"colorRamp",void 0),c([Ct("colorRamp")],Ut.prototype,"readColorRamp",null),c([h({type:[[Number]],json:{write:!0}})],Ut.prototype,"colormap",void 0),Ut=_e=c([F("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Ut);const ci=Ut;let ot=class extends G{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var i;const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:s}=this.functionArguments;if(!e&&!(s!=null&&s.length))return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=((i=n.spatialReference)==null?void 0:i.isGeographic)??!1,s!=null&&s.length||(s=pe(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:o}=Ss({colormap:s});if(!(r!=null&&r.length))return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=An(r);return this.lookup={indexedColormap:r,offset:o,hsvMap:a},{success:!0,supportsGPU:Cs(r)}}_processPixels(t){var a,i,u;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(!e||!this.lookup)return null;let s=(i=t.primaryPixelSizes)==null?void 0:i[0];if(s==null){const{extent:l}=t;s=l?{x:l.width/e.width,y:l.height/e.height}:{x:1,y:1}}const n=re(this.functionArguments,s,this.isGCS),r=ks(e,n),o=((u=this.sourceRasterInfos[0].statistics)==null?void 0:u[0])??{min:0,max:8e3};return Tn(r,e,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){var p;const t=re(this.functionArguments,{x:1,y:1},this.isGCS),e=_s(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,a=s==="scaled",{indexedColormap:i,offset:u}=this.lookup,l=(p=this.sourceRasterInfos[0].statistics)==null?void 0:p[0],m=$(this.outputPixelType);return{...e,indexedColormap:i,offset:u,zFactor:n,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:a?r:0,pixelSizePower:a?o:0,minValue:(l==null?void 0:l.min)??0,maxValue:(l==null?void 0:l.max)??8e3,isOutputRounded:m}}};c([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([h({type:ci,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([h()],ot.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ot.prototype,"isGCS",void 0),c([h({json:{write:!0}})],ot.prototype,"lookup",void 0),ot=c([F("esri.layers.support.rasterFunctions.ShadedReliefFunction")],ot);const pi=ot;var Be;const mi=new Z({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let it=Be=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Be({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([H(mi)],it.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],it.prototype,"zFactor",void 0),c([h({type:Number,json:{name:"psPower",write:!0}})],it.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{name:"psZFactor",write:!0}})],it.prototype,"pixelSizeFactor",void 0),c([h({type:Boolean,json:{write:!0}})],it.prototype,"removeEdgeEffect",void 0),it=Be=c([F("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],it);const hi=it;let Pt=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const e=(p=t.pixelBlocks)==null?void 0:p[0];if(e==null)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:a}=this,{extent:i,primaryPixelSizes:u}=t,l=u==null?void 0:u[0],m=l??(i?{x:i.width/e.width,y:i.height/e.height}:{x:1,y:1});return Pn(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:a,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:$(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),c([h({type:hi,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),c([h()],Pt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Pt.prototype,"isGCS",void 0),Pt=c([F("esri.layers.support.rasterFunctions.SlopeFunction")],Pt);const fi=Pt,bs=new Z({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function di(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:a,outBand:i}=t;if(s&&!a)return void i.set(n);const{statisticsType:u,kernelRows:l,kernelCols:m}=e,p=u==="stddev",f=r*o,x=new Float64Array(f),g=new Float64Array(f),y=new Uint32Array(f);for(let P=0;P<o;P++){const R=P*r;let k=0,I=0,C=0;for(let B=0;B<m;B++)a&&!a[R+B]||(k+=n[R+B],p&&(I+=n[R+B]**2),C++);x[R]=k,g[R]=I,y[R]=C;for(let B=1;B<=r-m;B++){const z=R+B-1,Q=z+m;a?(a[z]&&(C--,k-=n[z],p&&(I-=n[z]**2)),a[Q]&&(C++,k+=n[Q],p&&(I+=n[Q]**2))):(k-=n[z],k+=n[Q],p&&(I-=n[z]**2,I+=n[Q]**2)),x[R+B]=k,y[R+B]=C,p&&(g[R+B]=I)}}const d=new Float64Array(f),w=new Float64Array(f),v=new Uint32Array(f),b=l*r;for(let P=0;P<=r-m;P++){let R=0,k=0,I=0;for(let C=0;C<l;C++){const B=C*r+P;R+=x[B],I+=y[B],p&&(k+=g[B])}d[P]=R,w[P]=k,v[P]=I;for(let C=1;C<=o-l;C++){const B=(C-1)*r+P,z=B+b;R-=x[B],R+=x[z],I-=y[B],I+=y[z],p&&(k-=g[B],k+=g[z]),d[C*r+P]=R,w[C*r+P]=k,v[C*r+P]=I}}const T=Math.floor(l/2),N=Math.floor(m/2);for(let P=T;P<o-T;P++){const R=P*r;for(let k=N;k<r-N;k++){const I=(P-T)*r+k-N,C=v[I];if(C===0||s&&(!a||a[R+k]))continue;const B=d[I]/C,z=p?Math.sqrt((w[I]-d[I]*B)/C):B;i[R+k]=z,a&&(a[R+k]=255)}}}function gi(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:a,outBand:i}=t;if(s&&!a)return void i.set(n);const{kernelRows:u,kernelCols:l,statisticsType:m}=e,p=Math.floor(u/2),f=Math.floor(l/2),x=m==="min",g=i.slice(),y=new Uint32Array(r*o);for(let d=p;d<o-p;d++){const w=d*r;for(let v=f;v<r-f;v++){let b=x?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let N=0;N<u;N++)for(let P=0;P<l;P++){const R=w+v+(N-p)*r+P-f;a&&!a[R]||(b=x?Math.min(b,n[R]):Math.max(b,n[R]),T++)}a?(g[w+v]=T===0?0:b,y[w+v]=T):i[w+v]=T===0?0:b}}if(a)for(let d=p;d<o-p;d++){const w=d*r;for(let v=f;v<r-f;v++)if(y[w+v]){if(s&&a[w+v])continue;i[w+v]=g[w+v],a[w+v]=255}}}function yi(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:a,outBand:i}=t;if(s&&!a)return void i.set(n);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),p=Math.floor(l/2),f=i.slice(),x=new Uint32Array(r*o);for(let g=m;g<o-m;g++){const y=g*r;for(let d=p;d<r-p;d++){if(s&&(a!=null&&a[y+d]))continue;const w=[];for(let v=0;v<u;v++)for(let b=0;b<l;b++){const T=y+d+(v-m)*r+b-p;a&&!a[T]||w.push(n[T])}w.length&&(w.sort((v,b)=>v-b),a?(f[y+d]=w[Math.floor((w.length-1)/2)],x[y+d]=w.length):i[y+d]=w[Math.floor((w.length-1)/2)])}}if(a)for(let g=m;g<o-m;g++){const y=g*r;for(let d=p;d<r-p;d++)if(x[y+d]){if(s&&a[y+d])continue;i[y+d]=f[y+d],a[y+d]=255}}}function xi(t,e){const{fillNoDataOnly:s}=e,{band:n,width:r,height:o,mask:a,outBand:i}=t;if(s&&!a)return void i.set(n);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),p=Math.floor(l/2),f=e.statisticsType==="majority",x=u*l,g=i.slice(),y=new Uint32Array(r*o);for(let d=m;d<o-m;d++){const w=d*r;for(let v=p;v<r-p;v++){if(s&&(a!=null&&a[w+v]))continue;const b=new Map;for(let R=0;R<u;R++)for(let k=0;k<l;k++){const I=w+v+(R-m)*r+k-p;if(a&&!a[I])continue;const C=n[I];b.set(C,b.has(C)?b.get(C)+1:1)}if(b.size===0)continue;let T=0,N=0,P=f?0:x+1;for(const R of b.keys())N=b.get(R),f===N>P&&(P=N,T=R);a?(g[w+v]=T,y[w+v]=b.size):i[w+v]=T}}if(a)for(let d=m;d<o-m;d++){const w=d*r;for(let v=p;v<r-p;v++)if(y[w+v]){if(s&&a[w+v])continue;i[w+v]=g[w+v],a[w+v]=255}}}function wi(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:r,width:o,height:a,bandMasks:i,pixelType:u}=t,l=r.length,m=o*a,p=[],{kernelRows:f,kernelCols:x,statisticsType:g,mirrorEdges:y}=e;if(n&&!s)return t;const d=e.outputPixelType??u,w=[];for(let T=0;T<l;T++){const N=r[T],P=A.createEmptyBand(d,m);n&&P.set(N);const R=(i==null?void 0:i[T])??s,k=(R==null?void 0:R.slice())??null,I={band:N,width:o,height:a,mask:k,outBand:P};switch(g){case"min":case"max":gi(I,e);break;case"mean":case"stddev":di(I,e);break;case"median":yi(I,e);break;case"majority":case"minority":xi(I,e)}y&&!n&&Ke(P,o,a,f,x),p.push(P),k&&w.push(k)}let v=w[0]??s;w.length!==l&&(w.length=0),l>1&&(i!=null&&i.length)&&(v=A.combineBandMasks(i));const b=new A({pixelType:d,width:o,height:a,pixels:p,bandMasks:i&&w.length?w:null,mask:v});return b.updateStatistics(),b}var je;let Ft=je=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new je({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:J(this.raster)})}};c([h({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??(e==null?void 0:e.kernelRows)??3)}}})],Ft.prototype,"rows",void 0),c([h({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??(e==null?void 0:e.kernelCols)??3)}}})],Ft.prototype,"cols",void 0),c([h({json:{write:!0}})],Ft.prototype,"fillNoDataOnly",void 0),c([h({json:{read:{source:["statisticsType","type"],reader:(t,e)=>bs.fromJSON((e==null?void 0:e.statisticsType)??(e==null?void 0:e.type))??"min"},write:{target:"type"}}}),H(bs)],Ft.prototype,"statisticsType",void 0),Ft=je=c([F("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Ft);const vi=Ft;let Vt=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return n==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:o}=this.functionArguments;return wi(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:kt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Vt.prototype,"functionName",void 0),c([h({type:vi,json:{write:!0,name:"rasterFunctionArguments"}})],Vt.prototype,"functionArguments",void 0),c([h()],Vt.prototype,"rasterArgumentNames",void 0),Vt=c([F("esri.layers.support.rasterFunctions.StatisticsFunction")],Vt);const bi=Vt;var Me;let Nt=Me=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!(t!=null&&t.length))return null;const s=[];return t.forEach(n=>{const r={min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation};s.push(r)}),s}writeStatistics(t,e,s){if(!(t!=null&&t.length))return;const n=[];t.forEach(r=>{const o={...r,mean:r.avg,standardDeviation:r.stddev};delete o.avg,delete o.stddev,n.push(o)}),e[s]=n}clone(){return new Me({statistics:J(this.statistics),histograms:J(this.histograms)})}};c([h({json:{write:!0}})],Nt.prototype,"statistics",void 0),c([Ct("statistics")],Nt.prototype,"readStatistics",null),c([$t("statistics")],Nt.prototype,"writeStatistics",null),c([h({json:{write:!0}})],Nt.prototype,"histograms",void 0),Nt=Me=c([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Nt);const Ai=Nt;let at=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([h({type:Ai,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([h()],at.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],at.prototype,"indexedColormap",void 0),c([h()],at.prototype,"isNoopProcess",void 0),at=c([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],at);const Ti=at;var Oe;const Pi=new Z({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let L=Oe=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t!=null&&t.length&&(Array.isArray(t[0])||(t=t.map(n=>[n.min,n.max,n.avg,n.stddev])),e[s]=t)}clone(){return new Oe({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:J(this.statistics),gamma:J(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:J(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([h({type:Boolean,json:{write:!0}})],L.prototype,"computeGamma",void 0),c([h({type:Boolean,json:{name:"dra",write:!0}})],L.prototype,"dynamicRangeAdjustment",void 0),c([h({type:[Number],json:{write:!0}})],L.prototype,"gamma",void 0),c([h()],L.prototype,"histograms",void 0),c([h({type:Number,json:{write:!0}})],L.prototype,"maxPercent",void 0),c([h({type:Number,json:{write:!0}})],L.prototype,"minPercent",void 0),c([h({type:Number,json:{write:!0}})],L.prototype,"numberOfStandardDeviations",void 0),c([h({type:Number,json:{name:"max",write:!0}})],L.prototype,"outputMax",void 0),c([h({type:Number,json:{name:"min",write:!0}})],L.prototype,"outputMin",void 0),c([h({type:Number,json:{write:!0}})],L.prototype,"sigmoidStrengthLevel",void 0),c([h({json:{type:[[Number]],write:!0}})],L.prototype,"statistics",void 0),c([$t("statistics")],L.prototype,"writeStatistics",null),c([H(Pi)],L.prototype,"stretchType",void 0),c([h({type:Boolean,json:{write:!0}})],L.prototype,"useGamma",void 0),L=Oe=c([F("esri.layers.support.rasterFunctions.StretchFunctionArguments")],L);const Fi=L;let ut=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const l=le(s.toJSON(),{rasterInfo:t}),m=$(this.outputPixelType)?"round":"float";this.lookup=Fn({pixelType:e,...l,gamma:o?r:null,rounding:m}),this.cutOffs=l}else n||(this.cutOffs=le(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),this.outputPixelType==="u8"&&(a.keyProperties.DataType="processed");const{outputMin:i=0,outputMax:u=255}=this.functionArguments;a.statistics=[];for(let l=0;l<a.bandCount;l++)a.statistics[l]={min:i,max:u};return this.rasterInfo=a,{success:!0,supportsGPU:!n}}_processPixels(t){var a;const e=(a=t.pixelBlocks)==null?void 0:a[0];if(e==null)return e;const{lookup:s}=this;if(s)return Je(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||le(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return Nn(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&(s!=null&&s.length)?Rn(r,s):[1,1,1],{minCutOff:a,maxCutOff:i}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};a.length===1&&(a[1]=a[2]=a[0],i[1]=i[2]=i[0]);const u=i.map((f,x)=>(e-t)/(i[x]-a[x])),l=$(this.outputPixelType),m=n&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],p=n?[o[0],o[1]??o[0],o[2]??o[0]]:[1,1,1];return{bandCount:r,minOutput:t,maxOutput:e,minCutOff:a,maxCutOff:i,factor:u,useGamma:n,gamma:m,gammaCorrection:p,stretchType:this.functionArguments.stretchType,isOutputRounded:l,type:"stretch"}}};c([h({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([h({type:Fi,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([h()],ut.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ut.prototype,"lookup",void 0),c([h({json:{write:!0}})],ut.prototype,"cutOffs",void 0),ut=c([F("esri.layers.support.rasterFunctions.StretchFunction")],ut);const Ni=ut;var Ge;let ee=Ge=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Ge({attributeTableAsRecordSet:J(this.attributeTableAsRecordSet)})}};c([h({json:{write:!0}})],ee.prototype,"attributeTableAsRecordSet",void 0),ee=Ge=c([F("esri.layers.support.rasterFunctions.TableFunctionArguments")],ee);const Ri=ee;let Rt=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,s.dataType!=="thematic"&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),c([h({type:Ri,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),c([h()],Rt.prototype,"rasterArgumentNames",void 0),c([h()],Rt.prototype,"isNoopProcess",void 0),Rt=c([F("esri.layers.support.rasterFunctions.TableFunction")],Rt);const Si=Rt,j=new Map;function Ii(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster,s.raster2]).forEach(n=>{n&&typeof n!="number"&&(typeof n=="string"?n.startsWith("http")&&(e.includes(n)||e.push(n)):"rasterFunctionArguments"in n&&Ii(n,e))})}function Ci(t,e){if(e=e??{},"function"in(t=J(t))&&"arguments"in t&&t.arguments){const s=Ws(t,new Map,e);if(Ee(s),!s.renderingRule)throw new Wt("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return Ls(t=ze(t),e);throw new Wt("raster-function-helper","unsupported raster function json.")}function ki(t,e){return e[0]==="rasters"&&Array.isArray(t.rasters)?t.rasters:e.map(s=>t[s])}function As(t){return!!(t&&typeof t=="object"&&t.rasterFunction&&t.rasterFunctionArguments)}function ze(t){var r;const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const o in s){let a=s[o];const i=o.toLowerCase();if(i==="rasters"&&Array.isArray(a))n.rasters=a.map(u=>As(u)?ze(u):u);else switch(As(a)&&(a=ze(a)),i){case"dra":n.dra=a;break;case"pspower":n.psPower=a;break;case"pszfactor":n.psZFactor=a;break;case"bandids":n.bandIds=a;break;default:n[o[0].toLowerCase()+o.slice(1)]=a}}return e!=="Local"||(r=n.rasters)!=null&&r.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function Ls(t,e){var f,x;const{rasterFunction:s,rasterFunctionArguments:n}=t,r=(f=t.outputPixelType)==null?void 0:f.toLowerCase();if(s==null||!j.has(s))throw new Wt("raster-function-helper",`unsupported raster function: ${s}`);const o=j.get(s),a=(typeof o.ctor=="function"?o.ctor:o.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:i}=a,u=[],l=ki(n,i),m=i[0]==="rasters"||i.length>1,p=[];for(let g=0;g<l.length;g++){const y=l[g];let d;y==null||typeof y=="string"&&y.startsWith("$")?u.push(e==null?void 0:e.raster):typeof y=="string"?e[y]&&u.push(e[y]):typeof y!="number"&&"rasterFunction"in y&&(d=Ls(y,e),m||(a.functionArguments[i[g]]=d),u.push(d)),m&&p.push(d??y)}if(m&&(i[0]==="rasters"?a.functionArguments.rasters=p:i.forEach((g,y)=>{a.functionArguments[g]=p[y]})),e){a.sourceRasters=u;const g=(x=e.raster)==null?void 0:x.url;g&&(a.mainPrimaryRasterId=g)}return a}function $s(t,e){if(t&&e)for(const s in t){const n=t[s];n&&typeof n=="object"&&"type"in n&&(n.type==="RasterFunctionTemplate"?$s(n.arguments,e):n.type==="RasterFunctionVariable"&&e[n.name]!=null&&(n.value=e[n.name]))}}function De(t,e){var r;if(!t||typeof t!="object")return t;const{value:s}=t;if(!s||typeof s!="object")return t.isDataset?"$$":s;if(Array.isArray(s))return s.length===0?[]:s.map(o=>typeof o=="object"&&o.type==="RasterFunctionVariable"?De(o,e):o);if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&s.type!=="Scalar")return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Ts(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Ts)};break;case"ArgumentArray":if((r=s.elements)!=null&&r.length&&s.elements[0].type!=="RasterStatistics"){const o=[];for(let a=0;a<s.elements.length;a++){const i=s.elements[a],{type:u}=i;if(u)if(u==="RasterFunctionTemplate"){const{renderingRule:l}=Ws(i,e);o.push(l),i._object_id!=null&&e.set(i._object_id,l)}else{if(u!=="RasterFunctionVariable")throw new Wt("raster-function-helper","unsupported raster function json.");{const l=De(i,e);o.push(l),i._object_id!=null&&e.set(i._object_id,l)}}else o.push(i)}n=o}else n=s.elements}return s._object_id!=null&&e.set(s._object_id,n),n}function Ts(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r,g:o,b:a}=es({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,o,a,s.AlphaValue]}if(!Array.isArray(n)){const{r,g:o,b:a}=es({h:n.Hue,s:n.Saturation,v:n.Value});n=[r,o,a,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Ws(t,e,s){s&&$s(t,s);const n={renderingRule:{},templates:e};return Js(t,n),n}function Js(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:a}=t;if(!r||!o)return;a!=null&&n.set(a,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const i={};s.rasterFunctionArguments=i;for(const u in o){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=o[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?i[u]=De(l,n):(s.rasterFunctionArguments[u]={},Js(l,{renderingRule:s.rasterFunctionArguments[u],templates:n})),l._object_id!=null&&n.set(l._object_id,i[u])):i[u]=l}switch(i.DEM&&!i.Raster&&(i.Raster=i.DEM,delete i.DEM),s.rasterFunction){case"Stretch":_i(i);break;case"Colormap":Bi(i);break;case"Convolution":ji(i);break;case"Mask":Mi(i)}}function Ee(t){const{renderingRule:e,templates:s}=t;if(typeof e!="object"||!(e!=null&&e.rasterFunctionArguments)||!s.size)return;const{rasterFunctionArguments:n}=e;for(const r in n){const o=n[r],a=r==="_object_ref_id"?o:o&&typeof o=="object"&&"_object_ref_id"in o?o._object_ref_id:null;if(a==null)o&&typeof o=="object"&&(o.rasterFunctionArguments&&Ee({renderingRule:o,templates:s}),Array.isArray(o)&&o.forEach((i,u)=>{if(typeof i=="object")if(i._object_ref_id!=null){if(!s.has(i._object_ref_id))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const l=s.get(a);l&&typeof l=="object"?Object.assign(i,l):o[u]=l}else Ee({renderingRule:i,templates:s})}));else{if(!s.has(a))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const i=s.get(a);r!=="_object_ref_id"?n[r]=i:i&&typeof i=="object"&&Object.assign(n,i)}}}function _i(t){var e;(e=t.Statistics)!=null&&e.length&&typeof t.Statistics=="object"&&(t.Statistics=t.Statistics.map(s=>[s.min,s.max,s.mean,s.standardDeviation])),t.NumberOfStandardDeviation!=null&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Bi(t){var e,s;((s=(e=t.ColorRamp)==null?void 0:e.type)==null?void 0:s.toLowerCase())==="randomcolorramp"&&(delete t.ColorRamp,t.ColormapName="Random"),t.ColorSchemeType===0&&delete t.ColorRamp}function ji(t){t.ConvolutionType!=null&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Mi(t){var e;(e=t.NoDataValues)!=null&&e.length&&typeof t.NoDataValues[0]=="string"&&(t.NoDataValues=t.NoDataValues.filter(s=>s!=="").map(s=>Number(s)))}j.set("Arithmetic",{desc:"Arithmetic Function",ctor:kr,rasterArgumentNames:["rasters"]}),j.set("Aspect",{desc:"Aspect Function",ctor:Br,rasterArgumentNames:["raster"]}),j.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:io,rasterArgumentNames:["raster"]}),j.set("Colormap",{desc:"Colormap Function",ctor:wo,rasterArgumentNames:["raster"]}),j.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:bo,rasterArgumentNames:["raster"]}),j.set("CompositeBand",{desc:"CompositeBand Function",ctor:To,rasterArgumentNames:["rasters"]}),j.set("ComputeChange",{desc:"ComputeChange Function",ctor:Bo,rasterArgumentNames:["rasters"]}),j.set("Convolution",{desc:"Convolution Function",ctor:Vo,rasterArgumentNames:["raster"]}),j.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Mo,rasterArgumentNames:["raster"]}),j.set("ExtractBand",{desc:"ExtractBand Function",ctor:Jo,rasterArgumentNames:["raster"]}),j.set("Curvature",{desc:"Curvature Function",ctor:$o,rasterArgumentNames:["raster"]}),j.set("Hillshade",{desc:"Hillshade Function",ctor:ei,rasterArgumentNames:["raster"]}),j.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:pi,rasterArgumentNames:["raster"]}),j.set("Grayscale",{desc:"Grayscale Function",ctor:Zo,rasterArgumentNames:["raster"]}),j.set("Clip",{desc:"Clip Function",ctor:uo,rasterArgumentNames:["raster"]}),j.set("Local",{desc:"Local Function",ctor:ni,rasterArgumentNames:["rasters"]}),j.set("Mask",{desc:"Mask Function",ctor:oi,rasterArgumentNames:["raster"]}),j.set("NDVI",{desc:"NDVI Function",ctor:ai,rasterArgumentNames:["raster"]}),j.set("Remap",{desc:"Remap Function",ctor:li,rasterArgumentNames:["raster"]}),j.set("Slope",{desc:"Slope Function",ctor:fi,rasterArgumentNames:["raster"]}),j.set("Statistics",{desc:"Focal Statistics Function",ctor:bi,rasterArgumentNames:["raster"]}),j.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Ti,rasterArgumentNames:["raster"]}),j.set("Stretch",{desc:"Stretch Function",ctor:Ni,rasterArgumentNames:["raster"]}),j.set("Table",{desc:"Attribute Table Function",ctor:Si,rasterArgumentNames:["raster"]});let Kt=class extends We{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};c([h()],Kt.prototype,"affectsPixelSize",null),c([h({json:{write:!0}})],Kt.prototype,"spatialReference",void 0),Kt=c([F("esri.layers.support.rasterTransforms.BaseRasterTransform")],Kt);const Ye=Kt;var Ue;function Ve(t,e,s){const{x:n,y:r}=e;if(s<2)return{x:t[0]+n*t[2]+r*t[4],y:t[1]+n*t[3]+r*t[5]};if(s===2){const f=n*n,x=r*r,g=n*r;return{x:t[0]+n*t[2]+r*t[4]+f*t[6]+g*t[8]+x*t[10],y:t[1]+n*t[3]+r*t[5]+f*t[7]+g*t[9]+x*t[11]}}const o=n*n,a=r*r,i=n*r,u=o*n,l=o*r,m=n*a,p=r*a;return{x:t[0]+n*t[2]+r*t[4]+o*t[6]+i*t[8]+a*t[10]+u*t[12]+l*t[14]+m*t[16]+p*t[18],y:t[1]+n*t[3]+r*t[5]+o*t[7]+i*t[9]+a*t[11]+u*t[13]+l*t[15]+m*t[17]+p*t[19]}}function Ps(t,e,s){const{xmin:n,ymin:r,xmax:o,ymax:a,spatialReference:i}=e;let u=[];if(s<2)u.push({x:n,y:a}),u.push({x:o,y:a}),u.push({x:n,y:r}),u.push({x:o,y:r});else{let p=10;for(let f=0;f<p;f++)u.push({x:n,y:r+(a-r)*f/(p-1)}),u.push({x:o,y:r+(a-r)*f/(p-1)});p=8;for(let f=1;f<=p;f++)u.push({x:n+(o-n)*f/p,y:r}),u.push({x:n+(o-n)*f/p,y:a})}u=u.map(p=>Ve(t,p,s));const l=u.map(p=>p.x),m=u.map(p=>p.y);return new St({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:i})}function Oi(t){const[e,s,n,r,o,a]=t,i=n*a-o*r,u=o*r-n*a;return[(o*s-e*a)/i,(n*s-e*r)/u,a/i,r/u,-o/i,-n/u]}let q=Ue=class extends Ye{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:s,coeffY:n}=e;if(!(s!=null&&s.length)||!(n!=null&&n.length)||s.length!==n.length)return null;const r=[];for(let o=0;o<s.length;o++)r.push(s[o]),r.push(n[o]);return r}writeForwardCoefficients(t,e,s){const n=[],r=[];for(let o=0;o<(t==null?void 0:t.length);o++)o%2==0?n.push(t[o]):r.push(t[o]);e.coeffX=n,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=Oi(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:s,inverseCoeffY:n}=e;if(!(s!=null&&s.length)||!(n!=null&&n.length)||s.length!==n.length)return null;const r=[];for(let o=0;o<s.length;o++)r.push(s[o]),r.push(n[o]);return r}writeInverseCoefficients(t,e,s){const n=[],r=[];for(let o=0;o<(t==null?void 0:t.length);o++)o%2==0?n.push(t[o]):r.push(t[o]);e.inverseCoeffX=n,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type==="point"){const e=Ve(this.forwardCoefficients,t,this.polynomialOrder);return new ne({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Ps(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type==="point"){const e=Ve(this.inverseCoefficients,t,this.polynomialOrder);return new ne({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Ps(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Ue({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([h({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),c([h()],q.prototype,"forwardCoefficients",void 0),c([Ct("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),c([$t("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),c([h({json:{write:!0}})],q.prototype,"inverseCoefficients",null),c([Ct("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),c([$t("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),c([h()],q.prototype,"affectsPixelSize",null),c([H({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Ue=c([F("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const Gi=q;var Le;let Yt=Le=class extends Ye{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Le({tolerance:this.tolerance})}};c([H({GCSShiftXform:"gcs-shift"})],Yt.prototype,"type",void 0),c([h()],Yt.prototype,"tolerance",void 0),Yt=Le=c([F("esri.layers.support.rasterTransforms.GCSShiftTransform")],Yt);const zi=Yt;var $e;let se=$e=class extends Ye{constructor(){super(...arguments),this.type="identity"}clone(){return new $e}};c([H({IdentityXform:"identity"})],se.prototype,"type",void 0),se=$e=c([F("esri.layers.support.rasterTransforms.IdentityTransform")],se);const Di=se,Ei={GCSShiftXform:zi,IdentityXform:Di,PolynomialXform:Gi};function Ui(t){if(!(t!=null&&t.type))return null;const e=Ei[t==null?void 0:t.type];if(e){const s=new e;return s.read(t),s}return null}class Vi{convertVectorFieldData(e){const s=A.fromJSON(e.pixelBlock),n=Ys(s,e.type);return Promise.resolve(n!=null?n.toJSON():null)}computeStatisticsHistograms(e){const s=A.fromJSON(e.pixelBlock),n=dn(s);return Promise.resolve(n)}async decode(e){const s=await gn(e.data,e.options);return s&&s.toJSON()}symbolize(e){e.pixelBlock=A.fromJSON(e.pixelBlock),e.extent=e.extent?St.fromJSON(e.extent):null;const s=this.symbolizer.symbolize(e);return Promise.resolve(s!=null?s.toJSON():null)}async updateSymbolizer(e){var s;this.symbolizer=yn.fromJSON(e.symbolizerJSON),e.histograms&&((s=this.symbolizer)==null?void 0:s.rendererJSON.type)==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=Ci(e.rasterFunctionJSON)}async process(e){var n;const s=this.rasterFunction.process({extent:St.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map(r=>r!=null?A.fromJSON(r):null),primaryPixelSizes:(n=e.primaryPixelSizes)==null?void 0:n.map(r=>r!=null?ne.fromJSON(r):null),primaryRasterIds:e.primaryRasterIds});return s!=null?s.toJSON():null}stretch(e){const s=this.symbolizer.simpleStretch(A.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(s==null?void 0:s.toJSON())}estimateStatisticsHistograms(e){const s=xn(A.fromJSON(e.srcPixelBlock));return Promise.resolve(s)}split(e){const s=Zs(A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,e.useBilinear===!1);return s&&s.forEach((n,r)=>{s.set(r,n==null?void 0:n.toJSON())}),Promise.resolve(s)}clipTile(e){const s=A.fromJSON(e.pixelBlock),n=Qs({...e,pixelBlock:s});return Promise.resolve(n==null?void 0:n.toJSON())}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map(a=>a?new A(a):null),n=tn(s,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let r,o=n;return e.coefs&&(o=en(n,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(r=sn(e.destDimension,e.gcsGrid),o=nn(o,e.isUV?"vector-uv":"vector-magdir",r)),{pixelBlock:o==null?void 0:o.toJSON(),localNorthDirections:r}}async createFlowMesh(e,s){const n={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:r,indexData:o}=await rn(e.meshType,e.simulationSettings,n,s.signal);return{result:{vertexBuffer:r.buffer,indexBuffer:o.buffer},transferList:[r.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const s=St.fromJSON(e.projectedExtent),n=St.fromJSON(e.srcBufferExtent);let r=null;e.datumTransformationSteps&&(r=new Ks({steps:e.datumTransformationSteps})),(e.includeGCSGrid||In(s.spatialReference,n.spatialReference,r))&&await Cn();const o=e.rasterTransform?Ui(e.rasterTransform):null;return kn({...e,projectedExtent:s,srcBufferExtent:n,datumTransformation:r,rasterTransform:o})}}const ra=Object.freeze(Object.defineProperty({__proto__:null,default:Vi},Symbol.toStringTag,{value:"Module"}));export{ra as R,Ci as T,zi as c,na as h,En as l,Ii as w,Gi as y};
