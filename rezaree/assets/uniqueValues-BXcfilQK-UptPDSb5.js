const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineAsync-CopjVLIi-C9CV__3z.js","./workers-0oosFQiO-DL4UeXRh.js","./index-Bq7Udiuc.js","./index-CpSsk29H.css","./Queue-B8H6jIv7-qe6xwAvV.js","./intl-DLmy-Li5-BJ0oorh2.js"])))=>i.map(i=>d[i]);
import{v as F,I as v,t as $,ca as mt,Y as je,a3 as ct,c as d,dM as Se,mi as Ue,a8 as pt,c7 as N,_ as dt,am as yt,bL as ft,H as V,mj as D,X as ht,c0 as Ze,ao as qe,b as gt,dK as wt,f2 as Ft,b$ as St,it as vt,cQ as xt,is as Vt}from"./index-Bq7Udiuc.js";import{L as ue,a as me,j as We,t as q,H as Le,f as ce,g as He,W as ke,B as qt,h as Lt,i as zt,l as Tt,m as ye,A as _t,n as Et,T as ge}from"./utils-BrRx2KpZ-C8D81nWn.js";import{M as B,F as M,b as P,v as Ke,E as R,N as bt}from"./utils-BG7WTOnW-9gzLT9Ow.js";import{U as Ct}from"./workers-0oosFQiO-DL4UeXRh.js";import{fromJSON as Nt}from"./jsonUtils-DQiDyVGY-DctsIhC4.js";import{y as Mt}from"./utils-DuaeuwP5-BCZke6dZ.js";import{d as $t}from"./executeQuery-D_1SCOAw-BoxgOJ29.js";import{a as It,m as G,b as Ot}from"./Query-CxQYWcUQ-BxnklKE9.js";import{C as At}from"./quantizationUtils-Cndke4AR-9I7cuH7c.js";import{i as ze}from"./fieldType-VTpxE-EM-CQBTaE1u.js";import{summaryStatistics as J,uniqueValues as Te,histogram as pe,classBreaks as _e,heatmapStatistics as kt}from"./statsWorker-CzEaGD0z-DBuBkRwq.js";import Qt from"./AttributeBinsQuery-BvLa1vu8-wUzGa-Ta.js";import{A as Bt,U as Pt,M as Rt,N as Dt}from"./FixedIntervalBinParameters-aoOPIkh7-BoOrNXVI.js";import{y as Gt,p as Jt,a as jt}from"./Field-Cj6Pz3TI-eyhQxCek.js";import{f as Ut}from"./MapView-BcnxJC0k-DVvIcMYy.js";import{O as Xe}from"./FeatureSet-Dxf4LeOj-DBU8lR31.js";import"./TimeExtent-gZaEUVeW-DRteFcxj.js";import"./heatmapUtils--OU2Fakh-Dy-oUqZm.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./ClassBreaksDefinition-B_vYk3bu-CwIDp4TN.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-Vwe5THNj.js";import"./intl-DLmy-Li5-BJ0oorh2.js";import"./timeZoneUtils-z3WjfjXQ-D8ButgDy.js";import"./Queue-B8H6jIv7-qe6xwAvV.js";import"./typeUtils-I5iG5ZKA-CAwocxmW.js";import"./ClassBreaksRenderer-D97YzbWp-YFeLPxgr.js";import"./commonProperties-BLIn8DYU-BmgVPi3C.js";import"./colorRamps-KMmVdCPJ-BwNdaBg1.js";import"./ColorStop-DoHCvOqO-CEyiXG1r.js";import"./visualVariableUtils-BO-_wo28-CUvW41jT.js";import"./lengthUtils-wU9RRIqK-CiirY6SZ.js";import"./RendererLegendOptions-f5mIImtQ-D3BEA2Cj.js";import"./LRUCache-BLmkvs7b-uVsbnRKB.js";import"./MemCache-BCippCv6-DfSqYNgC.js";import"./Version-BTMwSXf1-D7l5O5G6.js";import"./FieldsIndex-Y7EBAYp0-Per2Bp66.js";import"./utils-BYqzY6_X-DW727sJo.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./SimpleRenderer-ADQlYl8U-BQc0Jp4E.js";import"./UniqueValueRenderer-BmoLL_Ee-BWFaMPti.js";import"./diffUtils-BSe9IE26-BhR63VTy.js";import"./styleUtils-DxAOZq5S-C2wmVL3t.js";import"./executeQueryJSON-BK4r1MU--MrIAc0d7.js";import"./query-nJmB7Ppn-B4Tt74Kb.js";import"./normalizeUtils-b-vZURob-BWWICmXN.js";import"./utils-Jw-4AGsF-kT105Oxg.js";import"./pbfQueryUtils-1j64fqcx-DcjL6WL1.js";import"./pbf-Ijhb7ANA-BE9XIrxZ.js";import"./memoryEstimations-iHVpvWPf-0mmuGaCe.js";import"./OptimizedGeometry-1qDYm3YK-HgaplYA1.js";import"./OptimizedFeatureSet-D6mgsKNr-DjQ8QZl2.js";import"./queryZScale-DBCLQqDI-Cz1TijdF.js";import"./projection-m8vi7Cxv-dX7rRAaA.js";import"./queryUtils-OXllLZed-B72Nfqqt.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-D2zdT9Lj.js";import"./globalCss-CFN4F315--rlB8CLU.js";import"./signal-DxzURL18-BnRtasZH.js";import"./CollectionFlattener-9hYRBLDX-BMwZDhtZ.js";import"./TileInfo-owTCOSRx-DkIrly-7.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-C3Iu9qC0.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-BAPcSCw2.js";import"./Map-DbZVFU-I-Dugbn44K.js";import"./Basemap-DxWxjcEH-nx10SZQJ.js";import"./loadAll-BIhJ1RSe-tOcvBpmX.js";import"./PortalItem-CJetnHeq-DU1PthkB.js";import"./Layer-B8q-l4yV-CyOgIiOx.js";import"./GraphicsCollection-rAFZo1AJ-szyFNWBC.js";import"./HeightModelInfo-BkDck4B0-DycQw7xi.js";import"./ReactiveMap-BaMcQuG3-Cwip2rVI.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-eQO7rSsI.js";import"./a11yUtils-C2ydunC--CZqbGAH6.js";import"./heightModelInfoUtils-CI93rfC7-LP7lxD34.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-xeuNMMHU.js";import"./vec32-BuqRmYBM-Ue24KLLT.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-DIxKZG6P.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-DAHtIx2W.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-BOqWpaeO.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-CSDgc4WI.js";function Zt(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let ae=class Z{constructor(){this.connection=null}async open(t){this.connection=await Ct("statsWorker",{strategy:"distributed",signal:t})}destroy(){var t;(t=this.connection)==null||t.close()}static getInstance(){return Z.instance||(Z.instance=new Z),Z.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function Wt(e,t,a,i){const r=Mt(e),{source:s,checkValueRange:o}=t,{classificationDefinition:n}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=(n==null?void 0:n.type)==="class-breaks-definition"?n.classificationField:n==null?void 0:n.attributeField,s){const y={source:s==null?void 0:s.toJSON()};l.layer=JSON.stringify(y)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let m={query:l};i&&(m={...i,...m});const c={url:r.path,field:u,checkValueRange:o},p=r.path+"/generateRenderer";return gt(p,m).then(y=>Ht(c,y))}function Ht(e,t){const{field:a,checkValueRange:i,url:r}=e,s=t==null?void 0:t.data;if(!s)return;if(!i){const u=Qe(s);return Promise.resolve(u)}const o=new G({statisticType:"min",onStatisticField:a}),n=new G({statisticType:"max",onStatisticField:a}),l=new Ot({outStatistics:[o,n]});return $t(r,l).then(u=>{const m=u.features[0].attributes;let c=null,p=null;for(const y in m)y.toLowerCase().indexOf("min")===0?c=m[y]:p=m[y];return Qe(s,c,p)})}function Qe(e,t,a){if(e.type==="classBreaks"){const r=Nt(e);return{classBreaks:r.classBreakInfos.map((s,o)=>(o===0&&t!=null&&(s.minValue=t),o===r.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:(i==null?void 0:i.map((r,s)=>(s===0&&t!=null&&(r.value=t),s===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label})))??[]}}let W=class extends je{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};F([v({json:{name:"classificationDef",write:!0}})],W.prototype,"classificationDefinition",void 0),F([v({type:String,json:{write:!0}})],W.prototype,"where",void 0),W=F([$("esri.rest.support.GenerateRendererParameters")],W);const ve=W;let I=class extends je{constructor(e){super(e),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const e=[];return this.attributeField&&e.push(this.attributeField),this.attributeField2&&e.push(this.attributeField2),this.attributeField3&&e.push(this.attributeField3),e}};F([mt({uniqueValueDef:"unique-value-definition"})],I.prototype,"type",void 0),F([v()],I.prototype,"attributeField",void 0),F([v()],I.prototype,"attributeField2",void 0),F([v()],I.prototype,"attributeField3",void 0),F([v({json:{write:!0}})],I.prototype,"fieldDelimiter",void 0),F([v({json:{write:!0}})],I.prototype,"uniqueValueFields",null),I=F([$("esri.rest.support.UniqueValueDefinition")],I);const Kt=I,Ye="no_dominant_category";function Xt(e){return{expression:Yt(e,{returnFieldName:!0,defaultValue:`'${Ye}'`})}}function Yt(e,t){const{returnFieldName:a,defaultValue:i,layer:r}=t,s=[];if(a&&i){const o=e.map(n=>`${n} <= 0`).join(" AND ");s.push(`WHEN ${o} THEN ${i}`)}for(const o of e){const n=e.reduce((m,c)=>(o!==c&&m.push(`${o} > ${c}`),m),[]).join(" AND "),l=r&&Ke(r,o),u=a&&`'${o}'`?`'${o}'`:l?R(o):o;s.push(`WHEN ${n} THEN ${u}`)}return`CASE ${s.join(" ")} ELSE ${i||"0"} END`}function ea(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function ta(e,t=!1){const a=e.map(i=>`"${i}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function Ee(e){const t=ta(e);return`
  ${ea(e)}
  ${t}
  return maxValueField;
  `}let E=class extends ct{constructor(e){super(e),this.adapterName="layer-adapter"}};F([v({readOnly:!0})],E.prototype,"adapterName",void 0),F([v({constructOnly:!0})],E.prototype,"layer",void 0),F([v()],E.prototype,"geometryType",void 0),F([v()],E.prototype,"objectIdField",void 0),F([v()],E.prototype,"supportsSQLExpression",void 0),F([v()],E.prototype,"hasQueryEngine",void 0),F([v()],E.prototype,"minScale",void 0),F([v()],E.prototype,"maxScale",void 0),F([v()],E.prototype,"fullExtent",void 0),E=F([$("esri.smartMapping.support.adapters.LayerAdapter")],E);const be=E,aa=/_value$/i,ia=Math.LOG10E,ra={SECOND:1e3,MINUTE:6e4,HOUR:36e5},ee=10;function te(e){return e.map(t=>t.toJSON())}function Be(e,t){var n;const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,s=(r==null?void 0:r.type)==="binning",o=r!=null&&"fields"in r?(n=r.fields)==null?void 0:n.map(l=>{var u;return(u=l.name)==null?void 0:u.toLowerCase()}).filter(Boolean):[];if(!s||!t)return a;for(const l of t)o.includes(l.toLowerCase())||a.push(l);return a}function de(e,t,a){var r;const i=[];if(t)for(const s of t){const o=e.getField(s);o&&a&&"availableFields"in a&&!((r=a.availableFields)!=null&&r.includes(o.name))&&i.push(o.name)}return i}function Ce(e,t){var s;const a=e&&e.features;if((a==null?void 0:a.length)===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=(s=a==null?void 0:a[0])==null?void 0:s.attributes,r={};for(const o in i)r[o.replace(aa,"").toLowerCase()]=i[o];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(o=>{r[o]!=null&&(r[o]=Math.ceil(r[o]))}),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function sa(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach(o=>{t.push([o.minValue,o.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:j(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function j(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:s}=e,o=Ke(s,t);let n=t;return a==="percent-of-total"?n=`((${o?R(t):t} / ${r}) * 100)`:a==="log"?n=`(log(${t}) * ${ia})`:a==="field"?n=`(${o?R(t):t} / ${i})`:a==="natural-log"?n=`(log(${o?R(t):t}))`:a==="square-root"&&(n=`(power(${o?R(t):t}, 0.5))`),n}function et(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function H(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function tt(e,t,a,i,r){const s={},o="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,m=et(u,o),c=H(u,o);m!=null&&c!=null&&m!==0&&(s[m]=c)});const n=[];return Le(t,a,i).forEach((l,u)=>{const m=(u+1).toString();n.push({minValue:l[0],maxValue:l[1],count:s.hasOwnProperty(m)?s[m]:0})}),{bins:n,minValue:t,maxValue:a,normalizationTotal:r}}async function Ne(e,t){const a=e&&e.features,{field:i,field2:r,field3:s,fieldDelimiter:o,layer:n,view:l,signal:u,labels:m}=t,c=`countOF${(!i||!r)&&i||"Expr"}`,p={};let y=!1;for(const h of a){const g=h.attributes,S=H(g,c);let w=i?H(g,i):et(g,c),x=r?H(g,r):null,z=s?H(g,s):null;w===null&&S===0&&(y=!0),(w==null||typeof w=="string"&&w.trim()==="")&&(w=null),r&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(z==null||typeof z=="string"&&z.trim()==="")&&(z=null);let L=w;r&&(L=`${ge(L)}${o}${ge(x)}`,s&&(L=`${L}${o}${ge(z)}`)),p[L]==null?p[L]={count:S,data:L}:p[L].count=p[L].count+S}if(i&&y){const h=i+" is NULL";try{const g=await n.queryFeatureCount({whereClause:h,view:l,signal:u});return p.null.count=p.null.count+g,we(p,m)}catch{return V(u),we(p,m)}}return we(p,m)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),o=s.map(n=>new Jt({code:n.value}));return new jt({codedValues:o})}async function fe(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const o=a?t.getField(a):null,n=o?t.getFieldDomain(o.name):null;return n?[n]:[]}const s=[];return a&&(s.push(Fe(a,e,t)),i&&(s.push(Fe(i,e,t)),r&&s.push(Fe(r,e,t)))),Promise.all(s)}function na(e,t){return bt(e,new Date(0),t,"milliseconds").sqlExpression}function oa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ra[t]}`}function la(e){return e?R(["HOUR","MINUTE","SECOND"].map(t=>`(${oa(e,t)})`).join(" + ")):null}function b(e){var t;return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:(t=e.spatialReference)==null?void 0:t.toJSON()}}function Me(e,t){const a=new Set(e.map(r=>r.value)),i=t.filter(r=>!a.has(r));for(const r of i)e.push({value:r,count:0});e.sort((r,s)=>t.indexOf(r.value)-t.indexOf(s.value));for(const r of e)r.value===Ye&&(r.value=null);return{predominantCategoryInfos:e}}function Pe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const i=ua(a,e.fieldsIndex);return i?new Gt({type:i,name:a.name,alias:a.alias}):null}).filter(wt)}function ua(e,t){var a,i;switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?((a=t.get(e.onStatisticField))==null?void 0:a.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?((i=t.get(e.onStatisticField))==null?void 0:i.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function at(e,t){return M(t)?na(e,t==null?void 0:t.name):N(t)?la(t==null?void 0:t.name):null}function $e(e,t,a){const{field:i,normalizationType:r,normalizationField:s,normalizationTotal:o,minValue:n,maxValue:l,filter:u}=t,m=e.supportsSQLExpression?at(e,a)||t.sqlExpression:null,c=j({field:i,normalizationType:r,normalizationField:s,normalizationTotal:o,layer:e}),p=m||c,y=p?ce(p,n,l):null,h=ye({field:i,normalizationField:s,normalizationType:r}),g=q(t.sqlWhere,h),S=q(g,y),w=_t({normalizationField:s,normalizationType:r,sqlExpression:m,supportsSQLExpression:e.supportsSQLExpression,minValue:n,maxValue:l}),x=Ft(e.getField(i??void 0)),{include:z,exclude:L}=t.outStatisticTypes||{},O=Et.filter(_=>(!z||z.includes(_))&&(!L||!L.includes(_))&&(_==="nullcount"?w:!x||_==="count")),A=e.createQuery();return A.where=q(A.where,S),A.sqlFormat=m?"standard":null,A.outStatistics=O.map(_=>{const k=new G;let Q=null,U=null,Ae=`${_}_value`;if(_==="variance")Q="var",U=p;else if(_==="nullcount"){const he=e.objectIdField;Q="count",U=he&&e.getField(he)?he:"1",Ae="totalcount_value"}else _==="median"?(Q="percentile-continuous",U=p,k.statisticParameters={value:.5}):(Q=_,U=p);return k.statisticType=Q,k.onStatisticField=U,k.outStatisticFieldName=Ae,k}),C(A,u),A}function C(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function it(e,t){const{field:a,field2:i,field3:r,sqlExpression:s}=t,o=!(!a||!i),n=e.createQuery();return n.where=q(n.where,t.sqlWhere),n.sqlFormat=s?"standard":null,n.outStatistics=[ma(o?null:a,o?"1":s)].filter(Boolean),n.groupByFieldsForStatistics=[a||s,i,r].filter(Boolean),C(n,t.filter),n}function ma(e,t){const a="countOF"+(e||"Expr"),i=new G;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function re(e,t,a,i=ee,r,s,o){const{min:n,max:l,normTotal:u,excludeZerosExpr:m}=t,c=t.intervals||Le(n,l,i),p=t.sqlExpr||a;return ca(e,c,p,m,r,s,o).then(y=>({bins:y.map((h,g)=>({minValue:c[g][0],maxValue:c[g][1],count:h.status==="fulfilled"?h.value:0})),minValue:n,maxValue:l,normalizationTotal:u}))}function ca(e,t,a,i,r,s,o){const n=[],l=t.length;for(let u=0;u<l;u++){const m=q(i,q(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));n.push(m)}return Promise.allSettled(n.map(u=>e.queryFeatureCount({whereClause:u,view:r,filter:s,signal:o})))}const rt="countOFExpr",pa="lowerBoundary",da="upperBoundary";function st(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:s,normalizationType:o,normalizationField:n}=e,l=s?t.getField(s):null,u=M(l)||N(l);return{sqlExpression:u?at(t,l):j({field:s,normalizationType:o,normalizationField:n,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||ye({field:s,normalizationType:o,normalizationField:n}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function xe(e,t,a){const{field:i,normalizationType:r,normalizationField:s,signal:o}=e,n=ye({field:i,normalizationType:r,normalizationField:s}),l=new ve({classificationDefinition:He({field:i,normalizationType:r,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||ee}),where:q(n,a)});return t.generateRenderer(l,o).then(u=>{const{normalizationTotal:m,classBreaks:c}=u;return sa({field:i,normalizationType:r,normalizationField:s,normalizationTotal:m,classBreaks:c,where:n,layer:t})})}async function ya(e,t,a,i,r){const{field:s,sqlExpression:o,normalizationField:n,classificationMethod:l,normalizationType:u}=e,m=s?t.getField(s):null,c=N(m),p=Vt(m)||c,y=e.numBins||ee;if(p){if(u||l)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const h=(i-a)/y/1e3,g=h/86400;return new Bt({field:s,expression:o,interval:{unit:c?"seconds":"days",value:Math.ceil(c?h:g)},start:a,end:i})}if(l==="defined-interval")return new Pt({field:s,expression:o,normalizationField:n,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/y),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(l==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const h=j({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,layer:t}),g=e.minValue!==null&&e.maxValue!==null?ce(h,e.minValue,e.maxValue):void 0,S=await xe(e,t,g);if(!S.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const w=[a,...S.intervals.map(x=>x[1])];return new Rt({field:u?null:s,expression:u?h:o,boundaries:w})}return new Dt({field:s,normalizationField:n,normalizationTotal:r,normalizationType:u,expression:o,numBins:y,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function nt(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(r=>({min:r.min,max:r.max}))}async function ot(e,t,a,i){const{field:r,minValue:s,maxValue:o,filter:n,view:l}=e,u=r?t.getField(r):null,m=St(u)||vt(u),c=st(e,t,a),{min:p,max:y}=await nt(c,t,s,o);if(p==null||y==null)return{query:null,min:p,max:y};const h=new G({statisticType:"count",outStatisticFieldName:rt,onStatisticField:"1"}),g=q(i,c.sqlWhere),S="lowerBoundary",w="upperBoundary",x=new Qt({binParameters:await ya(e,t,p,y,a),outStatistics:[h],binOrder:e.sortOrder,where:g,lowerBoundaryAlias:S,upperBoundaryAlias:w,outTimeZone:l!=null&&l.timeZone&&m?xt(l.timeZone):null});return C(x,n),{query:x,min:p,max:y}}function Re(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function lt(e,t,a){const i=N(t);return{...a,bins:e.features.map(r=>({minValue:Re(r.attributes[pa],i),maxValue:Re(r.attributes[da],i),count:r.attributes[rt]}))}}function De(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:s,graphics:o,fieldInfos:n}=t,l={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(s||o)&&(l.viewInfoParams=b(r),l.timeZone=r.timeZone,l.fieldInfos=n),l}const fa=5;let ie=null,K=class extends be{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=Se(()=>!e.updating,t.signal);await Ue(a,5e3,t).catch(i=>{throw pt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i})}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,s=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const n=await r.queryFeatures(t);return s?te(n.features):n.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:n}=await e.queryFeaturesJSON(t,{signal:a});return n}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(t,{signal:a});return s?te(o.features):o.features}_fetchFeaturesForStats(e,t){return B({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=$e(this,e,t),s=await this._fetchFeatureSetFromMemory(r,a,i),o=Ce(s,M(t)||N(t));return ue(o,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:o}=t,n={include:["sum"]},l=(!i&&!r&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(o,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:n},i):await J({attribute:{field:e,outStatisticTypes:n},features:r??[]})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:o}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(l||u)&&(n.fieldType=t!=null&&t.type?ze.toJSON(t.type):null,n.viewInfoParams=b(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:m,query:c},o)),!l&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(c,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):J({attribute:n,features:u})}async _getFilteredFeatures(e,t){let a=[];if((t==null?void 0:t.spatialRelationship)==="intersects"){const{intersect:i}=await dt(()=>import("./geometryEngineAsync-CopjVLIi-C9CV__3z.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url),r=t.geometry!=null?t.geometry:null;for(const s of e){const o=s.geometry!=null?s.geometry:null;o&&r&&await i(o,r)&&a.push(s)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:o,normalizationField:n,valueExpression:l,layerViewFunc:u,signal:m}=e;let c=e.returnGeometry;if(c==null&&l){if(!ie){const{arcadeUtils:x}=await yt();ie=x}const w=ie.hasGeometryOperations(l);w&&await ie.enableGeometryOperations(),c=w}let p=null,y=null,h=null,g=null,S=null;if(i)try{const w=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;p=await i.whenLayerView(w),y=u!=null&&u in p&&typeof p[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(p);const w=await B({field:r,field2:s,field3:o,normalizationField:n,valueExpression:l});de(this,w,p).length?y=!1:(h=this.layer.createQuery(),h.outFields=w,h.returnGeometry=!1,C(h,a)),p.suspended&&(y=!1)}catch{y=!1}return y||(g=await this._fetchFeaturesForStats({field:r,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:c,filter:a,view:i,signal:m},"json"),S=(await B({valueExpression:l})).map(w=>{var x;return(x=this.getField(w))==null?void 0:x.toJSON()}).filter(Boolean)),{layerView:p,query:h,featuresJSON:g,fieldInfos:S}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=it(this,e),s=await this._fetchFeatureSetFromMemory(r,a,i),o=await Ne(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:P,view:e.view,signal:e.signal});return me(o,t,e.returnAllCodedValues,P)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:P,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||l)&&(p.viewInfoParams=b(a),p.timeZone=a.timeZone,p.fieldInfos=c),!n&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,p,{signal:o}):n?this.workerClient.uniqueValues(p,n):Te({attribute:p,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:o,layerView:n,query:l}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!n||!("queryAttributeBins"in n)||s||o){const h=De(e,r,u);return s?this.workerClient.histogram(h,s):pe({attribute:h,features:o})}const{query:m,min:c,max:p}=await ot(e,this,u,l==null?void 0:l.where);if(!m)return{bins:[],minValue:c,maxValue:p,normalizationTotal:u};const y=await n.queryAttributeBins(m,{signal:i});return lt(y,t?this.getField(t):null,{minValue:c,maxValue:p,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:s,layerView:o,query:n}=i,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=De(e,i,l);return!r&&!s&&o&&"queryHistogram"in o?o.queryHistogram(n,u,{signal:a}):r?this.workerClient.histogram(u,r):pe({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||fa,r=[],s=(a-t)/i;for(let l=0;l<i;l++){const u=t+l*s;r.push({minValue:u,maxValue:u+s})}r[i-1].maxValue=a;const o={classBreaks:r,normalizationTotal:e.normalizationTotal},n=We(o,e.classificationMethod);return Promise.resolve(n)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||o)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryClassBreaks"in n?n.queryClassBreaks(l,m,{signal:r}):s?this.workerClient.classBreaks(m,s):_e({attribute:m,features:o})}async _heatmapStatsFromMemory(e){var u,m;const{view:t,field:a,radius:i,signal:r}=e;ft(t,"InMemoryLayerAdapter: must have a view");try{const c=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in c&&!c.updating&&!e.filter)return await c.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{V(r)}const{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),n=new It({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:(u=t.pixelSizeAt)==null?void 0:u.call(t,t.center)}),l={field:a,radius:i,transform:At(n),spatialReference:(m=t.spatialReference)==null?void 0:m.toJSON(),size:t.size};return s!=null&&s.length||o!=null&&o.length?s?this.workerClient.heatmapStatistics(l,s):kt({attribute:l,features:o}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:s}=e,o=t?this.getField(t):null,n=!!a,l=(s==null?void 0:s.type)==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||r||l?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,s=await fe(e,this),o=!!t,n=(r==null?void 0:r.type)==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||i||n?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,s=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=q(r.where,t);const s=await a.whenLayerView(this.layer);return await Se(()=>!s.updating,i),s.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,s=Ee(t),o=await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r});return Me(o.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:o,signal:n}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!s,l.outFields=r,C(l,o),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(de(this,r,m).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const c=await this._fetchFeaturesFromMemory(m,l,n,t),p=i!=null&&i>0&&i<=c.length?i:c.length;return D(c,p,u)}load(e){const t=this.layer.load(e).then(async a=>{var i,r,s;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!((r=(i=a.capabilities)==null?void 0:i.query)!=null&&r.supportsSqlExpression),this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:(s=a.parent)==null?void 0:s.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],K.prototype,"adapterName",void 0),F([v({constructOnly:!0})],K.prototype,"layer",void 0),K=F([$("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],K);const Ie=K,Ge=5,Je=2e4,ha=4e5;let X=class extends Ie{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){var t,a;const e=this.layer;if(!((a=(t=e.capabilities)==null?void 0:t.query)!=null&&a.supportsStatistics)||this.geometryType==="multipatch"&&!ht(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(te)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Ge,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(i=>{var l;let r,s,o;if((l=i.classBreakInfos)==null||l.some(u=>(u.hasAvg&&(r=u),!!r)),r){const u=r.maxValue-r.minValue;s=r.minValue+u/2,o=4*u}const n={min:i.minValue,max:i.maxValue,avg:s,stddev:o};return ue(n,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=M(t)||N(t),i=$e(this,e,t),r=await this.layer.queryFeatures(i,{signal:e.signal}),s=Ce(r,a);return ue(s,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new Kt({attributeField:a}),r=new ve({classificationDefinition:i});return this.generateRenderer(r,e.signal).then(s=>{const o={},n=this.getField(a);return s.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),o[u]==null?o[u]={count:l.count,data:Ze(n)&&u?Number(u):u}:o[u].count=o[u].count+l.count}),{count:o}}).then(s=>me(s,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(it(this,e),{signal:e.signal})).then(a=>Ne(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:P,view:e.view,signal:e.signal})).then(a=>me(a,t,e.returnAllCodedValues,P))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then(r=>r.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=st(e,this,t);return nt(a,this,e.minValue,e.maxValue).then(i=>{const r=i.min,s=i.max;if(r==null||s==null)return{bins:[],minValue:r,maxValue:s,normalizationTotal:t};const o=e.numBins||ee,n=Le(r,s,o),l=ga(a.sqlExpression,n,e.minValue!=null&&e.maxValue!=null),u=new G({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=q(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],C(m,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(m,{signal:a.signal})).then(c=>tt(c,r,s,o,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,s=await this._getNormalizationTotal(t,a,i,r),o=this.layer.createQuery(),{query:n,min:l,max:u}=await ot(e,this,s,o==null?void 0:o.where);if(!n)return{bins:[],minValue:l,maxValue:u,normalizationTotal:s};const m=await this.layer.queryAttributeBins(n,{signal:r});return lt(m,t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:s}=e,o=ye({field:t,normalizationType:a,normalizationField:i}),n=j({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),l=ce(n,e.minValue,e.maxValue),u=He({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Ge}),m=new ve({classificationDefinition:u});return m.where=q(o,l),this.generateRenderer(m,s).then(c=>We(c,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:i,sqlExpression:r,view:s,features:o,useFeaturesInView:n}=e,l=t?this.getField(t):null,u=M(l)||N(l),m=i&&!(r&&this.supportsSQLExpression),c=this._hasLocalSource||o||n,p=s&&s.type==="3d";if(c||m)return m||o||n||p?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(u||r||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(V(e.signal),this._summaryStatsFromMemory(e,l)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:s}=e,o=t&&!(a&&this.supportsSQLExpression),n=this._hasLocalSource||i||r||o,l=e.view,u=l&&l.type==="3d",m=await fe(e,this);return n?o||i||r||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(c=>(V(s),!e.field||e.field2||e.field3||e.filter?c:this._uvFromGenRenderer(e,m[0]))).catch(()=>(V(s),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){var z,L;const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:s,filter:o,signal:n}=e,l=t?this.getField(t):null,u=M(l)||N(l),m=e.valueExpression||e.sqlExpression,c=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),p=this._hasLocalSource||e.features||e.useFeaturesInView||c,y=this.supportsSQLExpression,h=!r||r==="equal-interval",g=e.minValue,S=e.maxValue,w=g!=null&&S!=null,x=e.numBins||ee;if(p)return this._histogramFromMemory(e);if((L=(z=this.layer.capabilities)==null?void 0:z.operations)!=null&&L.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return V(n),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||y)&&h){if(!y&&(m||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&h)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!h?xe(e,this).then(O=>{if(!w)return re(this,O,t,x,s,o,n);if(g>O.max||S<O.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return re(this,{min:g,max:S,sqlExpr:O.sqlExpr,excludeZerosExpr:O.excludeZerosExpr},t,x,s,o,n);{const A={field:t,normalizationType:a,normalizationField:i,normalizationTotal:O.normTotal,layer:this},_=j(A),k=ce(_,g,S);return xe(e,this,k).then(Q=>re(this,Q,t,x,s,o,n))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=q(a.where,e.whereClause),C(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){var r;const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=q(e.where,i.where),Wt(((r=a.parsedUrl)==null?void 0:r.path)??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,s=Ee(t),o=Xt(t),n=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:s,signal:i,filter:r});return Me(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){var y,h;const{view:a,requiredFields:i,returnGeometry:r,filter:s,signal:o}=e,n=e.sampleSize;if(n==null||n===0)return[];const l=this.layer.createQuery(),u=1,m=t==="json";l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!r,l.outFields=i,C(l,s);let c=[],p=!1;if(a)try{const g=await a.whenLayerView(this.layer);if(p=!de(this,i,g).length,p){if(n>=1&&!e.filter&&"getSampleFeatures"in g){await this._waitForLayerViewUpdate(g);const S=await g.getSampleFeatures({minFeatureCount:n,sampleSize:n});if(S!=null)return m?S:S.map(w=>qe.fromJSON(w))}if(c=await this._fetchFeaturesFromMemory(g,l,o,t),c.length>=n&&n>0)return D(c,n,u)}}catch{V(o)}try{if(this._hasLocalSource)return p?c:m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);const g=await this.queryFeatureCount({view:a,filter:s,signal:o}),S=this.layer.capabilities.query.maxRecordCount;let w=n===-1?g:n;if(w=S&&w>S?S:w,g<=c.length||c.length>=S)return c;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Ut(this.layer.spatialReference))*ha,g<=w)return m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);if(g<=Je){const x=this.layer.createQuery();C(x,s);const z=await this.layer.queryObjectIds();return l.objectIds=D(z,w,u),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}return(h=(y=this.layer.capabilities)==null?void 0:y.query)!=null&&h.supportsPagination&&(l.num=Math.min(w,Je)),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}catch{return V(o),c}}load(e){const t=this.layer.load(e).then(async a=>{var i,r;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=(r=(i=a.capabilities)==null?void 0:i.query)==null?void 0:r.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function ga(e,t,a){const i=[],r=t.length;return t.forEach((s,o)=>{const[n,l]=s;let u=null;u=o!==0||a?o!==r-1||a?q(`${e} >= ${n}`,`${e} ${o===r-1?" <= ":" < "} ${l}`):`${e} >= ${n}`:`${e} < ${l}`,i.push("WHEN ("+u+") THEN "+(o+1))}),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}F([v({readOnly:!0})],X.prototype,"adapterName",void 0),F([v({constructOnly:!0})],X.prototype,"layer",void 0),X=F([$("esri.smartMapping.support.adapters.FeatureLayerAdapter")],X);const T=X;let se=class extends T{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(e,t,a,i,r){const s=e==null?void 0:e.features;if(!(s!=null&&s.length))throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=te(s);let n=null;if(i==="percent-of-total"&&(n=(await this.workerClient.summaryStatistics({field:t},o)).sum,n==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if((r==null?void 0:r.type)==="class-breaks-definition"){const u=(await ke({field:t,normalizationType:i,normalizationField:a,normalizationTotal:n},o)).filter(m=>Number.isFinite(m));return qt({definition:r,values:u,normalizationTotal:n})}const l=(await ke({field:t},o)).filter(u=>u!=null&&typeof u=="string"&&u.trim()!=="");return Lt(l)}generateRenderer(e,t){const a=e.classificationDefinition;let i=null,r=null,s=null;(a==null?void 0:a.type)==="class-breaks-definition"?(i=a.classificationField,r=a.normalizationField,s=a.normalizationType):i=a==null?void 0:a.attributeField;const o=this.layer;return B({field:i,normalizationField:r}).then(n=>{const l=o.createQuery();return l.returnGeometry=!1,l.outFields=n,l.where=q(l.where,e.where),o.queryFeatures(l,{signal:t}).then(u=>this._createGenerateRendererResult(u,i,r,s,a))})}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],se.prototype,"adapterName",void 0),se=F([$("esri.smartMapping.support.adapters.CSVLayerAdapter")],se);const wa=se;let ne=class extends T{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:o}=t,n={include:["sum"]},l=(!i&&!r&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:n},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await J({attribute:{field:e,outStatisticTypes:n},features:r})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:o,normalizationField:n,valueExpression:l,returnGeometry:u,layerViewFunc:m,signal:c}=e;let p=null,y=null,h=null,g=null,S=null;if(i)try{if(p=await i.whenLayerView(this.layer),y=m!=null&&m in p&&typeof p[m]=="function",y){await this._waitForLayerViewUpdate(p);const w=await B({field:r,field2:s,field3:o,normalizationField:n,valueExpression:l});Be(this,w).length?y=!1:(h="createAggregateQuery"in p?p.createAggregateQuery():null,h?(h.outFields=w,h.returnGeometry=!1,C(h,a)):y=!1),p.suspended&&(y=!1)}}catch{y=!1}if(!y&&(S=Pe(this.layer).map(w=>w.toJSON()),g=await this._fetchFeaturesForStats({field:r,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:u,filter:a,view:i,signal:c},"json"),!(g!=null&&g.length)))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:p,query:h,featuresJSON:g,fieldInfos:S}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:o}=e,n={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(l||u)&&(n.fieldType=t!=null&&t.type?ze.toJSON(t.type):null,n.viewInfoParams=b(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:m,query:c},o)),!l&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(c,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):J({attribute:n,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:P,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(n||l)&&(p.viewInfoParams=b(a),p.timeZone=a.timeZone,p.fieldInfos=c),!n&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,p,{signal:o}):n?this.workerClient.uniqueValues(p,n):Te({attribute:p,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(s||o)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryAggregateHistogram"in n?n.queryAggregateHistogram(l,m,{signal:r}):s?this.workerClient.histogram(m,s):pe({attribute:m,features:o})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||o)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},r)),!s&&!o&&n&&"queryAggregateClassBreaks"in n?n.queryAggregateClassBreaks(l,m,{signal:r}):s?this.workerClient.classBreaks(m,s):_e({attribute:m,features:o})}getField(e=""){var t;return(t=Pe(this.layer))==null?void 0:t.find(a=>a.name.toLowerCase()===(e==null?void 0:e.toLowerCase()))}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=M(a)||N(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await fe(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=M(a)||N(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){var i;const t=await((i=e.view)==null?void 0:i.whenLayerView(this.layer));if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=q(a.where,e.whereClause),C(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=Ee(t),s=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Me(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:o,signal:n}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),Be(this,r).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",c=l.createAggregateQuery();c.outSpatialReference=a==null?void 0:a.spatialReference,c.returnGeometry=!!s,c.outFields=r,C(c,o);const{features:p}=m?await l.queryAggregateJSON(c,{signal:n}):await l.queryAggregates(c,{signal:n});return p.length&&i!=null&&i>0&&i<=p.length?D(p,i,u):p}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const i="featureReduction"in a?a.featureReduction:null;if((i==null?void 0:i.type)!=="binning"&&(i==null?void 0:i.type)!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i==null?void 0:i.type} is not supported`);this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=F([$("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],ne);const Fa=ne;let Y=class extends be{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),s=t.filter(n=>{const l=this.layer.getField(n);return!a.includes(l.name)}),o=s.some(n=>this.layer.getField(n).name===i);return r.outFields=o?s:[...s,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,s=r.signal,o=Se(()=>!i.updating,s);await Ue(o,5e3,r);const n=de(this,a,i);V(s);const l=this._updateQuery(t,a??[],n),u=await i.queryFeatures(l,{signal:s});V(s);const m=u.features;return n.length?i.whenGraphicAttributes(m,n):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(te)}_fetchFeaturesForStats(e,t){return B({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t!=null&&t.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:s,signal:o}=e,n=await this._fetchFeaturesForStats({field:i,valueExpression:s,normalizationField:r,view:a,signal:o},null);if(!(n!=null&&n.length))throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:n}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t==null?void 0:t.name,{signal:e.signal}).then(i=>{const r=i.stats,{min:s,max:o,totalValuesCount:n}=r;let{avg:l,stddev:u,sum:m,variance:c,count:p}=r;return s===0&&o===0||(l=l===0?null:l,m=m===0?null:m,u=u===0?null:u,c=c===0?null:c,p=p===0?null:p),p==null&&(m!=null&&l!=null?p=Math.round(m/l):n!=null&&(p=n)),{avg:l,count:p,max:o,min:s,stddev:u,sum:m,variance:c}})}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await J({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:s}=e,{featuresJSON:o,graphics:n}=await this._processStatsFromMemoryParams(e),l={field:i,valueExpression:s,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&o&&(l.fieldType=t!=null&&t.type?ze.toJSON(t.type):null,l.viewInfoParams=b(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(i,o,n)),o?this.workerClient.summaryStatistics(l,o):J({attribute:l,features:n})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t==null?void 0:t.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then(s=>{var p;const o=s.stats;if(!o.mostFrequentValues)throw new Error;const n=(p=s.labels)==null?void 0:p.labels,l={},u=[],m="countOF"+i;o.mostFrequentValues.forEach(y=>{const h=new qe({attributes:{}});h.attributes[i]=t&&t.name!==a.objectIdField&&(Ze(t)||M(t))?Number(y.value):y.value,h.attributes[m]=y.count,u.push(h)}),n&&n.forEach(y=>{l[y.value]=y.label});const c=new Xe({features:u});return Ne(c,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(s=>me(s,[r],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:s,valueExpression:o,returnAllCodedValues:n}=e,l={field:i,field2:r,field3:s,fieldDelimiter:P,valueExpression:o,domains:t,returnAllCodedValues:n},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=b(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):Te({attribute:l,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(i=>{const r=i.stats,{minValue:s,maxValue:o}=e,n=s??r.min,l=o??r.max,u=e.numBins||10,m=Sa(r.histogram,n,l,u);return tt(m,n,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(n.viewInfoParams=b(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,s,o)),s?this.workerClient.classBreaks(n,s):_e({attribute:n,features:o})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(s.viewInfoParams=b(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(s,i):pe({attribute:s,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?this._getCachedStatistics(e,t).catch(()=>(V(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await fe(e,this),{field:a,field2:i}=e,r=a&&i,s=this.getField(a);return!r&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(V(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(V(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,signal:o}=e,n=1,l=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!s,u.where=null,u.num=i;let m=[];try{if(m=l?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),m.length&&i!=null&&i>0&&i<=m.length)return D(m,i,n)}catch{V(o)}let c=null;if(this._featureLayerAdapter){const p={...e};delete p.view,c=await this._featureLayerAdapter.getSampleFeatures(p,t)}return c!=null&&c.length?c:D(m,m.length,n)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new T({layer:i}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Sa(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const s=e.counts.length,o=e.minimum,n=e.maximum;for(let u=0;u<s;u++){const m=(u+.5)/s,c=((1-m)*o+m*n-t)/(a-t)*i;c>=0&&c<=i&&(r[c===i?i-1:Math.floor(c)]+=e.counts[u])}const l=[];return r.forEach((u,m)=>{const c=new qe({attributes:{}});c.attributes.EXPR_1=m+1,c.attributes.countOFExpr=u,l.push(c)}),new Xe({features:l})}F([v({readOnly:!0})],Y.prototype,"adapterName",void 0),F([v({constructOnly:!0})],Y.prototype,"layer",void 0),Y=F([$("esri.smartMapping.support.adapters.SceneLayerAdapter")],Y);const ut=Y;let oe=class extends ut{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=F([$("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],oe);const va=oe;let le=class extends Ie{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){var n;const{signal:a,view:i}=e,r=$e(this,e,t);r.outStatistics=(n=r.outStatistics)==null?void 0:n.filter(l=>l.outStatisticFieldName!=="totalcount_value");const s=await this._fetchFeatureSetFromMemory(r,i,a),o=Ce(s,M(t)||N(t));return ue(o,e.outStatisticTypes)}};F([v({readOnly:!0})],le.prototype,"adapterName",void 0),le=F([$("esri.smartMapping.support.adapters.StreamLayerAdapter")],le);const xa=le;var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(f||(f={}));const Ve={[f.CatalogLayer]:{adapter:T,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:T,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:wa,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:T,type:"feature",label:"FeatureLayer"},[f.GeoJSONLayer]:{adapter:T,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:T,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Ie,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:T,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:T,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:va,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:ut,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:xa,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:T,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:T,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:T,type:"wfs",label:"WFSLayer"}},Oe=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Va=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function qa(e){return e.map(t=>Ve[t].label)}function La(e,t=Oe,a){if(e instanceof be)return e;const i=za(e,t);return i?a?new Fa({layer:e}):new i({layer:e}):null}function za(e,t=Oe){let a=null;return t.some(i=>{const r=e.type===Ve[i].type;return r&&(a=Ve[i].adapter),r}),a}async function Ta(e){if(!(e!=null&&e.layer)||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Zt(e,"unique-values");const{layer:i,...r}=e,s=e.forBinning?Va:Oe,o=La(i,s,e.forBinning);if(!o)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+qa(s).join(", "));const n={layerAdapter:o,...r},l=n.signal!=null?{signal:n.signal}:null;await o.load(l);const u=await B({field:n.field,field2:n.field2,field3:n.field3,valueExpression:n.valueExpression}),m=zt(o,u,"unique-values:invalid-parameters");if(m)throw m;n.filter&&!n.filter.spatialRelationship&&(n.filter.spatialRelationship="intersects");const c=Tt(n.filter,"summary-statistics:invalid-parameters");if(c)throw c;return n}async function Fr(e){const{layerAdapter:t,...a}=await Ta(e);return t.uniqueValues(a)}export{Fr as default};
