const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-BCPb5mXs-Bh6HVdQa.js","./utils-DawrlST4-DDfoPCeB.js","./index-Bq7Udiuc.js","./index-CpSsk29H.css","./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js","./PortalItem-CJetnHeq-DU1PthkB.js","./jsonContext-D_JQG_uA-CgjDDzfP.js","./portalItemUtils-DsrxEt4W-AFhOD2Cb.js","./projection-m8vi7Cxv-dX7rRAaA.js"])))=>i.map(i=>d[i]);
import{v as s,I as a,S as ie,t as w,c9 as ct,J as z,U as T,ca as qe,cD as lr,a1 as Ur,E as L,bI as ae,dz as ee,ex as ri,z as A,ao as ur,eO as _r,fc as Hr,fy as si,dD as Ae,Y as v,T as Me,ew as Ge,ev as kt,fz as Jt,dE as re,eh as le,b9 as Er,G as Vr,c as b,ae as kr,bH as Jr,s as Je,Q as Zt,dW as Zr,a8 as pi,fd as Wi,cH as Gr,r as qr,_ as Wr,b as D,f as Qr,$ as ci,af as V,ai as Kr,fA as $r,bR as Xr}from"./index-Bq7Udiuc.js";import{o as Yr,l as es,i as ts,Y as is,z as rs,j as ss,X as ns}from"./PortalLayer-rRU66wtN-DSgc_uoC.js";import{U as os}from"./Layer-B8q-l4yV-CyOgIiOx.js";import{M as Ci,l as as,b as tt,v as ls,H as us,_ as ps,X as cs,e as ms,n as ds,t as ys,i as hs,a as gs,c as ni,f as fs,d as ws,F as Is,r as Ms,V as vs}from"./multidimensionalUtils-Cerm72TU-D2qaeBts.js";import{N as Re,F as Ze,z as vt,Q as bt,i as bs,a as Qt,q as Fi,w as pr,v as cr,Z as Li,b as mr,c as Ss,X as Rs,K as Ds,W as dr,o as xs,_ as Qi,d as As,H as js,C as Ts,J as Ns}from"./RasterSymbolizer-YAjvxuoS-BIaAQQUW.js";import{p as Cs}from"./pixelRangeUtils-BteWOAF5-CWUmGYA-.js";import{o as yr,f as hr,l as Kt,i as gr}from"./commonProperties-BLIn8DYU-BmgVPi3C.js";import{y as fr}from"./Field-Cj6Pz3TI-eyhQxCek.js";import{o as Fs}from"./FieldsIndex-Y7EBAYp0-Per2Bp66.js";import{i as Ki}from"./imageBitmapUtils-D8LZDu4M-IQOCCu45.js";import{s as Oe,r as Ls,y as Ps,d as zs,D as Ie,T as Os,w as Bs}from"./dataUtils-CkgWlGaX-DVZTUEej.js";import{U as Us}from"./workers-0oosFQiO-DL4UeXRh.js";import{J as $t,d as $i}from"./ClassBreaksRenderer-D97YzbWp-YFeLPxgr.js";import{u as _s}from"./RendererLegendOptions-f5mIImtQ-D3BEA2Cj.js";import{g as wr,c as Ir,v as Mr}from"./colorRamps-KMmVdCPJ-BwNdaBg1.js";import{I as Xi,_ as Pi}from"./UniqueValueRenderer-BmoLL_Ee-BWFaMPti.js";import{$ as We}from"./normalizeUtils-b-vZURob-BWWICmXN.js";import{T as Hs,h as Es}from"./visualVariableUtils-BO-_wo28-CUvW41jT.js";import{s as Vs,i as ks}from"./utils-C_9ghOVk-imQWG5Fh.js";import"./ColorStop-DoHCvOqO-CEyiXG1r.js";import"./ClassBreaksDefinition-B_vYk3bu-CwIDp4TN.js";import{y as J,f as W,c as Q}from"./utils-DuaeuwP5-BCZke6dZ.js";import{s as Js,b as oi}from"./Query-CxQYWcUQ-BxnklKE9.js";import{j as Xt}from"./TimeExtent-gZaEUVeW-DRteFcxj.js";import{O as zi}from"./FeatureSet-Dxf4LeOj-DBU8lR31.js";import{e as Zs,i as Gs}from"./executeForIds-MucOSmLz-Cjv8r0FX.js";import{u as qs}from"./executeQueryJSON-BK4r1MU--MrIAc0d7.js";import{a as Ws}from"./ArcGISService-CdvDPeWS-DeRAS3rV.js";import{d as Qs,f as Ks}from"./ScaleRangeLayer-DIxukUBC-D8j5qWlw.js";import{L as $s,h as Xs}from"./popupUtils-BiEhUPlu-DVLbdjXQ.js";import{T as Ys}from"./RefreshableLayer-yYqabqcs-DQDMtkvL.js";import{N as en}from"./TemporalLayer-DxgXU1f--sU5mdzsx.js";import{a as tn}from"./versionUtils-DDW8eV12-C5-rhKJt.js";import{E as Dt}from"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DkWlof50-CX-HxHYb.js";import"./lengthUtils-wU9RRIqK-CiirY6SZ.js";import"./PortalItem-CJetnHeq-DU1PthkB.js";import"./portalItemUtils-DsrxEt4W-AFhOD2Cb.js";import"./projection-m8vi7Cxv-dX7rRAaA.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./colorUtils-DxUhbS7D-BSUh6hJk.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./fieldType-VTpxE-EM-CQBTaE1u.js";import"./timeZoneUtils-z3WjfjXQ-D8ButgDy.js";import"./Queue-B8H6jIv7-qe6xwAvV.js";import"./intl-DLmy-Li5-BJ0oorh2.js";import"./diffUtils-BSe9IE26-BhR63VTy.js";import"./styleUtils-DxAOZq5S-C2wmVL3t.js";import"./utils-Jw-4AGsF-kT105Oxg.js";import"./jsonUtils-DzmXEA9_-Dko_BHHt.js";import"./parser-hXQyB-Qx-B3NCqave.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-Vwe5THNj.js";import"./cimSymbolUtils-BuFg2oLA-DQ4qNnzq.js";import"./utils-BYqzY6_X-DW727sJo.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./LRUCache-BLmkvs7b-uVsbnRKB.js";import"./MemCache-BCippCv6-DfSqYNgC.js";import"./query-nJmB7Ppn-B4Tt74Kb.js";import"./pbfQueryUtils-1j64fqcx-DcjL6WL1.js";import"./pbf-Ijhb7ANA-BE9XIrxZ.js";import"./memoryEstimations-iHVpvWPf-0mmuGaCe.js";import"./OptimizedGeometry-1qDYm3YK-HgaplYA1.js";import"./OptimizedFeatureSet-D6mgsKNr-DjQ8QZl2.js";import"./queryZScale-DBCLQqDI-Cz1TijdF.js";let Ue=class extends v{constructor(){super(...arguments),this.pixelType="unknown"}};s([a({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"name",void 0),s([a({type:String,json:{write:!0}})],Ue.prototype,"description",void 0),s([a({type:ie,json:{type:ie,write:!0,name:"_object_id"}})],Ue.prototype,"id",void 0),s([a({type:String,json:{type:Re.jsonValues,read:Re.read,write:{writer:Re.write,isRequired:!0}}})],Ue.prototype,"pixelType",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"type",void 0),Ue=s([w("esri.layers.support.RasterFunctionInfo")],Ue);const rn=Ue;let Te=class extends v{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};s([a({type:String,json:{write:!0}})],Te.prototype,"name",void 0),s([a({type:Number,json:{type:ie,write:!0,name:"_object_id"}})],Te.prototype,"id",void 0),s([a({type:Boolean,json:{write:!0}})],Te.prototype,"isDataset",void 0),s([a({type:Boolean,json:{write:!0}})],Te.prototype,"isPublic",void 0),s([a({json:{write:!0}})],Te.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],Te.prototype,"type",void 0),Te=s([w("esri.layers.support.RasterFunctionVariable")],Te);const sn=Te,xt={key:"type",base:null,typeMap:{RasterFunctionVariable:sn}};let Qe=class extends v{};s([a({types:xt,json:{types:xt,name:"MatchVariable"}})],Qe.prototype,"matchVariable",void 0),s([a({types:xt,json:{types:xt,name:"UnionDimension"}})],Qe.prototype,"unionDimension",void 0),s([a({type:Number,json:{type:ie,write:!0,name:"_object_id"}})],Qe.prototype,"id",void 0),s([a({type:String,json:{write:!0}})],Qe.prototype,"type",void 0),Qe=s([w("esri.layers.support.RasterFunctionProperties")],Qe);const nn=Qe,ai=new ct({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let q=class extends v{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};s([a({type:[String],json:{write:!0}})],q.prototype,"aliases",void 0),s([a({type:Object,json:{write:{isRequired:!0}}})],q.prototype,"arguments",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],q.prototype,"description",void 0),s([a({type:rn,json:{write:{isRequired:!0},name:"function"}})],q.prototype,"functionInfo",void 0),s([a({type:ai.apiValues,json:{type:[0,1,2],read:ai.read,write:{writer:ai.write,isRequired:!0}}})],q.prototype,"functionType",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"group",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"help",void 0),s([a({type:Number,json:{type:ie,write:!0,name:"_object_id"}})],q.prototype,"id",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],q.prototype,"name",void 0),s([a({type:String,json:{write:!0,name:"definition"}})],q.prototype,"queryDefinition",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"tag",void 0),s([a({type:nn,json:{write:!0}})],q.prototype,"properties",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"thumbnail",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"thumbnailEx",void 0),s([a({json:{type:["RasterFunctionTemplate"],write:!0}})],q.prototype,"type",void 0),q=s([w("esri.layers.support.RasterFunctionTemplate")],q);const vr=q;var mi;const Nt=new Set(["raster","raster2","dem","fillraster"]),Ct=new Set(["rasters"]),Yi=e=>e!=null&&e.rasterFunction?Y.fromJSON(e):e,li=e=>e&&e instanceof Y?e.toJSON():e,di=e=>(e==null?void 0:e.functionName)&&!e.declaredClass,er=e=>di(e)?new Y(e):e,on=e=>{if(e==null)return null;e=A(e);const i={};for(const n of Object.keys(e))Nt.has(n.toLowerCase())?i[n]=Yi(e[n]):Ct.has(n.toLowerCase())&&Array.isArray(e[n])?i[n]=e[n].map(Yi):i[n]=e[n];return i},br=e=>e?vr.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,an={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:vr}},json:{write:!0,name:"rasterFunctionDefinition",read:br}};let Y=mi=class extends v{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const i=Object.keys(e);if(i.some(n=>Nt.has(n.toLowerCase())&&di(e[n]))||i.some(n=>Ct.has(n.toLowerCase())&&Array.isArray(e[n])&&e[n].some(t=>di(t)))){e=A(e);for(const n of i)Nt.has(n.toLowerCase())?e[n]=er(e[n]):Ct.has(n.toLowerCase())&&Array.isArray(e[n])&&(e[n]=e[n].map(t=>er(t)))}}this._set("functionArguments",e)}readFunctionArguments(e){return on(e)}writeFunctionArguments(e,i,n){const t={};for(const r of Object.keys(e))Nt.has(r.toLowerCase())?t[r]=li(e[r]):Ct.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(li):t[r]=li(e[r]);i[n]=t}readFunctionName(e,i){var t;const n=i.rasterFunctionInfos;return i.name||(n!=null&&n.length&&n[0].name!=="None"?n[0].name:i.rasterFunction||((t=i.rasterFunctionDefinition)==null?void 0:t.name))}get rasterFunctionDefinition(){var e;return(e=this.functionDefinition)==null?void 0:e.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=br(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new mi({functionName:this.functionName,functionArguments:A(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:A(this.rasterFunctionDefinition)})}};s([a({json:{type:Object,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",null),s([z("functionArguments")],Y.prototype,"readFunctionArguments",null),s([T("functionArguments")],Y.prototype,"writeFunctionArguments",null),s([a({json:{type:String,write:{target:"rasterFunction"}}})],Y.prototype,"functionName",void 0),s([z("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],Y.prototype,"readFunctionName",null),s([qe({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],Y.prototype,"outputPixelType",void 0),s([a({type:String,json:{read:!0,write:!0}})],Y.prototype,"variableName",void 0),s([a()],Y.prototype,"rasterFunctionDefinition",null),s([a(an)],Y.prototype,"functionDefinition",void 0),s([a()],Y.prototype,"hasClipFunction",null),Y=mi=s([w("esri.layers.support.RasterFunction")],Y);const N=Y,ln={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},un=new Set(["u1","u2","u4","u8","s8","u16","s16"]),pn={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},cn=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Sr(e){return cn.has(e.type)}function yi(e,i){var t;if(!e||!i)return A(e||i);const n=A(e);if(n.functionDefinition&&i.rasterFunctionDefinition){const r=i.rasterFunctionDefinition;(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=void 0),Rr(n.functionDefinition.arguments,i),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else((t=i.functionName)==null?void 0:t.toLowerCase())!=="none"&&(Dr(n.functionArguments).Raster=i);return n}function Rr(e,i){for(const n in e)n.toLowerCase()==="raster"&&(e[n].type==="RasterFunctionVariable"?(e[n]=i.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):e[n].type==="RasterFunctionTemplate"&&Rr(e[n].arguments,i))}function De(e){const i=A(ln[e.functionName+"Function"]),n=e.functionArguments;for(const t in n)t.toLowerCase()==="raster"?(i.arguments[t]=De(n[t]),i.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(i.arguments[t].value=In(n[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=n[t];return i}function mn(e,i){switch(i=i||{},e.type){case"raster-stretch":return hn(e,i);case"class-breaks":return gn(e,i);case"unique-value":return fn(e,i);case"raster-colormap":return wn(e,i);case"vector-field":return dn(e,i);case"raster-shaded-relief":return yn(e,i);case"flow":throw new Error("Unsupported rendering rule.")}}function Dr(e){const i=(e==null?void 0:e.Raster)??(e==null?void 0:e.raster);return i&&i.declaredClass==="esri.layers.support.RasterFunction"?Dr(i.functionArguments):e}const dt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function dn(e,i){const n=new N;n.functionName="VectorFieldRenderer";const{dataType:t,bandNames:r}=i,o=t==="vector-uv";let l,u;if(r&&r.length===2){const g=r.map(f=>f.toLowerCase());l=g.indexOf("magnitude"),u=g.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=e.rotationType==="arithmetic"?1:2,m=e.flowRepresentation==="flow-from"?0:1,c=e.visualVariables?e.visualVariables.find(g=>g.field==="Magnitude"):new Kt,d={magnitudeBandID:l,directionBandID:u,isUVComponents:o,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:pn[e.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};n.functionArguments=d;const y=De(n);return i.convertToRFT?N.fromJSON({rasterFunctionDefinition:y}):n}function yn(e,i){const n=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new N;const t=new N;t.functionName="Hillshade";const r=e.hillshadeType==="traditional"?0:1,o=e.scalingType==="none"?1:3,l={HillshadeType:r,SlopeType:o,ZFactor:e.zFactor};return r===0&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),o===3&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",e.colorRamp&&(t.functionName="ShadedRelief",n?l.ColorRamp=mr(e.colorRamp):l.Colormap=Qt(e.colorRamp)),n?new N({rasterFunctionDefinition:De(t)}):t}function hn(e,i){var p,m;const n=i.convertToRFT,t=new N;t.functionName="Stretch";const r=dt[bt.toJSON(e.stretchType)],o="u8",l=(p=e.customStatistics)==null?void 0:p.map(c=>[c.min,c.max,c.avg??0,c.stddev??1]),u={StretchType:r,Statistics:l,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(e.outputMin!=null&&(u.Min=e.outputMin),e.outputMax!=null&&(u.Max=e.outputMax),r===dt.standardDeviation?(u.NumberOfStandardDeviations=e.numberOfStandardDeviations,t.outputPixelType=o):r===dt.percentClip?(u.MinPercent=e.minPercent,u.MaxPercent=e.maxPercent,t.outputPixelType=o):r===dt.minMax?t.outputPixelType=o:r===dt.sigmoid&&(u.SigmoidStrengthLevel=e.sigmoidStrengthLevel),t.functionArguments=u,t.variableName="Raster",e.colorRamp){const c=e.colorRamp,d=new N;if(n)d.functionArguments={ColorRamp:mr(c)};else{const y=Ss(c,!0);if(y)d.functionArguments={colorRampName:y};else if(!i.convertColorRampToColormap||c.type!=="algorithmic"&&c.type!=="multipart"){const g=e.colorRamp.toJSON();g.type==="algorithmic"?g.algorithm=g.algorithm||"esriCIELabAlgorithm":g.type==="multipart"&&((m=g.colorRamps)!=null&&m.length)&&g.colorRamps.forEach(f=>f.algorithm=f.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:g}}else d.functionArguments={Colormap:Qt(c)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=t,n?new N({rasterFunctionDefinition:De(d)}):d}return n?new N({rasterFunctionDefinition:De(t)}):t}function gn(e,i){const n=[],t=[],r=[],o=[],{pixelType:l,rasterAttributeTable:u}=i,p=u==null?null:u.features,m=xr(u);if(m&&p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach((h,I)=>{var R;const M=(R=h.symbol)==null?void 0:R.color;let S;M!=null&&M.a&&h.minValue!=null&&h.maxValue!=null&&p.forEach(C=>{h.minValue!=null&&h.maxValue!=null&&(S=C.attributes[e.field],(S>=h.minValue&&S<h.maxValue||I===e.classBreakInfos.length-1&&S>=h.minValue)&&o.push([C.attributes[m],M.r,M.g,M.b]))})});const g=l?Gt(o,l):o,f=new N;return f.functionName="Colormap",f.functionArguments={},f.functionArguments.Colormap=g,f.variableName="Raster",i.convertToRFT?new N({rasterFunctionDefinition:De(f)}):f}e.classBreakInfos.forEach((g,f)=>{if(g.minValue==null||g.maxValue==null)return;const h=g.symbol&&g.symbol.color;h!=null&&h.a?(f===0?n.push(g.minValue,g.maxValue+1e-4):n.push(g.minValue+1e-4,g.maxValue+1e-4),t.push(f),o.push([f,h.r,h.g,h.b])):r.push(g.minValue,g.maxValue)});const c=l?Gt(o,l):o,d=new N;d.functionName="Remap",d.functionArguments={InputRanges:n,OutputValues:t,NoDataRanges:r},d.variableName="Raster";const y=new N;return y.functionName="Colormap",y.functionArguments={Colormap:c,Raster:d},i.convertToRFT?new N({rasterFunctionDefinition:De(y)}):y}function Gt(e,i){const n=un.has(i)?Cs(i):null;return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function xr(e){var n;if(e==null)return;const{fields:i}=e;return(n=i==null?void 0:i.find(t=>(t==null?void 0:t.name)&&t.name.toLowerCase()==="value"))==null?void 0:n.name}function fn(e,i){var d,y;const n=[],{pixelType:t,rasterAttributeTable:r}=i,o=r==null?null:r.features,l=xr(r),u=(y=(d=e.defaultSymbol)==null?void 0:d.color)==null?void 0:y.toRgb(),p=e.uniqueValueInfos;if(p)if(o){if(l){const g=new Map;p.forEach(h=>{const I=h.value,M=tr(h);I!=null&&(M!=null&&M.a)&&g.set(String(I),M.toRgb())});const f=e.field;f&&o.forEach(({attributes:h})=>{const I=String(h[f]),M=h[l],S=g.get(I);S?n.push([M,...S]):u&&n.push([M,...u])})}}else for(let g=0;g<p.length;g++){const f=p[g],h=tr(f),I=+f.value;if(h!=null&&h.a){if(isNaN(I))return null;n.push([I,h.r,h.g,h.b])}}const m=t?Gt(n,t):n,c=new N;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new N({rasterFunctionDefinition:De(c)}):c}function tr(e){var i,n,t,r,o;return((i=e.symbol)==null?void 0:i.type)==="polygon-3d"?(r=(t=(n=e.symbol.symbolLayers)==null?void 0:n.find(l=>l.type==="fill"))==null?void 0:t.material)==null?void 0:r.color:(o=e.symbol)==null?void 0:o.color}function wn(e,i){const n=e.extractColormap();if(!n||n.length===0)return null;const{pixelType:t}=i,r=t?Gt(n,t):n,o=new N;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,i.convertToRFT?new N({rasterFunctionDefinition:De(o)}):o}function In(e){const i=[],n=[];return e.forEach(t=>{i.push(t[0]),n.push(Rs([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:n}}var hi;const ut=lr()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Ft=lr()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Mn(e){let i;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Ft.fromJSON(i)}let k=hi=class extends v{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(e,i){return Mn(i.mosaicMethod||i.defaultMosaicMethod)}writeMultidimensionalDefinition(e,i,n){e!=null&&(e=e.filter(({variableName:t,dimensionName:r})=>t&&t!=="*"||r)).length&&(i[n]=e.map(t=>t.toJSON()))}readOperation(e,i){var o;const n=i.mosaicOperation,t=(o=i.mosaicOperator)==null?void 0:o.toLowerCase(),r=n||(t?ut.toJSON(t):null);return ut.fromJSON(r)||"first"}castSortValue(e){return e==null||typeof e=="string"||typeof e=="number"?e:`${e}`}clone(){return new hi({ascending:this.ascending,itemRasterFunction:A(this.itemRasterFunction),lockRasterIds:A(this.lockRasterIds),method:this.method,multidimensionalDefinition:A(this.multidimensionalDefinition),objectIds:A(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:A(this.viewpoint),where:this.where})}};s([a({type:Boolean,json:{write:!0}})],k.prototype,"ascending",void 0),s([z("ascending",["ascending","sortAscending"])],k.prototype,"readAscending",null),s([a({type:N,json:{name:"itemRenderingRule",write:!0}})],k.prototype,"itemRasterFunction",void 0),s([a({type:[ie],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],k.prototype,"lockRasterIds",void 0),s([a({type:Ft.apiValues,json:{type:Ft.jsonValues,write:{target:"mosaicMethod",writer:Ft.write,isRequired:!0}}})],k.prototype,"method",void 0),s([z("method",["mosaicMethod","defaultMosaicMethod"])],k.prototype,"readMethod",null),s([a({type:[Ci],json:{write:!0}})],k.prototype,"multidimensionalDefinition",void 0),s([T("multidimensionalDefinition")],k.prototype,"writeMultidimensionalDefinition",null),s([a({type:[ie],json:{name:"fids",write:!0}})],k.prototype,"objectIds",void 0),s([a({type:ut.apiValues,json:{type:ut.jsonValues,read:{reader:ut.read},write:{target:"mosaicOperation",writer:ut.write}}})],k.prototype,"operation",void 0),s([z("operation",["mosaicOperation","mosaicOperator"])],k.prototype,"readOperation",null),s([a({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],k.prototype,"sortField",void 0),s([a({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],k.prototype,"sortValue",void 0),s([Ur("sortValue")],k.prototype,"castSortValue",null),s([a({type:L,json:{write:!0}})],k.prototype,"viewpoint",void 0),s([a({type:String,json:{write:!0}})],k.prototype,"where",void 0),k=hi=s([w("esri.layers.support.MosaicRule")],k);const oe=k;let U=class extends v{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,i,n){this.layer.version<10.3||(i[n]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,i,n){this.format&&this.format.toLowerCase().includes("jpg")&&e!=null&&(i[n]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,i,n){this.format==="lerc"&&e!=null&&(i[n]=e)}get format(){var e;return((e=this.layer.renderer)==null?void 0:e.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,i,n){this.format==="lerc"&&this.layer.version>=10.5&&(i[n]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let i=e.mosaicRule;const n=e.definitionExpression;return i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new oe({where:n})),i}get rasterFunction(){var o,l;const e=this.layer;let{rasterFunction:i}=e;const n=e.pixelFilter,t=!e.format||e.format.includes("jpg")||e.format.includes("png");i=this._addResampleRasterFunction(i);const r=(o=e.multidimensionalSubset)==null?void 0:o.areaOfInterest;return r&&(i=vn(i,r)),t&&!n&&((l=e.renderer)==null?void 0:l.type)!=="vector-field"&&(i=this.combineRendererWithRenderingRule(i)),i}combineRendererWithRenderingRule(e){const i=this.layer,{rasterInfo:n,renderer:t}=i;return e=e||i.rasterFunction,!t||!Sr(t)?e:yi(mn(t,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map(({name:r})=>r),convertColorRampToColormap:i.version<10.6,convertToRFT:!!(e!=null&&e.rasterFunctionDefinition),bandCount:n.bandCount}),e)}_addResampleRasterFunction(e){var r;if(((r=this.layer.renderer)==null?void 0:r.type)!=="vector-field"||(e==null?void 0:e.functionName)==="Resample")return e;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,n=this.layer.serviceRasterInfo.pixelSize;let t=new N({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:n}});return t=e!=null&&e.rasterFunctionDefinition?new N({rasterFunctionDefinition:De(t)}):t,yi(t,e)}};function vn(e,i){const n=new N({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return yi(n,e)}s([a()],U.prototype,"layer",void 0),s([a({json:{write:!0}})],U.prototype,"adjustAspectRatio",null),s([T("adjustAspectRatio")],U.prototype,"writeAdjustAspectRatio",null),s([a({json:{write:!0}})],U.prototype,"bandIds",null),s([a({json:{write:!0}})],U.prototype,"compression",void 0),s([a({json:{write:!0}})],U.prototype,"compressionQuality",null),s([T("compressionQuality")],U.prototype,"writeCompressionQuality",null),s([a({json:{write:!0}})],U.prototype,"compressionTolerance",null),s([T("compressionTolerance")],U.prototype,"writeCompressionTolerance",null),s([a({json:{write:!0}})],U.prototype,"format",null),s([a({type:String,json:{read:{reader:Ze.read},write:{writer:Ze.write}}})],U.prototype,"interpolation",null),s([a({json:{write:!0}})],U.prototype,"noData",null),s([a({type:String,json:{read:{reader:vt.read},write:{writer:vt.write}}})],U.prototype,"noDataInterpretation",null),s([a({type:Re.apiValues,json:{read:Re.read,write:Re.write}})],U.prototype,"pixelType",null),s([a({json:{write:!0}})],U.prototype,"lercVersion",void 0),s([T("lercVersion")],U.prototype,"writeLercVersion",null),s([a({type:Number})],U.prototype,"version",null),s([a({json:{write:!0}})],U.prototype,"mosaicRule",null),s([a({json:{write:!0,name:"renderingRule"}})],U.prototype,"rasterFunction",null),U=s([w("esri.layers.support.ExportImageServiceParameters")],U);var gi;const bn={base:Jr,key:"type",typeMap:{extent:Je,polygon:Zt}};let Ke=gi=class extends v{constructor(e){super(e),this.areaOfInterest=null,this.subsetDefinitions=null}get dimensions(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const i=new Map;e.forEach(t=>{if(!t.dimensionName)return;let r,o;if(Array.isArray(t.values[0])){const l=t.values;r=l[0][0],o=l[t.values.length-1][1]}else{const l=t.values;r=l[0],o=l[t.values.length-1]}if(i.has(t.dimensionName)){const l=i.get(t.dimensionName);l[0]=Math.min(r,l[0]),l[1]=Math.max(o,l[1])}else i.set(t.dimensionName,[r,o])});const n=[];for(const t of i)n.push({name:t[0],extent:t[1]});return n}get variables(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const i=new Set;return e.forEach(n=>{n.variableName&&i.add(n.variableName)}),[...i]}clone(){var n;const e=(n=this.subsetDefinitions)==null?void 0:n.map(t=>t.clone()),i=this.areaOfInterest?this.areaOfInterest.clone():this.areaOfInterest;return new gi({areaOfInterest:i,subsetDefinitions:e})}};s([a({types:bn,json:{read:ae,write:!0}})],Ke.prototype,"areaOfInterest",void 0),s([a({readOnly:!0})],Ke.prototype,"dimensions",null),s([a({readOnly:!0})],Ke.prototype,"variables",null),s([a({type:[Ci],json:{write:!0}})],Ke.prototype,"subsetDefinitions",void 0),Ke=gi=s([w("esri.layers.support.MultidimensionalSubset")],Ke);const Sn=Ke;let Rn=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await Us("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async convertVectorFieldData(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("convertVectorFieldData",{pixelBlock:e.pixelBlock.toJSON(),type:e.dataType},i);return n?new Ie(n):null}computeStatisticsHistograms(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");return this._workerThread.invoke("computeStatisticsHistograms",{pixelBlock:e.pixelBlock.toJSON()},i)}async decode(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("decode",e,i);return n?new Ie(n):null}async symbolize(e,i){var r,o;if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={extent:(r=e.extent)==null?void 0:r.toJSON(),pixelBlock:(o=e.pixelBlock)==null?void 0:o.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},t=await this._workerThread.invoke("symbolize",n,i);return t?new Ie(t):null}async updateSymbolizer(e,i){var t;if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=(t=e==null?void 0:e.rendererJSON)==null?void 0:t.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:n},i))}async updateRasterFunction(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");await Promise.all(this._workerThread.broadcast("updateRasterFunction",{rasterFunctionJSON:e.toJSON()},i))}async process(e,i){var t,r;if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("process",{extent:(t=e.extent)==null?void 0:t.toJSON(),primaryPixelSizes:(r=e.primaryPixelSizes)==null?void 0:r.map(o=>o!=null?o.toJSON():null),primaryPixelBlocks:e.primaryPixelBlocks.map(o=>o!=null?o.toJSON():null),primaryRasterIds:e.primaryRasterIds},i);return n?new Ie(n):null}async stretch(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!(e!=null&&e.pixelBlock))return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},t=await this._workerThread.invoke("stretch",n,i);return t?new Ie(t):null}async split(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!(e!=null&&e.pixelBlock))return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),tileSize:e.tileSize,maximumPyramidLevel:e.maximumPyramidLevel,useBilinear:e.useBilinear},t=await this._workerThread.invoke("split",n,i);return t&&t.forEach((r,o)=>{t.set(o,r?Ie.fromJSON(r):null)}),t}async clipTile(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!(e!=null&&e.pixelBlock))return null;const n={...e,pixelBlock:e.pixelBlock.toJSON()},t=await this._workerThread.invoke("clipTile",n,i);return t?Ie.fromJSON(t):null}async estimateStatisticsHistograms(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!(e!=null&&e.pixelBlock))return null;const n={srcPixelBlock:e.pixelBlock.toJSON()};return await this._workerThread.invoke("estimateStatisticsHistograms",n,i)}async mosaicAndTransform(e,i){var r;if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!((r=e==null?void 0:e.srcPixelBlocks)!=null&&r.length))return{pixelBlock:null};const n={...e,srcPixelBlocks:e.srcPixelBlocks.map(o=>o!=null?o.toJSON():null)},t=await this._workerThread.invoke("mosaicAndTransform",n,i);return{pixelBlock:t.pixelBlock?new Ie(t.pixelBlock):null,localNorthDirections:t.localNorthDirections}}async createFlowMesh(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={buffer:e.flowData.data.buffer,maskBuffer:e.flowData.mask.buffer,width:e.flowData.width,height:e.flowData.height},{meshType:t,simulationSettings:r}=e,o=await this._workerThread.invoke("createFlowMesh",{meshType:t,flowData:n,simulationSettings:r},{...i,transferList:[n.buffer,n.maskBuffer]});return{vertexData:new Float32Array(o.vertexBuffer),indexData:new Uint32Array(o.indexBuffer)}}getProjectionOffsetGrid(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=e.datumTransformation!=null?e.datumTransformation.steps.map(o=>({wkid:o.wkid,wkt:o.wkt,isInverse:o.isInverse})):null,t=e.rasterTransform!=null?e.rasterTransform.toJSON():null,r={projectedExtent:e.projectedExtent.toJSON(),srcBufferExtent:e.srcBufferExtent.toJSON(),pixelSize:e.pixelSize,hasWrapAround:e.hasWrapAround,spacing:e.spacing,datumTransformationSteps:n,rasterTransform:t,isAdaptive:e.isAdaptive,includeGCSGrid:e.includeGCSGrid};return this._workerThread.invoke("getProjectionOffsetGrid",r,i)}};var fi;const At=new ct({flow_from:"flow-from",flow_to:"flow-to"});let K=fi=class extends yr(v){constructor(e){super(e),this.density=.8,this.color=new ee([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){var g,f;const{density:e,maxPathLength:i,trailWidth:n,flowSpeed:t,trailLength:r,smoothing:o,flowRepresentation:l,trailCap:u,background:p}=this,m=this.color.clone(),c=(this.visualVariables||[]).map(h=>h.clone()),d=(g=this.authoringInfo)==null?void 0:g.clone(),y=(f=this.legendOptions)==null?void 0:f.clone();return new fi({density:e,color:m,maxPathLength:i,trailWidth:n,flowSpeed:t,trailLength:r,trailCap:u,background:p,smoothing:o,flowRepresentation:l,visualVariables:c,authoringInfo:d,legendOptions:y})}getSymbol(e,i){}async getSymbolAsync(e,i){}getSymbols(){return[]}};s([a({type:Number,json:{write:!0}})],K.prototype,"density",void 0),s([a({type:ee,json:{write:{allowNull:!0}}})],K.prototype,"color",void 0),s([a({type:Number,cast:ri,json:{write:!0}})],K.prototype,"maxPathLength",void 0),s([a({type:Number,cast:ri,json:{write:!0}})],K.prototype,"trailWidth",void 0),s([a({type:Number,json:{write:!0}})],K.prototype,"flowSpeed",void 0),s([a({type:Number,json:{write:!0}})],K.prototype,"trailLength",void 0),s([a({type:Number,cast:ri,json:{write:!1}})],K.prototype,"smoothing",void 0),s([a({type:At.apiValues,json:{type:At.jsonValues,read:{reader:At.read},write:{writer:At.write}}})],K.prototype,"flowRepresentation",void 0),s([qe({flowRenderer:"flow"})],K.prototype,"type",void 0),s([a({type:hr,json:{write:!0}})],K.prototype,"authoringInfo",void 0),s([a({type:_s,json:{write:!0}})],K.prototype,"legendOptions",void 0),s([a({type:String,json:{write:!0}})],K.prototype,"trailCap",void 0),s([a({type:String,json:{write:!0}})],K.prototype,"background",void 0),K=fi=s([w("esri.renderers.FlowRenderer")],K);const Ar=K;let rt=class extends v{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};s([a({type:Number,json:{write:{isRequired:!0}}})],rt.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],rt.prototype,"label",void 0),s([a({type:ee,json:{type:[ie],write:{isRequired:!0}}})],rt.prototype,"color",void 0),rt=s([w("esri.renderers.support.ColormapInfo")],rt);const jr=rt;var yt;let ht=yt=class extends v{constructor(e){super(e),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(e,i){if(!e)return null;const n=e[0].length===5,t=[...e].sort((r,o)=>r[0]-o[0]).map(r=>jr.fromJSON({value:r[0],color:n?r.slice(1,5):r.slice(1,4).concat([255]),label:i?i[r[0]]??"":r[0]}));return new yt({colormapInfos:t})}static createFromColorramp(e){const i=Qt(e);return yt.createFromColormap(i)}clone(){return new yt({colormapInfos:this.colormapInfos.map(e=>e.toJSON())})}extractColormap(){return this.colormapInfos.map(({value:e,color:i})=>[e,i.r,i.g,i.b,i.a>1?i.a:255*i.a&255]).sort((e,i)=>e[0]-i[0])}};s([a({type:[jr],json:{write:{isRequired:!0}}})],ht.prototype,"colormapInfos",void 0),s([qe({rasterColormap:"raster-colormap"}),a({json:{write:{isRequired:!0}}})],ht.prototype,"type",void 0),ht=yt=s([w("esri.renderers.RasterColormapRenderer")],ht);const Oi=ht;var wi;let se=wi=class extends v{constructor(e){super(e),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(e){return Mr(e)}clone(){return new wi({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:A(this.colorRamp)})}};s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"altitude",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"azimuth",void 0),s([a({types:wr,json:{write:!0}})],se.prototype,"colorRamp",void 0),s([z("colorRamp")],se.prototype,"readColorRamp",null),s([a({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],se.prototype,"hillshadeType",void 0),s([a({type:Number,json:{write:!0}})],se.prototype,"pixelSizePower",void 0),s([a({type:Number,json:{write:!0}})],se.prototype,"pixelSizeFactor",void 0),s([a({type:["none","adjusted"],json:{write:{isRequired:!0}}})],se.prototype,"scalingType",void 0),s([qe({rasterShadedRelief:"raster-shaded-relief"}),a({json:{write:{isRequired:!0}}})],se.prototype,"type",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"zFactor",void 0),se=wi=s([w("esri.renderers.RasterShadedReliefRenderer")],se);const Tr=se;var Ii;let B=Ii=class extends v{constructor(e){super(e),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(e){if(e)return Mr(e)}get statistics(){return this._get("statistics")}set statistics(e){Zr(pi.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",e)}get customStatistics(){const e=this.statistics;return e&&Array.isArray(e[0])?e.map(i=>({min:i[0],max:i[1],avg:i[2],stddev:i[3]})):e}set customStatistics(e){this._set("statistics",e==null?void 0:e.map(i=>[i.min,i.max,i.avg??0,i.stddev??1]))}readCustomStatistics(e){return e==null?void 0:e.map(i=>({min:i[0],max:i[1],avg:i[2],stddev:i[3]}))}writeCustomStatistics(e,i,n){e!=null&&e.length&&(i[n]=e.map(t=>[t.min,t.max,t.avg??0,t.stddev??1]))}readStretchType(e,i){let n=i.stretchType;return typeof n=="number"&&(n=Ds[n]),bt.read(n)}clone(){const e=new Ii({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:A(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:A(this.colorRamp),histograms:A(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return e._set("statistics",A(this.statistics)),e}};s([a({types:wr,json:{write:!0}})],B.prototype,"colorRamp",void 0),s([z("colorRamp")],B.prototype,"readColorRamp",null),s([a({type:Boolean,json:{write:!0}})],B.prototype,"computeGamma",void 0),s([a({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],B.prototype,"dynamicRangeAdjustment",void 0),s([a({type:[Number],json:{write:!0}})],B.prototype,"gamma",void 0),s([a({type:Number,json:{write:!0}})],B.prototype,"maxPercent",void 0),s([a({type:Number,json:{write:!0}})],B.prototype,"minPercent",void 0),s([a({type:Number,json:{write:!0}})],B.prototype,"numberOfStandardDeviations",void 0),s([a({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],B.prototype,"outputMax",void 0),s([a({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],B.prototype,"outputMin",void 0),s([a({type:Number,json:{write:!0}})],B.prototype,"sigmoidStrengthLevel",void 0),s([a({})],B.prototype,"statistics",null),s([a()],B.prototype,"histograms",void 0),s([a({json:{type:[[Number]],name:"statistics",write:!0}})],B.prototype,"customStatistics",null),s([z("customStatistics")],B.prototype,"readCustomStatistics",null),s([T("customStatistics")],B.prototype,"writeCustomStatistics",null),s([a({type:Boolean,json:{write:!0}})],B.prototype,"useGamma",void 0),s([a({type:bt.apiValues,json:{type:bt.jsonValues,write:bt.write}})],B.prototype,"stretchType",void 0),s([z("stretchType",["stretchType"])],B.prototype,"readStretchType",null),s([qe({rasterStretch:"raster-stretch"})],B.prototype,"type",void 0),B=Ii=s([w("esri.renderers.RasterStretchRenderer")],B);const Bi=B;var Mi;const ir=new Set(["esriMetersPerSecond","esriKilometersPerHour","esriKnots","esriFeetPerSecond","esriMilesPerHour"]),jt=new ct({beaufort_ft:"beaufort-ft",beaufort_km:"beaufort-km",beaufort_kn:"beaufort-kn",beaufort_m:"beaufort-m",beaufort_mi:"beaufort-mi",classified_arrow:"classified-arrow",ocean_current_kn:"ocean-current-kn",ocean_current_m:"ocean-current-m",simple_scalar:"simple-scalar",single_arrow:"single-arrow",wind_speed:"wind-barb"}),Tt=new ct({flow_from:"flow-from",flow_to:"flow-to"});let $=Mi=class extends yr(v){constructor(e){super(e),this.attributeField="Magnitude",this.flowRepresentation="flow-from",this.rotationType="arithmetic",this.style="single-arrow",this.symbolTileSize=50,this.type="vector-field"}readInputUnit(e,i){return ir.has(e)?Oe.fromJSON(e):null}readOutputUnit(e,i){return ir.has(e)?Oe.fromJSON(e):null}get styleRenderer(){const e=this.style,i=this.attributeField,n=this._createStyleRenderer(e);return n.field=i,n}get sizeVariables(){const e=[];if(this.visualVariables)for(const i of this.visualVariables)i.type==="size"&&e.push(i);if(e.length===0){const i=new Kt({field:"Magnitude",minSize:.2*this.symbolTileSize,maxSize:.8*this.symbolTileSize});this.visualVariables?this.visualVariables.push(i):this._set("visualVariables",[i]),e.push(i)}return e}get rotationVariables(){const e=[];if(this.visualVariables)for(const i of this.visualVariables)i.type==="rotation"&&e.push(i);if(e.length===0){const i=new gr({field:"Direction",rotationType:this.rotationType});this.visualVariables?this.visualVariables.push(i):this._set("visualVariables",[i]),e.push(i)}return e}clone(){return new Mi({attributeField:this.attributeField,flowRepresentation:this.flowRepresentation,rotationType:this.rotationType,symbolTileSize:this.symbolTileSize,style:this.style,visualVariables:A(this.visualVariables),inputUnit:this.inputUnit,outputUnit:this.outputUnit})}async getGraphicsFromPixelData(e,i=!1,n=[]){var y;const t=new Array,r=Ls(this.inputUnit,this.outputUnit),o=((y=this.rotationVariables[0])==null?void 0:y.rotationType)||this.rotationType,l=i?Ps(e.pixelBlock,"vector-uv",o,r):zs(e.pixelBlock,"vector-magdir",r);if(l==null)return t;const u=e.extent,p=l.mask!=null&&l.mask.length>0;let m=0;const c=(u.xmax-u.xmin)/l.width,d=(u.ymax-u.ymin)/l.height;for(let g=0;g<l.height;g++)for(let f=0;f<l.width;f++,m++){let h=new L({x:u.xmin+f*c+c/2,y:u.ymax-g*d-d/2,spatialReference:u.spatialReference});h=(await We(h))[0];const I=n.some(M=>M.intersects(h));if((!p||l.mask[m])&&!I){const M={Magnitude:l.pixels[0][m],Direction:l.pixels[1][m]},S=new ur({geometry:new L({x:h.x,y:h.y,spatialReference:u.spatialReference}),attributes:M});S.symbol=this._getVisualVariablesAppliedSymbol(S),t.push(S)}}return t}getSymbol(e,i){}async getSymbolAsync(e,i){}getSymbols(){return[]}getClassBreakInfos(){var e;return(e=this.styleRenderer)==null?void 0:e.classBreakInfos}getDefaultSymbol(){var e;return(e=this.styleRenderer)==null?void 0:e.defaultSymbol}_getDefaultSymbol(e){return new _r({path:"M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z",outline:new Hr({width:0}),size:20,color:e||new ee([0,92,230])})}_getVisualVariablesAppliedSymbol(e){var r,o;if(!e)return;const i=(o=(r=this.styleRenderer)==null?void 0:r.getSymbol(e))==null?void 0:o.clone(),n=this.sizeVariables,t=this.rotationVariables;if(n&&n.length&&this.sizeVariables.forEach(l=>Vs(i,Hs([l],e))),t&&t.length){const l=this.flowRepresentation==="flow-to"==(this.style==="ocean-current-kn"||this.style==="ocean-current-m")?0:180;e.attributes.Direction=e.attributes.Direction+l,this.rotationVariables.forEach(u=>ks(i,Es(u,e),u.axis))}return i}_createStyleRenderer(e){let i={defaultSymbol:this._getDefaultSymbol(),classBreakInfos:[]};switch(e){case"single-arrow":i=this._createSingleArrowRenderer();break;case"beaufort-kn":i=this._createBeaufortKnotsRenderer();break;case"beaufort-m":i=this._createBeaufortMeterRenderer();break;case"beaufort-ft":i=this._createBeaufortFeetRenderer();break;case"beaufort-mi":i=this._createBeaufortMilesRenderer();break;case"beaufort-km":i=this._createBeaufortKilometersRenderer();break;case"ocean-current-m":i=this._createCurrentMeterRenderer();break;case"ocean-current-kn":i=this._createCurrentKnotsRenderer();break;case"simple-scalar":i=this._createSimpleScalarRenderer();break;case"wind-barb":i=this._createWindBarbsRenderer();break;case"classified-arrow":i=this._createClassifiedArrowRenderer()}return new $t(i)}_createSingleArrowRenderer(){return{defaultSymbol:this._getDefaultSymbol()}}_createBeaufortKnotsRenderer(){const e=[0,1,3,6,10,16,21,27,33,40,47,55,63],i=[[40,146,199],[89,162,186],[129,179,171],[160,194,155],[191,212,138],[218,230,119],[250,250,100],[252,213,83],[252,179,102],[250,141,52],[247,110,42],[240,71,29]];return{defaultSymbol:this._getDefaultSymbol(new ee([214,47,39])),classBreakInfos:this._getClassBreaks(e,i)}}_createBeaufortMeterRenderer(){const e=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7],i=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]];return{defaultSymbol:this._getDefaultSymbol(new ee([214,47,39])),classBreakInfos:this._getClassBreaks(e,i)}}_createBeaufortFeetRenderer(){const e=this._getDefaultSymbol(new ee([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.28084;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createBeaufortMilesRenderer(){const e=this._getDefaultSymbol(new ee([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=2.23694;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createBeaufortKilometersRenderer(){const e=this._getDefaultSymbol(new ee([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.6;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createCurrentMeterRenderer(){const e=[0,.5,1,1.5,2],i=[[78,26,153],[179,27,26],[202,128,26],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new ee([177,177,177])),classBreakInfos:this._getClassBreaks(e,i)}}_createCurrentKnotsRenderer(){const e=[0,.25,.5,1,1.5,2,2.5,3,3.5,4],i=[[0,0,0],[0,37,100],[78,26,153],[151,0,100],[179,27,26],[177,78,26],[202,128,26],[177,179,52],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new ee([177,177,177])),classBreakInfos:this._getClassBreaks(e,i)}}_createClassifiedArrowRenderer(){var t;const e=this._getDefaultSymbol(new ee([56,168,0]));let i=[0,1e-6,3.5,7,10.5,14];if((t=this.sizeVariables)!=null&&t.length){const r=this.sizeVariables[0].minDataValue,o=this.sizeVariables[0].maxDataValue;if(r&&o){const l=(o-r)/5;i=Array.from(Array(6).keys()).map(u=>r+l*u)}}const n=[[56,168,0],[139,309,0],[255,255,0],[255,128,0],[255,0,0]];return{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createSimpleScalarRenderer(){return{defaultSymbol:si.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=",height:20,width:20,type:"esriPMS",angle:0})}}_createWindBarbsRenderer(){const e=Array.from(Array(31).keys()).map(r=>5*r),i=[{range:"0-5",path:"M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"5-10",path:"M25 0 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"10-15",path:"M25 0 L25 40 L10 45 L25 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"15-20",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"20-25",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"25-30",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"30-35",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"35-40",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"40-45",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"45-50",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"50-55",path:"M25 0 L25 40 L10 40 L25 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"55-60",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"60-65",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"65-70",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"70-75",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"75-80",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"80-85",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"85-90",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"90-95",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"95-100",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"100-105",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"105-110",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"110-115",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"115-120",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"120-125",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"125-130",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"130-135",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"135-140",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"140-145",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"145-150",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="}],n=si.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC",height:20,width:20,type:"esriPMS",angle:0}),t=e.map((r,o)=>{let l;if(o!==e.length-1)if(o===0)l={minValue:r,maxValue:e[o+1],symbol:n};else{const u=si.fromJSON({type:"esriPMS",imageData:i[o].imageData,contentType:"image/svg+xml",height:32,width:32,angle:0});l={minValue:r,maxValue:e[o+1],symbol:u}}return new $i(l)});return{defaultSymbol:n,classBreakInfos:t}}_getClassBreaks(e,i){return i.map((n,t)=>new $i({minValue:e[t],maxValue:e[t+1],symbol:this._getDefaultSymbol(new ee(n))}))}};s([a({type:["Magnitude"],json:{write:!0}})],$.prototype,"attributeField",void 0),s([a({type:Tt.apiValues,json:{type:Tt.jsonValues,read:{reader:Tt.read},write:{writer:Tt.write}}})],$.prototype,"flowRepresentation",void 0),s([a({type:["geographic","arithmetic"],json:{write:!0}})],$.prototype,"rotationType",void 0),s([a({type:jt.apiValues,json:{type:jt.jsonValues,read:{reader:jt.read},write:{writer:jt.write}}})],$.prototype,"style",void 0),s([a({json:{write:!0}})],$.prototype,"symbolTileSize",void 0),s([a({type:Oe.apiValues,json:{type:Oe.jsonValues,write:{writer:Oe.write}}})],$.prototype,"inputUnit",void 0),s([z("inputUnit")],$.prototype,"readInputUnit",null),s([a({type:Oe.apiValues,json:{type:Oe.jsonValues,read:{reader:Oe.read},write:{writer:Oe.write}}})],$.prototype,"outputUnit",void 0),s([z("outputUnit")],$.prototype,"readOutputUnit",null),s([qe({vectorField:"vector-field"})],$.prototype,"type",void 0),s([a({type:$t})],$.prototype,"styleRenderer",null),s([a({type:Kt})],$.prototype,"sizeVariables",null),s([a({type:gr})],$.prototype,"rotationVariables",null),$=Mi=s([w("esri.renderers.VectorFieldRenderer")],$);const Ui=$,Dn=.25,xn=Ir.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),rr=Ir.fromJSON(bs[0]),Nr=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function An(e){var i;return(i=e.presetRenderers)==null?void 0:i.find(({method:n,value:t})=>n==="raster-function-template"?t===e.rasterFunctionName:n==="variable"&&t===e.variableName)}function jn(e,i){const{attributeTable:n,colormap:t}=e;if(Fi(e)){const r=Bn(e);if(r!=null)return r}if(i!=null&&i.rasterFunctionColorRamp){const r=sr(e,i);return r.colorRamp=i.rasterFunctionColorRamp,r}if(t!=null){const r=zn(e);if(r!=null)return r}if(n!=null){const r=Ln(e);if(r!=null)return r}return sr(e,i)}function Tn(e,i=!1){const n=["raster-stretch"];return cr(e,i)&&n.push("raster-colormap"),pr(e)&&n.push("unique-value"),js(e,i)&&n.push("class-breaks"),Ts(e)&&n.push("raster-shaded-relief"),Fi(e)&&n.push("vector-field"),Ns(e)&&n.push("flow"),n}function fl(e){return e.datasetFormat==="Function"&&e.rasterFunction.functionName==="Colormap"?e.rasterFunction.colorRamp:void 0}function wl(e,i,n){const t=["nearest","bilinear","cubic","majority"],r=n==null?void 0:n.toLowerCase().replace("bicubic","cubic"),o=t.find(l=>l===r);return i==="Map"?o??"bilinear":e.dataType==="standard-time"?o??"nearest":e.dataType==="thematic"||e.attributeTable||e.colormap?o==="nearest"||o==="majority"?o:"nearest":o??"bilinear"}function sr(e,i){var d;e=Nn(e,i==null?void 0:i.variableName);const{bandCount:n}=e;let{bandIds:t,stretchType:r}=i||{};t!=null&&t.some(y=>y>=n)&&(t=null);let o=e.statistics,l=e.histograms;n>1?(t=t!=null&&t.length?t:Cr(e),o=o==null?null:t==null?void 0:t.map(y=>o[y]),l=l==null?null:t==null?void 0:t.map(y=>l[y])):t=[0],r==null&&(r=Fn(e)),i!=null&&i.includeStatisticsInStretch&&(r==="percent-clip"||r==="histogram-equalization")&&((d=e.statistics)!=null&&d.length)&&(r="min-max");let u=!1;switch(r){case"none":u=!1;break;case"percent-clip":u=!(l!=null&&l.length);break;default:u=!(o!=null&&o.length)}const{dataType:p}=e,m=(t==null?void 0:t.length)===1&&Nr.has(p)?xn:null,c=new Bi({stretchType:r,dynamicRangeAdjustment:u,colorRamp:m,outputMin:0,outputMax:255,gamma:(t==null?void 0:t.length)===1?[1]:[1,1,1],useGamma:!1});return r==="percent-clip"?c.maxPercent=c.minPercent=Dn:r==="standard-deviation"&&(c.numberOfStandardDeviations=2),u||e.multidimensionalInfo==null&&!(i!=null&&i.includeStatisticsInStretch)||(r==="percent-clip"?c.histograms=l:r!=="min-max"&&r!=="standard-deviation"||(c.statistics=o)),c}function Nn(e,i){const{multidimensionalInfo:n}=e;if(!i||!n)return e;const t=n.variables.find(r=>r.name===i);if(!t)return e;if(e=e.clone(),t){const{statistics:r,histograms:o}=t;r!=null&&r.length&&(e.statistics=r.map(l=>({min:l.min,max:l.max,avg:l.avg,stddev:l.stddev}))),o!=null&&o.length&&(e.histograms=o)}return e}function Cr(e){const i=e.bandCount;if(i===1)return null;if(i===2)return[0];const{bandInfos:n}=e;let t;if(n.length===i){const{red:r,green:o,blue:l,nir:u}=Cn(n);r!=null&&o!=null&&l!=null?t=[r,o,l]:u!=null&&r!=null&&o!=null&&(t=[u,r,o])}return!t&&i>=3&&(t=[0,1,2]),t}function Cn(e){const i={};for(let n=0;n<e.length;n++){const t=e[n],r=t.name.toLowerCase();if(r==="red")i.red=n;else if(r==="green")i.green=n;else if(r==="blue")i.blue=n;else if(r==="nearinfrared"||r==="nearinfrared_1"||r==="nir")i.nir=n;else if(t.maxWavelength&&t.minWavelength){const o=t.minWavelength,l=t.maxWavelength;i.blue==null&&o>=410&&o<=480&&l>=480&&l<=540?i.blue=n:i.green==null&&o>=490&&o<=560&&l>=560&&l<=610?i.green=n:i.red==null&&o>=595&&o<=670&&l>=660&&l<=730?i.red=n:i.nir==null&&o>=700&&o<=860&&l>=800&&l<=950&&(i.nir=n)}}return i}function Fn(e){let i="percent-clip";const{pixelType:n,dataType:t,histograms:r,statistics:o,multidimensionalInfo:l}=e,u=Nr.has(t)||t==="generic"&&l!=null;return n!=="u8"||t!=="processed"&&r!=null&&o!=null?n==="u8"||t==="elevation"||u?i="min-max":r!=null?i="percent-clip":o!=null&&(i="min-max"):i="none",i}function Ln(e,i,n,t){if(!pr(e,i))return null;const{attributeTable:r,statistics:o}=e,l=Fr(r,i),u=St(r,"red"),p=St(r,"green"),m=St(r,"blue"),c=new hr,d=[],y=new Set,g=!!(u&&p&&m);if(r!=null)r.features.forEach(f=>{const h=f.attributes[l.name];if(!y.has(f.attributes[l.name])&&h!=null){y.add(h);const I=g&&(u.type==="single"||u.type==="double")&&(p.type==="single"||p.type==="double")&&(m.type==="single"||m.type==="double")&&!r.features.some(S=>S.attributes[u.name]>1||S.attributes[p.name]>1||S.attributes[m.name]>1),M=I?255:1;d.push(new Xi({value:f.attributes[l.name],label:f.attributes[l.name]+"",symbol:new Wi({style:"solid",outline:null,color:new ee(g?[f.attributes[u.name]*M,f.attributes[p.name]*M,f.attributes[m.name]*M,1]:[0,0,0,0])})}))}});else if(o!=null&&o[0])for(let f=o[0].min;f<=o[0].max;f++)d.push(new Xi({value:f,label:f.toString(),symbol:new Wi({style:"solid",outline:null,color:new ee([0,0,0,0])})}));if(d.sort((f,h)=>f.value&&typeof f.value.valueOf()=="string"?0:f.value>h.value?1:-1),!g){const f=Qt(rr,{numColors:d.length});d.forEach((h,I)=>h.symbol.color=new ee(f[I].slice(1,4))),c.colorRamp=rr}return new Pi({field:l.name,uniqueValueInfos:d,authoringInfo:c})}function Fr(e,i,n){let t;return e!=null?(t=i?e.fields.find(r=>i.toLowerCase()===r.name.toLowerCase()):Pn(e.fields),t||(n||(t=e.fields.find(r=>r.type==="string")),t||(t=St(e,"value")))):t=new fr({name:"value"}),t}function Pn(e){let i;for(let n=0;n<e.length;n++){const t=e[n].name.toLowerCase();if(e[n].type==="string"){if(t.startsWith("class")){i=e[n];break}i==null&&(t.endsWith("name")||t.endsWith("type"))&&(i=e[n])}}return i}function St(e,i){return e==null?null:e.fields.find(n=>n.name.toLowerCase()===i)}function zn(e){if(!cr(e))return null;let i;const{attributeTable:n,colormap:t}=e;if(n!=null){const r=St(n,"value"),o=Fr(n,null,!0);o.type==="string"&&(i={},n.features.forEach(l=>{const u=l.attributes;i[u[r.name]]=o?u[o.name]:u[r.name]}))}return Oi.createFromColormap(t,i)}const On=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function Bn(e){if(!Fi(e))return null;let i;if(e.statistics!=null&&e.statistics.length&&(e.dataType==="vector-magdir"||e.dataType==="vector-uv")){const{minMagnitude:r,maxMagnitude:o}=_n(e.dataType,e.statistics);i=[new Kt({field:"Magnitude",minSize:10,maxSize:40,minDataValue:r,maxDataValue:o})]}const n=e.multidimensionalInfo!=null?On.get(e.multidimensionalInfo.variables[0].unit):void 0,t=new Ui({visualVariables:i,inputUnit:n,rotationType:"geographic"});return t.visualVariables=[...t.sizeVariables,...t.rotationVariables],t}function nr(e){var i;return{color:(i=e.symbolLayers[0].material)==null?void 0:i.color,type:"esriSFS",style:"esriSFSSolid"}}function Un(e){var i,n,t,r;if(e.type==="uniqueValue"){const o=e.uniqueValueInfos;return(n=(i=o==null?void 0:o[0].symbol)==null?void 0:i.symbolLayers)!=null&&n.length&&(e.uniqueValueInfos=o==null?void 0:o.map(l=>({value:l.value,label:l.label,symbol:l.symbol?nr(l.symbol):null}))),e}if(e.type==="classBreaks"){const o=e.classBreakInfos;return(r=(t=o[0].symbol)==null?void 0:t.symbolLayers)!=null&&r.length&&(e.classBreakInfos=o.map(l=>({classMinValue:l.classMinValue,classMaxValue:l.classMaxValue,label:l.label,symbol:l.symbol?nr(l.symbol):null}))),e}return e}function _n(e,i){let n,t;if(e==="vector-magdir")n=i[0].min,t=i[0].max;else{const r=i[0].min,o=i[0].max,l=i[1].min,u=i[1].max;n=0,t=Math.max(Math.abs(r),Math.abs(l),Math.abs(o),Math.abs(u))}return{minMagnitude:n,maxMagnitude:t}}const qt={key:"type",base:null,typeMap:{"unique-value":Pi,"class-breaks":$t,"raster-colormap":Oi,"raster-stretch":Bi,"vector-field":Ui,"raster-shaded-relief":Tr,flow:Ar}},Wt={...qt,typeMap:{...qt.typeMap}};delete Wt.typeMap["vector-field"],delete Wt.typeMap.flow;const Hn={uniqueValue:Pi,classBreaks:$t,rasterStretch:Bi,rasterColormap:Oi,vectorField:Ui,rasterShadedRelief:Tr,flowRenderer:Ar};function En(e){return e&&Hn[e.type]||null}function Vn(e,i){if(!e)return null;if(e.type==="classBreaks"&&e.classificationMethod){const t=e.authoringInfo||{classificationMethod:""};t.classificationMethod=e.classificationMethod,e.authoringInfo=t}e.type==="vectorField"&&e.visualVariables&&!Array.isArray(e.visualVariables)&&(e.visualVariables=[e.visualVariables]);const n=En(e);if(n){const t=new n;return t.read(e,i),t}return i!=null&&i.messages&&e&&i.messages.push(new Gr("renderer:unsupported","Renderers of type '"+(e.type||"unknown")+"' are not supported",{definition:e,context:i})),null}let _e=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([a({type:L,json:{read:!0}})],_e.prototype,"fromGeometry",void 0),s([a({type:L,json:{read:!0,write:!0}})],_e.prototype,"toGeometry",void 0),s([a({json:{write:!0}})],_e.prototype,"objectIds",void 0),s([a({type:String,json:{write:!0}})],_e.prototype,"where",void 0),s([a({type:Number,json:{write:!0}})],_e.prototype,"maxCount",void 0),_e=s([w("esri.rest.support.FindImagesParameters")],_e);const kn=_e,Lr=e=>{let i=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([a({json:{write:!0}})],i.prototype,"make",void 0),s([a({json:{write:!0}})],i.prototype,"model",void 0),s([a({json:{write:!0}})],i.prototype,"focalLength",void 0),s([a({json:{write:!0}})],i.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],i.prototype,"rows",void 0),s([a({json:{write:!0}})],i.prototype,"cols",void 0),i=s([w("esri.rest.support.CameraInfoMixin")],i),i};let he=class extends Lr(v){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,i){i.acquisitionDate=e==null?void 0:e.getTime()}};s([a({json:{write:!0}})],he.prototype,"id",void 0),s([a({json:{name:"uri",write:!0}})],he.prototype,"referenceUri",void 0),s([a({type:Date,json:{write:!0}})],he.prototype,"acquisitionDate",void 0),s([T("acquisitionDate")],he.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],he.prototype,"cameraID",void 0),s([a({type:L,json:{write:!0}})],he.prototype,"center",void 0),s([a({type:L,json:{write:!0}})],he.prototype,"perspectiveCenter",void 0),s([a({json:{write:!0}})],he.prototype,"orientation",void 0),he=s([w("esri.rest.support.ImageInspectionInfo")],he);const Jn=he;let Lt=class extends v{constructor(){super(...arguments),this.images=null}};s([a({type:[Jn],json:{write:!0}})],Lt.prototype,"images",void 0),Lt=s([w("esri.rest.support.FindImagesResult")],Lt);const Zn=Lt;var vi;let $e=vi=class extends v{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new vi(A({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([a({type:[String],json:{name:"angleName",write:!0}})],$e.prototype,"angleNames",void 0),s([a({type:L,json:{write:!0}})],$e.prototype,"point",void 0),s([a({type:Me,json:{write:!0}})],$e.prototype,"spatialReference",void 0),s([a({type:ie,json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=vi=s([w("esri.rest.support.ImageAngleParameters")],$e);const Gn=$e;let st=class extends v{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};s([a({type:Number,json:{write:!0}})],st.prototype,"north",void 0),s([a({type:Number,json:{write:!0}})],st.prototype,"up",void 0),s([a({type:Me,json:{write:!0}})],st.prototype,"spatialReference",void 0),st=s([w("esri.rest.support.ImageAngleResult")],st);const qn=st,ce=new ct({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ke=class extends v{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([a({type:Number,json:{read:!0,write:!0}})],ke.prototype,"value",void 0),s([a({type:String,json:{read:!0,write:!0}})],ke.prototype,"displayValue",void 0),s([a({type:Number,json:{read:!0,write:!0}})],ke.prototype,"uncertainty",void 0),ke=s([w("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],ke);let pt=class extends ke{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Ge.read,write:Ge.write}})],pt.prototype,"unit",void 0),pt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],pt);let Pt=class extends ke{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:kt.read,write:kt.write}})],Pt.prototype,"unit",void 0),Pt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Pt);let Rt=class extends ke{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Jt.read,write:Jt.write}})],Rt.prototype,"unit",void 0),Rt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],Rt);let He=class extends v{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([a()],He.prototype,"type",void 0),s([a({type:ce.apiValues,json:{read:ce.read,write:ce.write}})],He.prototype,"measureOperation",void 0),s([a({type:oe,json:{write:!0}})],He.prototype,"mosaicRule",void 0),s([a({type:L,json:{write:!0}})],He.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],He.prototype,"raster",void 0),He=s([w("esri.rest.support.BaseImageMeasureParameters")],He);const Yt=He;var bi;let Ne=bi=class extends Yt{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new bi(A({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:re,json:{name:"fromGeometry",read:!0,write:!0}})],Ne.prototype,"geometry",void 0),s([T("geometry")],Ne.prototype,"writeGeometry",null),s([a({type:ce.apiValues,json:{write:ce.write}})],Ne.prototype,"measureOperation",null),s([a({json:{read:!0}})],Ne.prototype,"is3D",void 0),s([a({type:String,json:{read:Ge.read,write:Ge.write}})],Ne.prototype,"linearUnit",void 0),s([a({type:String,json:{read:kt.read,write:kt.write}})],Ne.prototype,"areaUnit",void 0),Ne=bi=s([w("esri.rest.support.ImageAreaParameters")],Ne);const Wn=Ne;let gt=class extends v{constructor(e){super(e),this.name=null,this.sensorName=null}};s([a({type:String,json:{read:!0,write:!0}})],gt.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],gt.prototype,"sensorName",void 0),gt=s([w("esri.rest.support.BaseImageMeasureResult")],gt);const ei=gt;let ft=class extends ei{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([a({type:Pt,json:{read:!0,write:!0}})],ft.prototype,"area",void 0),s([a({type:pt,json:{read:!0,write:!0}})],ft.prototype,"perimeter",void 0),ft=s([w("esri.rest.support.ImageAreaResult")],ft);const Qn=ft;let zt=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.outSpatialReference=null}};s([a({type:Me,json:{name:"outSR",write:!0}})],zt.prototype,"outSpatialReference",void 0),zt=s([w("esri.rest.support.ImageBoundaryParameters")],zt);const Kn=zt;let nt=class extends v{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,i){return e==null?null:e.rings?Zt.fromJSON(e):Je.fromJSON(e)}};s([a({type:Number,json:{write:!0}})],nt.prototype,"area",void 0),s([a({types:re,json:{name:"shape",write:!0}})],nt.prototype,"geometry",void 0),s([z("geometry")],nt.prototype,"readGeometry",null),nt=s([w("esri.rest.support.ImageBoundaryResult")],nt);const $n=nt;var Si;let be=Si=class extends Yt{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Si(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:L,json:{read:!0,write:!0}})],be.prototype,"fromGeometry",void 0),s([T("fromGeometry")],be.prototype,"writeFromGeometry",null),s([a({type:L,json:{read:!0,write:!0}})],be.prototype,"toGeometry",void 0),s([a({type:ce.apiValues,json:{write:ce.write}})],be.prototype,"measureOperation",null),s([a({json:{read:!0}})],be.prototype,"is3D",void 0),s([a({type:String,json:{read:Ge.read,write:Ge.write}})],be.prototype,"linearUnit",void 0),s([a({type:String,json:{read:Jt.read,write:Jt.write}})],be.prototype,"angularUnit",void 0),be=Si=s([w("esri.rest.support.ImageDistanceParameters")],be);const Xn=be;let ot=class extends ei{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([a({type:pt,json:{read:!0,write:!0}})],ot.prototype,"distance",void 0),s([a({type:Rt,json:{read:!0,write:!0}})],ot.prototype,"azimuthAngle",void 0),s([a({type:Rt,json:{read:!0,write:!0}})],ot.prototype,"elevationAngle",void 0),ot=s([w("esri.rest.support.ImageDistanceResult")],ot);const Yn=ot;let Ce=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=JSON.stringify(e.toJSON()))}};s([a({types:re,json:{read:ae,write:!0}})],Ce.prototype,"geometry",void 0),s([T("geometry")],Ce.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Ce.prototype,"objectIds",void 0),s([qe(Js,{ignoreUnknown:!1,name:"spatialRel"})],Ce.prototype,"spatialRelationship",void 0),s([a({type:Xt,json:{name:"time",write:!0}})],Ce.prototype,"timeExtent",void 0),s([a({type:String,json:{write:!0}})],Ce.prototype,"where",void 0),Ce=s([w("esri.rest.support.ImageGPSInfoParameters")],Ce);const eo=Ce;let Ot=class extends Lr(v){constructor(){super(...arguments),this.id=null}};s([a({json:{write:!0}})],Ot.prototype,"id",void 0),Ot=s([w("esri.rest.support.CameraInfo")],Ot);const to=Ot;let ge=class extends v{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,i){i.acquisitionDate=e==null?void 0:e.getTime()}};s([a({json:{write:!0}})],ge.prototype,"id",void 0),s([a({json:{write:!0}})],ge.prototype,"name",void 0),s([a({type:Date,json:{write:!0}})],ge.prototype,"acquisitionDate",void 0),s([T("acquisitionDate")],ge.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],ge.prototype,"cameraID",void 0),s([a({type:L,json:{write:!0}})],ge.prototype,"center",void 0),s([a({json:{write:!0}})],ge.prototype,"gps",void 0),s([a({json:{write:!0}})],ge.prototype,"orientation",void 0),ge=s([w("esri.rest.support.ImageGPSInfo")],ge);const io=ge;let wt=class extends v{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([a({type:[io],json:{write:!0}})],wt.prototype,"images",void 0),s([a({type:[to],json:{write:!0}})],wt.prototype,"cameras",void 0),wt=s([w("esri.rest.support.ImageGPSInfoResult")],wt);const ro=wt;var Ri;let Fe=Ri=class extends Yt{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new Ri(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:L,json:{read:!0}})],Fe.prototype,"fromGeometry",void 0),s([T("fromGeometry")],Fe.prototype,"writeFromGeometry",null),s([a({type:L,json:{read:!0,write:!0}})],Fe.prototype,"toGeometry",void 0),s([a({type:ce.apiValues,json:{write:ce.write}})],Fe.prototype,"measureOperation",null),s([a({json:{read:!0}})],Fe.prototype,"operationType",void 0),s([a({type:String,json:{read:Ge.read,write:Ge.write}})],Fe.prototype,"linearUnit",void 0),Fe=Ri=s([w("esri.rest.support.ImageHeightParameters")],Fe);const so=Fe;let Bt=class extends ei{constructor(){super(...arguments),this.height=null}};s([a({type:pt,json:{read:!0,write:!0}})],Bt.prototype,"height",void 0),Bt=s([w("esri.rest.support.ImageHeightResult")],Bt);const no=Bt;var Di;let Se=Di=class extends v{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}clone(){return new Di(A({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([a({types:re,json:{read:ae}})],Se.prototype,"geometry",void 0),s([T("geometry")],Se.prototype,"writeGeometry",null),s([a({type:oe,json:{write:!0}})],Se.prototype,"mosaicRule",void 0),s([a({type:N,json:{write:!0,name:"renderingRule"}})],Se.prototype,"rasterFunction",void 0),s([a({type:L,json:{write:!0}})],Se.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Se.prototype,"raster",void 0),s([a({type:Xt,json:{read:{source:"time"},write:{target:"time"}}})],Se.prototype,"timeExtent",void 0),Se=Di=s([w("esri.rest.support.ImageHistogramParameters")],Se);const oo=Se;var xi;let _=xi=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let i=e;i!=null&&i.mosaicMethod&&(i=oe.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(e,i,n){e!=null&&(i[n]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let i=e;i!=null&&i.rasterFunction&&(i=N.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(e,i,n){e!=null&&(i[n]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(i[n]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,i,n){e!=null&&(i[n]=JSON.stringify(e.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(e,i,n){e!=null&&(i[n]=JSON.stringify(e))}writeTimeExtent(e,i,n){if(e!=null){const t=e.start!=null?e.start.getTime():null,r=e.end!=null?e.end.getTime():null;i[n]=t!=null?r!=null?`${t},${r}`:`${t}`:null}}clone(){return new xi(A({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([a({types:re,json:{write:!0}})],_.prototype,"geometry",void 0),s([T("geometry")],_.prototype,"writeGeometry",null),s([a({type:oe,json:{write:!0}})],_.prototype,"mosaicRule",null),s([T("mosaicRule")],_.prototype,"writeMosaicRule",null),s([a({type:N,json:{write:!0,name:"renderingRule"}})],_.prototype,"rasterFunction",null),s([T("rasterFunction")],_.prototype,"writeRasterFunction",null),s([a({type:[N],json:{write:!0,name:"renderingRules"}})],_.prototype,"rasterFunctions",void 0),s([T("rasterFunctions")],_.prototype,"writeRasterFunctions",null),s([a({type:L,json:{write:!0}})],_.prototype,"pixelSize",void 0),s([T("pixelSize")],_.prototype,"writePixelSize",null),s([a({type:Boolean,json:{write:!0}})],_.prototype,"returnGeometry",void 0),s([a({type:Boolean,json:{write:!0}})],_.prototype,"returnCatalogItems",void 0),s([a({type:Boolean,json:{write:!0}})],_.prototype,"returnPixelValues",void 0),s([a({type:Number,json:{write:!0}})],_.prototype,"maxItemCount",void 0),s([a({type:Xt,json:{write:{target:"time"}}})],_.prototype,"timeExtent",void 0),s([T("timeExtent")],_.prototype,"writeTimeExtent",null),s([a({json:{write:!0}})],_.prototype,"raster",void 0),s([a({json:{write:!0}})],_.prototype,"viewId",void 0),s([a({type:Boolean,json:{write:!0}})],_.prototype,"processAsMultidimensional",void 0),_=xi=s([w("esri.rest.support.ImageIdentifyParameters")],_);const Pr=_;let fe=class extends v{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([a({json:{write:!0}})],fe.prototype,"catalogItemVisibilities",void 0),s([a({type:zi,json:{write:!0}})],fe.prototype,"catalogItems",void 0),s([a({type:L,json:{write:!0}})],fe.prototype,"location",void 0),s([a({json:{write:!0}})],fe.prototype,"name",void 0),s([a({json:{write:!0}})],fe.prototype,"objectId",void 0),s([a({json:{write:!0}})],fe.prototype,"processedValues",void 0),s([a({json:{write:!0}})],fe.prototype,"properties",void 0),s([a({json:{write:!0}})],fe.prototype,"value",void 0),fe=s([w("esri.rest.support.ImageIdentifyResult")],fe);const ao=fe;var Ai;let at=Ai=class extends v{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,i,n){i.geometries={geometryType:"esriGeometryPoint",geometries:e.map(t=>t.toJSON())}}clone(){var e;return new Ai({geometries:((e=this.geometries)==null?void 0:e.map(i=>i.clone()))??[],rasterId:this.rasterId})}};s([a({type:[L],json:{write:!0}})],at.prototype,"geometries",void 0),s([T("geometries")],at.prototype,"writeGeometry",null),s([a({type:ie,json:{write:!0}})],at.prototype,"rasterId",void 0),at=Ai=s([w("esri.rest.support.ImagePixelLocationParameters")],at);const lo=at;let Ut=class extends v{constructor(){super(...arguments),this.geometries=null}};s([a({json:{write:!0}})],Ut.prototype,"geometries",void 0),Ut=s([w("esri.rest.support.ImagePixelLocationResult")],Ut);const uo=Ut;var ji;let Xe=ji=class extends Yt{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:i}=this;return i.type==="point"?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new ji(A({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:re,json:{name:"fromGeometry",read:ae}})],Xe.prototype,"geometry",void 0),s([T("geometry")],Xe.prototype,"writeGeometry",null),s([a({type:ce.apiValues,json:{read:ce.read,write:ce.write}})],Xe.prototype,"measureOperation",null),s([a({json:{read:!0}})],Xe.prototype,"is3D",void 0),Xe=ji=s([w("esri.rest.support.ImagePointParameters")],Xe);const po=Xe;let _t=class extends ei{constructor(){super(...arguments),this.point=null}};s([a({type:L,json:{name:"point.value",read:!0,write:!0}})],_t.prototype,"point",void 0),_t=s([w("esri.rest.support.ImagePointResult")],_t);const co=_t;var Ti;let X=Ti=class extends v{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=e.toJSON())}set locations(e){if(e!=null&&e.length){const i=new qr({spatialReference:e[0].spatialReference,points:e.map(({x:n,y:t})=>[n,t])});this._set("locations",e),this.geometry=i}}clone(){return new Ti(A({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([a({types:re,json:{read:ae}})],X.prototype,"geometry",void 0),s([T("geometry")],X.prototype,"writeGeometry",null),s([a({type:[L]})],X.prototype,"locations",null),s([a({type:String,json:{type:Ze.jsonValues,read:Ze.read,write:Ze.write}})],X.prototype,"interpolation",void 0),s([a({type:oe,json:{write:!0}})],X.prototype,"mosaicRule",void 0),s([a({type:[String],json:{write:!0}})],X.prototype,"outFields",void 0),s([a({type:L,json:{write:!0}})],X.prototype,"pixelSize",void 0),s([a({type:String,json:{write:!0}})],X.prototype,"raster",void 0),s([a({type:Boolean,json:{write:!0}})],X.prototype,"returnFirstValueOnly",void 0),s([a({type:Number,json:{write:!0}})],X.prototype,"sampleDistance",void 0),s([a({type:Number,json:{write:!0}})],X.prototype,"sampleCount",void 0),s([a({type:Number,json:{write:!0}})],X.prototype,"sliceId",void 0),s([a({type:Xt,json:{read:{source:"time"},write:{target:"time"}}})],X.prototype,"timeExtent",void 0),X=Ti=s([w("esri.rest.support.ImageSampleParameters")],X);const mo=X;let Le=class extends v{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([a({json:{write:!0}})],Le.prototype,"attributes",void 0),s([a({type:L,json:{write:!0}})],Le.prototype,"location",void 0),s([a({json:{write:!0}})],Le.prototype,"locationId",void 0),s([a({json:{write:!0}})],Le.prototype,"rasterId",void 0),s([a({json:{write:!0}})],Le.prototype,"resolution",void 0),s([a({json:{write:!0}})],Le.prototype,"pixelValue",void 0),Le=s([w("esri.rest.support.ImageSample")],Le);const yo=Le;let Ht=class extends v{constructor(){super(...arguments),this.samples=[]}};s([a({type:[yo],json:{write:!0}})],Ht.prototype,"samples",void 0),Ht=s([w("esri.rest.support.ImageSampleResult")],Ht);const ho=Ht;let Ye=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,i,n){i.geometries=e!=null&&e.length?{geometryType:le(e[0]),geometries:e.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};s([a({types:[re]})],Ye.prototype,"geometries",void 0),s([T("geometries")],Ye.prototype,"writeGeometries",null),s([a({type:[ie],json:{write:!0}})],Ye.prototype,"rasterIds",void 0),s([a({type:Me,json:{name:"outSR",write:!0}})],Ye.prototype,"outSpatialReference",void 0),Ye=s([w("esri.rest.support.ImageToMapMultirayParameters")],Ye);const go=Ye;let Pe=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]={...e.toJSON(),spatialReference:void 0})}};s([a({types:re,json:{read:ae,write:!0}})],Pe.prototype,"geometry",void 0),s([T("geometry")],Pe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Pe.prototype,"rasterId",void 0),s([a({type:Me,json:{name:"outSR",write:!0}})],Pe.prototype,"outSpatialReference",void 0),s([a({json:{name:"options.DOff",write:!0}})],Pe.prototype,"depthOffset",void 0),s([a({json:{name:"options.Adjust",write:!0}})],Pe.prototype,"adjust",void 0),Pe=s([w("esri.rest.support.ImageToMapParameters")],Pe);const fo=Pe;let It=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([a({type:String,json:{name:"uri",write:!0}})],It.prototype,"referenceUri",void 0),s([a({type:Number,json:{write:!0}})],It.prototype,"rasterId",void 0),It=s([w("esri.rest.support.ImageUrlParameters")],It);const wo=It;let Et=class extends v{constructor(){super(...arguments),this.url=null}};s([a({json:{name:"imageURL",write:!0}})],Et.prototype,"url",void 0),Et=s([w("esri.rest.support.ImageUrlResult")],Et);const Io=Et,ui=new ct({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let ze=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,i,n){e!=null&&e.length&&(i.geometryType=le(e[0]),i.geometries=e.map(t=>t.toJSON()))}};s([a({types:[re]})],ze.prototype,"geometries",void 0),s([T("geometries")],ze.prototype,"writeGeometries",null),s([a({type:oe,json:{write:!0}})],ze.prototype,"mosaicRule",void 0),s([a({type:L,json:{write:!0}})],ze.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],ze.prototype,"constantZ",void 0),s([a({type:ui.apiValues,json:{read:ui.read,write:ui.write}})],ze.prototype,"baseType",void 0),ze=s([w("esri.rest.support.ImageVolumeParameters")],ze);const Mo=ze;let we=class extends v{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};s([a({json:{write:!0}})],we.prototype,"area",void 0),s([a({json:{write:!0}})],we.prototype,"cut",void 0),s([a({json:{write:!0}})],we.prototype,"fill",void 0),s([a({json:{name:"maxz",write:!0}})],we.prototype,"maxZ",void 0),s([a({json:{name:"minz",write:!0}})],we.prototype,"minZ",void 0),s([a({json:{name:"meanz",write:!0}})],we.prototype,"meanZ",void 0),s([a({json:{write:!0}})],we.prototype,"cutCellCount",void 0),s([a({json:{write:!0}})],we.prototype,"fillCellCount",void 0),we=s([w("esri.rest.support.ImageVolume")],we);const vo=we;let Vt=class extends v{constructor(){super(...arguments),this.volumes=[]}};s([a({type:[vo],json:{write:!0}})],Vt.prototype,"volumes",void 0),Vt=s([w("esri.rest.support.ImageVolumeResult")],Vt);const bo=Vt;let et=class extends Ae.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]=JSON.stringify(e))}};s([a({types:re,json:{read:ae,write:!0}})],et.prototype,"geometry",void 0),s([T("geometry")],et.prototype,"writeGeometry",null),s([a({json:{write:!0}})],et.prototype,"rasterId",void 0),s([a({json:{name:"options.VisibleOnly",write:!0}})],et.prototype,"visibleOnly",void 0),et=s([w("esri.rest.support.MapToImageParameters")],et);const So=et;let Ee=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,i){return e.spatialReference||(e={...e,spatialReference:i.Shape.spatialReference}),L.fromJSON(e)}};s([a({types:re,json:{name:"Shape",read:ae,write:!0}})],Ee.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],Ee.prototype,"length",void 0),s([a({json:{name:"Area",write:!0}})],Ee.prototype,"area",void 0),s([a({type:L,json:{name:"Center",write:!0}})],Ee.prototype,"center",void 0),s([z("center")],Ee.prototype,"readCenter",null),Ee=s([w("esri.rest.support.MeasureAreaFromImageResult")],Ee);const Ro=Ee;var Ni;let lt=Ni=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,i,n){e!=null&&(i.geometryType=le(e),i[n]={...e.toJSON(),spatialReference:void 0})}clone(){const e=A({geometry:this.geometry,rasterId:this.rasterId});return new Ni(e)}};s([a({types:re,json:{name:"fromGeometry",read:ae,write:!0}})],lt.prototype,"geometry",void 0),s([T("geometry")],lt.prototype,"writeGeometry",null),s([a({json:{write:!0}})],lt.prototype,"rasterId",void 0),lt=Ni=s([w("esri.rest.support.MeasureFromImageParameters")],lt);const Do=lt;let Mt=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([a({types:re,json:{name:"Shape",read:ae,write:!0}})],Mt.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],Mt.prototype,"length",void 0),Mt=s([w("esri.rest.support.MeasureLengthFromImageResult")],Mt);const xo=Mt;function _i(e){const i=e==null?void 0:e.time;if(i&&(i.start!=null||i.end!=null)){const n=[];i.start!=null&&n.push(i.start),i.end==null||n.includes(i.end)||n.push(i.end),e.time=n.join(",")}}async function zr(e,i,n){i=V(oo,i);const t=J(e),r=i.geometry?[i.geometry]:[],o=await We(r),l=i.toJSON();_i(l);const u=o==null?void 0:o[0];u!=null&&(l.geometry=xe(u));const p=W({...t.query,f:"json",...l});return Q(p,n)}async function Ao(e,i,n){const t=(i=V(Mo,i)).toJSON();t.geometries=JSON.stringify(t.geometries);const r=J(e),o=W({...r.query,f:"json",...t}),l=Q(o,n),{data:u}=await D(`${r.path}/calculateVolume`,l);return bo.fromJSON({volumes:u.results})}async function jo(e,i,n){var p,m,c;const t=(i=V(Gn,i)).toJSON();t.angleName!=null&&(t.angleName=t.angleName.join(",")),(m=(p=i==null?void 0:i.point)==null?void 0:p.spatialReference)!=null&&m.imageCoordinateSystem&&(t.point.spatialReference=ii(i.point.spatialReference)),(c=i==null?void 0:i.spatialReference)!=null&&c.imageCoordinateSystem&&(t.spatialReference=mt(i.spatialReference));const r=J(e),o=W({...r.query,f:"json",...t}),l=Q(o,n),{data:u}=await D(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new Me({wkid:0,imageCoordinateSystem:u.spatialReference}):Me.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new qn(u)}async function To(e,i,n){var m;const t=(i=V(lo,i)).toJSON(),{geometries:r}=i;if(r)for(let c=0;c<r.length;c++)(m=r[c].spatialReference)!=null&&m.imageCoordinateSystem&&(t.geometries.geometries[c].spatialReference=ii(r[c].spatialReference));const o=J(e),l=W({...o.query,f:"json",...t}),u=Q(l,n),{data:p}=await D(`${o.path}/computePixelLocation`,u);return uo.fromJSON(p)}async function No(e,i,n){const t=await zr(e,i,n),r=J(e),{data:o}=await D(`${r.path}/computeStatisticsHistograms`,t),{statistics:l}=o;return l!=null&&l.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:o.histograms}}async function Co(e,i,n){const t=await zr(e,i,n),r=J(e),{data:o}=await D(`${r.path}/computeHistograms`,t);return{histograms:o.histograms}}async function Fo(e,i,n){var d;const t=(i=V(mo,i)).toJSON();_i(t),(d=t.outFields)!=null&&d.length&&(t.outFields=t.outFields.join(","));const r=await We(i.geometry),o=r==null?void 0:r[0];o!=null&&(t.geometry=xe(o));const l=J(e),u=W({...l.query,f:"json",...t}),p=Q(u,n),{data:m}=await D(`${l.path}/getSamples`,p),c=m.samples.map(y=>{const g=y.value==="NaN"||y.value===""?null:y.value.split(" ").map(f=>Number(f));return{...y,pixelValue:g}});return ho.fromJSON({samples:c})}async function or(e,i,n){i=V(Pr,i);const t=J(e),r=i.geometry?[i.geometry]:[];return We(r).then(o=>{const l=i.toJSON(),u=o==null?void 0:o[0];u!=null&&(l.geometry=JSON.stringify(xe(u)));const p=W({...t.query,f:"json",...l}),m=Q(p,n);return D(t.path+"/identify",m)}).then(o=>ao.fromJSON(o.data))}async function Lo(e,i,n){i=V(so,i);const t=await ti(e,i,[i.fromGeometry,i.toGeometry],n);return no.fromJSON(t)}async function Po(e,i,n){i=V(Wn,i);const t=await ti(e,i,[i.geometry],n);return Qn.fromJSON(t)}async function zo(e,i,n){i=V(po,i);const t=await ti(e,i,[i.geometry],n);return co.fromJSON(t)}async function Oo(e,i,n){i=V(Xn,i);const t=await ti(e,i,[i.fromGeometry,i.toGeometry],n);return Yn.fromJSON(t)}async function ti(e,i,n,t){const r=J(e),o=await We(n),l=i.toJSON();o[0]!=null&&(l.fromGeometry=JSON.stringify(xe(o[0]))),o[1]!=null&&(l.toGeometry=JSON.stringify(xe(o[1])));const u=W({...r.query,f:"json",...l}),p=Q(u,t),{data:m}=await D(r.path+"/measure",p);return m}async function Bo(e,i,n){const t=await Or(e,i,n);return xo.fromJSON(t)}async function Uo(e,i,n){const t=await Or(e,i,n);return Ro.fromJSON(t)}async function Or(e,i,n){i=V(Do,i);const t=J(e),r=i.toJSON(),o=W({...t.query,f:"json",...r}),l=Q(o,n),{data:u}=await D(t.path+"/measureFromImage",l);return u}function xe(e){var n;const i=e.toJSON();return(n=e.spatialReference)!=null&&n.imageCoordinateSystem&&(i.spatialReference=ii(e.spatialReference)),i}function ii(e){const{imageCoordinateSystem:i}=e;if(i){const{id:n,referenceServiceName:t}=i;return n!=null?t?{icsid:n,icsns:t}:{icsid:n}:{ics:i}}return e.toJSON()}function mt(e,i){if(!e.imageCoordinateSystem)return ci(e);const n=ii(e),{icsid:t,icsns:r}=n;return t==null||r!=null&&!(i!=null&&i.toLowerCase().includes("/"+r.toLowerCase()+"/"))?JSON.stringify(n):`0:${t}`}async function _o(e,i,n){i=V(Kn,i);const t=J(e),r=i.toJSON();i.outSpatialReference&&(r.outSR=mt(i.outSpatialReference));const o=W({...t.query,f:"json",...r}),l=Q(o,n),{data:u}=await D(t.path+"/queryBoundary",l);return $n.fromJSON(u)}async function Ho(e,i,n){var d,y;const t=(i=V(eo,i)).toJSON();_i(t),(d=t.objectIds)!=null&&d.length&&(t.objectIds=t.objectIds.join(",")),t.geometry||t.objectIds||t.time||t.where||(t.where="1=1");const r=await We(i.geometry),o=r==null?void 0:r[0];o!=null&&(t.geometry=xe(o));const l=(o==null?void 0:o.spatialReference)??((y=i.geometry)==null?void 0:y.spatialReference);l&&(t.inSR=mt(l));const u=J(e),p=W({...u.query,f:"json",...t}),m=Q(p,n),{data:c}=await D(`${u.path}/queryGPSInfo`,m);return ro.fromJSON(c)}async function Eo(e,i,n){const t=(i=V(fo,i)).toJSON();i.geometry.spatialReference.imageCoordinateSystem&&(t.geometry=xe(i.geometry)),i.depthOffset&&i.adjust||delete t.options;const r=J(e),o=W({...r.query,f:"json",...t}),l=Q(o,n),{data:u}=await D(`${r.path}/imageToMap`,l);return ae(u)}async function Vo(e,i,n){var p;const t=(i=V(go,i)).toJSON();(p=i.rasterIds)!=null&&p.length&&(t.rasterIds=i.rasterIds.join(","));const r=J(e),o=W({...r.query,f:"json",...t}),l=Q(o,n),{data:u}=await D(`${r.path}/imageToMapMultiray`,l);return ae(u)}async function ko(e,i,n){var d;const t=(i=V(So,i)).toJSON(),r=await We(i.geometry),o=r==null?void 0:r[0];o!=null&&(t.geometry=xe(o)),i.visibleOnly||delete t.options;const l=(o==null?void 0:o.spatialReference)??((d=i.geometry)==null?void 0:d.spatialReference);l&&(t.inSR=mt(l));const u=J(e),p=W({...u.query,f:"json",...t}),m=Q(p,n),{data:c}=await D(`${u.path}/mapToImage`,m);return ae(c)}async function Jo(e,i,n){const t=(i=V(wo,i)).toJSON(),r=J(e),o=W({...r.query,f:"json",...t}),l=Q(o,n),{data:u}=await D(`${r.path}/getImageUrl`,l);return Io.fromJSON(u)}async function Zo(e,i,n){var m;const t=(i=V(kn,i)).toJSON(),r=await We([i.fromGeometry,i.toGeometry]);r[0]!=null&&(t.fromGeometry=xe(r[0]),r[0].spatialReference&&(t.inSR=mt(r[0].spatialReference))),r[1]!=null&&(t.toGeometry=xe(r[1])),(m=i.objectIds)!=null&&m.length&&(t.objectIds=t.objectIds.join(","));const o=J(e),l=W({...o.query,f:"json",...t}),u=Q(l,n),{data:p}=await D(`${o.path}/find`,u);return Zn.fromJSON(p)}async function Br(e,i,n){var ve,ye,pe,x,Hi,Ei,Vi,ki,Ji,Zi;const t=J(e),{rasterFunction:r,sourceJSON:o}=i||{},l=r?JSON.stringify(r.rasterFunctionDefinition||r):null,u=W({...t.query,renderingRule:l,f:"json"}),p=Q(u,n);e=t.path;const m=o||await D(e,p).then(te=>te.data),c=m.hasRasterAttributeTable?D(`${e}/rasterAttributeTable`,p):null,d=m.hasColormap?D(`${e}/colormap`,p):null,y=m.hasHistograms?D(`${e}/histograms`,p):null,g=m.currentVersion>=10.3?D(`${e}/keyProperties`,p):null,f=m.hasMultidimensions?D(`${e}/multidimensionalInfo`,p):null,h=await Promise.allSettled([c,d,y,g,f]);let I=null;if(m.minValues&&m.minValues.length===m.bandCount){I=[];for(let te=0;te<m.minValues.length;te++)I.push({min:m.minValues[te],max:m.maxValues[te],avg:m.meanValues[te],stddev:m.stdvValues[te]})}const M=Je.fromJSON(m.extent),S=Math.ceil(M.width/m.pixelSizeX-.1),R=Math.ceil(M.height/m.pixelSizeY-.1),C=Me.fromJSON(m.spatialReference||m.extent.spatialReference),Z=h[0].status==="fulfilled"?(ve=h[0].value)==null?void 0:ve.data:null,j=(ye=Z==null?void 0:Z.features)!=null&&ye.length?zi.fromJSON(Z):null,H=h[1].status==="fulfilled"?(pe=h[1].value)==null?void 0:pe.data.colormap:null,E=H!=null&&H.length?H:null,F=h[2].status==="fulfilled"?(x=h[2].value)==null?void 0:x.data.histograms:null,P=(Ei=(Hi=F==null?void 0:F[0])==null?void 0:Hi.counts)!=null&&Ei.length?F:null,O=h[3].status==="fulfilled"?((Vi=h[3].value)==null?void 0:Vi.data)??{}:{},G=h[4].status==="fulfilled"?(ki=h[4].value)==null?void 0:ki.data.multidimensionalInfo:null,ue=(Ji=G==null?void 0:G.variables)!=null&&Ji.length?G:null;ue&&ue.variables.forEach(te=>{var Gi,qi;(Gi=te.statistics)!=null&&Gi.length&&te.statistics.forEach(je=>{je.avg=je.mean,je.stddev=je.standardDeviation}),(qi=te.dimensions)==null||qi.forEach(je=>{je.name!=="StdTime"||je.recurring||je.unit||(je.unit="ISO8601")})});const{defaultVariable:me,serviceDataType:de}=m;me&&me!==O.DefaultVariable&&(O.DefaultVariable=me),de!=null&&de.includes("esriImageServiceDataTypeVector")&&!de.includes(O.DataType)&&(O.DataType=de.replace("esriImageServiceDataType",""));let Be=m.noDataValue;(Zi=m.noDataValues)!=null&&Zi.length&&m.noDataValues.some(te=>te!==Be)&&(Be=m.noDataValues);const it=m.transposeInfo?new dr({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new L({x:m.extent.xmin,y:m.extent.ymax,spatialReference:C}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(S,R))/Math.LN2-8)),transposeInfo:m.transposeInfo}):void 0;return new Li({width:S,height:R,bandCount:m.bandCount,extent:Je.fromJSON(m.extent),spatialReference:C,pixelSize:new L({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:C}),pixelType:m.pixelType.toLowerCase(),statistics:I,attributeTable:j,colormap:E,histograms:P,keyProperties:O,noDataValue:Be,multidimensionalInfo:ue,storageInfo:it})}function ar(e,i,n){return Br(e,{sourceJSON:i},n)}function Go(e,i,n){return Br(e,{rasterFunction:i},n)}function qo(e,i){e.attributeTable||(i.hasRasterAttributeTable=!1),e.histograms||(i.hasHistograms=!1),e.colormap||(i.hasColormap=!1),e.multidimensionalInfo||(i.hasMultidimensions=!1)}async function Wo(e,i,n){var C,Z;const t=J(e),r=W({...t==null?void 0:t.query,f:"json"}),o=Q(r,n),l=`${t==null?void 0:t.path}/${i}/info`,u=D(`${l}`,o),p=D(`${l}/keyProperties`,o),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let y=null;(C=c.statistics)!=null&&C.length&&(y=c.statistics.map(j=>({min:j[0],max:j[1],avg:j[2],stddev:j[3]})));const g=Je.fromJSON(c.extent),f=Math.ceil(g.width/c.pixelSizeX-.1),h=Math.ceil(g.height/c.pixelSizeY-.1),I=g.spatialReference,M=new L({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:I}),S=(Z=c.histograms)!=null&&Z.length?c.histograms:null,R=new dr({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Li({width:f,height:h,bandCount:c.bandCount,extent:g,spatialReference:I,pixelSize:M,pixelType:c.pixelType.toLowerCase(),statistics:y,histograms:S,keyProperties:d,storageInfo:R})}const Qo=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ko=$r(Xr,{min:0,max:255});function $o(e){const i=JSON.stringify(e),n=i.includes('"rasterFunctionDefinition":{'),t=n?i.match(/"type":"(.*?FunctionArguments")/gi):i.match(/"rasterFunction":"(.*?")/gi),r=t==null?void 0:t.map(o=>n?o.slice(8,-18):o.slice(18,-1));return r?r.join("/"):null}const Xo=e=>{let i=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new U({layer:this}))}readServiceSupportsMosaicRule(t,r){return this._isMosaicRuleSupported(r)}get _rasterFunctionNamesIndex(){const t=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(r=>{t.set(r.name.toLowerCase().replaceAll(/ /gi,"_"),r.name)}),t}readBandIds(t,r){if(Array.isArray(t)&&t.length>0&&t.every(o=>typeof o=="number"))return t}readCapabilities(t,r){return this._readCapabilities(r)}writeCompressionQuality(t,r,o){t!=null&&this.format!=="lerc"&&(r[o]=t)}writeCompressionTolerance(t,r,o){this.format==="lerc"&&t!=null&&(r[o]=t)}readDefaultMosaicRule(t,r){return this._serviceSupportsMosaicRule?oe.fromJSON(r):null}get fieldsIndex(){return this.fields?new Fs(this.fields):null}set format(t){t&&Qo.has(t.toLowerCase())&&this._set("format",t.toLowerCase())}readFormat(t,r){return r.serviceDataType==="esriImageServiceDataTypeVector-UV"||r.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(t,r){return r.minLOD!=null&&r.maxLOD!=null?t:0}readMaxScale(t,r){return r.minLOD!=null&&r.maxLOD!=null?t:0}set mosaicRule(t){let r=t;r!=null&&r.mosaicMethod&&(r=oe.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}readMosaicRule(t,r){const o=t||r.mosaicRule;return o?oe.fromJSON(o):this._isMosaicRuleSupported(r)?oe.fromJSON(r):null}writeMosaicRule(t,r,o){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(r[o]=l.toJSON())}writeNoData(t,r,o){t!=null&&typeof t=="number"&&(r[o]=Ko(t))}readObjectIdField(t,r){var o;return t||(t=(o=r.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid"))==null?void 0:o.name),t}get parsedUrl(){return Qr(this.url)}readSourceType(t,r){return this._isMosaicDataset(r)?"mosaic-dataset":"raster-dataset"}get renderer(){var o;const{activePresetRendererName:t,presetRenderers:r}=this;return t?(o=r==null?void 0:r.find(({name:l})=>l===t))==null?void 0:o.renderer.clone():this.internalRenderer}set renderer(t){this.activePresetRendererName=null,this.internalRenderer=t}set internalRenderer(t){this.loaded&&(t=this._configRenderer(t)),this._set("internalRenderer",t)}readRenderer(t,r,o){var p,m;const l=(m=(p=r==null?void 0:r.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=Vn(l,o);return u==null?null:(u.type==="vector-field"&&r.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=r.symbolTileSize),Sr(u)||pi.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(t,r,o){r.layerDefinition=r.layerDefinition||{},r.layerDefinition.drawingInfo=r.layerDefinition.drawingInfo||{},r.layerDefinition.drawingInfo.renderer=t.toJSON(),t.type==="vector-field"&&(r.symbolTileSize=t.symbolTileSize)}get rasterFields(){var l,u,p,m;const t=((l=this.fields)==null?void 0:l.map(c=>c.clone()))??[];t.push(us()),this.sourceType==="mosaic-dataset"&&((u=this.fields)!=null&&u.length)&&t.push(ps()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:c})=>c.toLowerCase()==="none")&&t.push(cs()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:c})=>c.toLowerCase()!=="none").forEach(({name:c})=>t.push(ms(c)));const{rasterInfo:r}=this;if(this._isVectorDataSet()){const c=(m=(p=r==null?void 0:r.multidimensionalInfo)==null?void 0:p.variables[0].unit)==null?void 0:m.trim(),d=ds(c),y=ys();t.push(d,y)}if(r!=null&&r.multidimensionalInfo&&this.sourceType==="raster-dataset"){const c=hs(r.multidimensionalInfo);t.push(...c)}const o=r==null?void 0:r.attributeTable;if(o!=null){const c=gs(o);t.push(...c)}return t}set rasterFunction(t){let r=t;r!=null&&r.rasterFunction&&(r=N.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}readRasterFunction(t,r){const o=r.rasterFunctionInfos;return r.renderingRule||o!=null&&o.length&&o[0].name!=="None"?this._isRFTJson(r.renderingRule)?N.fromJSON({rasterFunctionDefinition:r.renderingRule}):N.fromJSON(r.renderingRule||{rasterFunctionInfos:r.rasterFunctionInfos}):null}readSpatialReference(t,r){const o=t||r.extent.spatialReference;return o?Me.fromJSON(o):null}writePixelType(t,r,o){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(r[o]=Re.toJSON(t))}readVersion(t,r){let o=r.currentVersion;return o||(o=r.hasOwnProperty("fields")||r.hasOwnProperty("timeInfo")?10:9.3),o}applyFilter(t){let r=t;return this.pixelFilter&&(r=this._clonePixelData(t),this.pixelFilter(r)),r}async applyRenderer(t,r){let o=t;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&l&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,r),this._cachedRendererJson=l.toJSON());const y=await d.symbolize({bandIds:m,...t},r);o={extent:t.extent,pixelBlock:y}}else o={extent:t.extent,pixelBlock:u.symbolize({bandIds:m,...t})}}return o}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsCalculateVolume)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return t=A(t),this.mosaicRule&&t.mosaicRule==null&&(t.mosaicRule=this.mosaicRule),Ao(this.url,t,this._getRequestOptions(r))}async computeAngles(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsComputeAngles)throw new b("imagery-layer:compute-angles","this operation is not supported on the input image service");return jo(this.url,t,this._getRequestOptions(r))}async computePixelSpaceLocations(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsComputePixelLocation)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return To(this.url,t,this._getRequestOptions(r))}async computeHistograms(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsComputeHistograms)throw new b("imagery-layer:compute-histograms","this operation is not supported on the input image service");return t=A(t),this._applyMosaicAndRenderingRules(t),Co(this.url,t,this._getRequestOptions(r))}async computeStatisticsHistograms(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsComputeStatisticsHistograms)throw new b("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return t=A(t),this._applyMosaicAndRenderingRules(t),No(this.url,t,this._getRequestOptions(r))}async measureHeight(t,r){const o=await this._fetchCapabilities(r==null?void 0:r.signal);if(!(t.operationType==="base-and-top"?o.mensuration.supportsHeightFromBaseAndTop:t.operationType==="base-and-top-shadow"?o.mensuration.supportsHeightFromBaseAndTopShadow:o.mensuration.supportsHeightFromTopAndTopShadow))throw new b("imagery-layer:measure-height","this operation is not supported on the input image service");return t=A(t),this._applyMosaicRule(t),Lo(this.url,t,this._getRequestOptions(r))}async measureAreaAndPerimeter(t,r){const o=await this._fetchCapabilities(r==null?void 0:r.signal);if(!(o.mensuration.supportsAreaAndPerimeter&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return t=A(t),this._applyMosaicRule(t),Po(this.url,t,this._getRequestOptions(r))}async measureDistanceAndAngle(t,r){const o=await this._fetchCapabilities(r==null?void 0:r.signal);if(!(o.mensuration.supportsDistanceAndAngle&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return t=A(t),this._applyMosaicRule(t),Oo(this.url,t,this._getRequestOptions(r))}async measurePointOrCentroid(t,r){const o=await this._fetchCapabilities(r==null?void 0:r.signal);if(!(o.mensuration.supportsPointOrCentroid&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return t=A(t),this._applyMosaicRule(t),zo(this.url,t,this._getRequestOptions(r))}async measureLengthFromImage(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polyline")throw new b("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Bo(this.url,t,this._getRequestOptions(r))}async measureAreaFromImage(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polygon")throw new b("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Uo(this.url,t,this._getRequestOptions(r))}getField(t){const{fieldsIndex:r}=this;return r==null?void 0:r.get(t)}getFieldDomain(t,r){const o=this.getField(t);return o?o.domain:null}async fetchImage(t,r,o,l={}){if(t==null||r==null||o==null)throw new b("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(t,r,o,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const M=document.createElement("canvas");return M.width=r,M.height=o,l.returnImageBitmap?{imageBitmap:await Ki(M,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:M}}const{bandIds:d,rasterInfo:y}=this,g=((d==null?void 0:d.length)||y.bandCount)??0,f=r*o,h=y.pixelType,I=[];for(let M=0;M<g;M++)I.push(Ie.createEmptyBand(h,f));return{pixelData:{pixelBlock:new Ie({width:r,height:o,pixels:I,mask:new Uint8Array(f),pixelType:h}),extent:t}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,m=p&&!!l.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:t,width:r,height:o,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(t){return D(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?t==null?void 0:t.rasterFunction:null})}).then(r=>r.data)}fetchRasterAttributeTable(t){return this.version<10.1?Promise.reject(new b("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):D(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?t==null?void 0:t.rasterFunction:null})}).then(r=>zi.fromJSON(r.data))}getCatalogItemRasterInfo(t,r){const o={...r,query:this._getQueryParams()};return Wo(n(this.parsedUrl),t,o)}async getCatalogItemICSInfo(t,r){var Be,it,ve,ye,pe;const{data:o}=await D(n(this.parsedUrl)+"/"+t+"/info/ics",{query:this._getQueryParams(),...r}),l=o==null?void 0:o.ics;if(!l)return;let u=null;try{u=(await D(n(this.parsedUrl)+"/"+t+"/info",{query:this._getQueryParams(),...r})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?D(n(this.parsedUrl)+"/"+t+"/info/icstopixel",{query:this._getQueryParams(),...r}).then(x=>x.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:ci(m),outSR:"0:"+t},d=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...r}).then(x=>x.data).catch(()=>({})),y=5,g=(u.xmin+u.xmax)/2,f=(u.ymax-u.ymin)/(y+1),h=u.ymin+f,I=[];for(let x=0;x<y;x++)I.push({x:g,y:h+f*x});const M={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:I}),inSR:ci(m),outSR:"0:"+t},S=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(M),...r}).then(x=>x.data).catch(()=>({})),R=await Promise.all([p,d,S]);let C=R[0].ipxf;if(C==null){const x=(Be=l.geodataXform)==null?void 0:Be.xf_0;((it=x==null?void 0:x.name)==null?void 0:it.toLowerCase())==="topup"&&((ve=x==null?void 0:x.coefficients)==null?void 0:ve.length)===6&&(C={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const Z=Je.fromJSON((pe=(ye=R[1])==null?void 0:ye.geometries)==null?void 0:pe[0]);Z&&(Z.spatialReference=new Me({wkid:0,imageCoordinateSystem:l}));const j=R[2].geometries?R[2].geometries.filter(x=>(x==null?void 0:x.x)!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN"):[],H=j.length;if(H<3)return{ics:l,icsToPixelTransform:C,icsExtent:Z,northDirection:null};let E=0,F=0,P=0,O=0;for(let x=0;x<H;x++)E+=j[x].x,F+=j[x].y,P+=j[x].x*j[x].x,O+=j[x].x*j[x].y;const G=(H*O-E*F)/(H*P-E*E);let ue=0;const me=j[y-1].x>j[0].x,de=j[y-1].y>j[0].y;return G===1/0?ue=de?90:270:G===0?ue=me?0:180:G>0?ue=me?180*Math.atan(G)/Math.PI:180*Math.atan(G)/Math.PI+180:G<0&&(ue=de?180+180*Math.atan(G)/Math.PI:360+180*Math.atan(G)/Math.PI),{ics:l,icsToPixelTransform:C,icsExtent:Z,northDirection:ue}}async generateRasterInfo(t,r){var p;t=V(N,t);const o={...r,query:this._getQueryParams()};if(!t||((p=t.functionName)==null?void 0:p.toLowerCase())==="none"||this._isVectorFieldResampleFunction(t))return this.serviceRasterInfo??ar(n(this.parsedUrl),this.sourceJSON,o);const l=$o(t);if(!l)throw new b("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=Go(n(this.parsedUrl),t,o);this._functionRasterInfos[l]=u;try{return await u}catch(m){throw this._functionRasterInfos[l]=null,m}}getExportImageServiceParameters(t,r,o,l){var M,S;t=t.clone().shiftCentralMeridian();const u=mt(t.spatialReference,n(this.parsedUrl)),p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const y=(M=this.rasterFunction)==null?void 0:M.rasterFunctionDefinition,g=(S=this.renderer)==null?void 0:S.type,f=!g||g==="raster-stretch"||g==="raster-colormap"||g==="unique-value"||g==="class-breaks"||g==="raster-shaded-relief";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!y&&f){const R={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")R.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=R;else if(d.rasterFunction==="Colormap"){const C=d.rasterFunctionArguments.Raster;(C==null?void 0:C.rasterFunction)==="Stretch"?(R.rasterFunctionArguments.Raster=C.rasterFunctionArguments.Raster,C.rasterFunctionArguments.Raster=R):(R.rasterFunctionArguments.Raster=C,d.rasterFunctionArguments.Raster=R)}else R.rasterFunctionArguments.Raster=d,d=R;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const h=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(h.isOutSide)return null;p.mosaicRule=h.mosaicRule!=null?JSON.stringify(h.mosaicRule):null,l=h.timeExtent,p.renderingRule=this._getRenderingRuleString(N.fromJSON(d));const I={};if(l!=null){const{start:R,end:C}=l.toJSON();R&&C&&R===C?I.time=""+R:R==null&&C==null||(I.time=`${R??"null"},${C??"null"}`)}return{bbox:t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:u,imageSR:u,size:r+","+o,...p,...I}}async getSamples(t,r){var l;if(!((l=await this._fetchCapabilities(r==null?void 0:r.signal))!=null&&l.operations.supportsGetSamples))throw new b("imagery-layer:get-samples","getSamples operation is not supported on the input image service");t=A(t);const{raster:o}=this;return o&&t.raster==null&&(t.raster=o),Fo(this.url,t,this._getRequestOptions(r))}async identify(t,r){var p;if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsIdentify)throw new b("imagery-layer:identify","identify operation is not supported on the input image service");t=A(t),this.version<10.91&&((p=t.geometry)==null?void 0:p.type)==="extent"&&(t.geometry=Zt.fromExtent(t.geometry));const o=this._processMultidimensionalIntersection(t.geometry,t.timeExtent,t.mosaicRule||this.mosaicRule);if(o.isOutSide)throw new b("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");t.timeExtent=o.timeExtent,t.mosaicRule=o.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&t.rasterFunction==null&&(t.rasterFunction=u),l&&t.raster==null&&(t.raster=l),or(this.url,t,this._getRequestOptions(r))}async imageToMap(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsImageToMap)throw new b("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return Eo(n(this.parsedUrl),t,this._getRequestOptions(r))}async imageToMapMultiray(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsImageToMapMultiray)throw new b("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Vo(n(this.parsedUrl),t,this._getRequestOptions(r))}async mapToImage(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsMapToImage)throw new b("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ko(n(this.parsedUrl),t,this._getRequestOptions(r))}async findImages(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsFindImages)throw new b("imagery-layer:find-images","findImages operation is not supported on the input image service");return Zo(n(this.parsedUrl),t,this._getRequestOptions(r))}async getImageUrl(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsGetImageUrl)throw new b("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Jo(n(this.parsedUrl),t,this._getRequestOptions(r))}createQuery(){return new oi({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsQueryBoundary)throw new b("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return t=t??{outSpatialReference:this.spatialReference},_o(n(this.parsedUrl),t,this._getRequestOptions(r))}async queryRasters(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),qs(this.url,t,r)}async queryObjectIds(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),Zs(this.url,t,r)}async queryGPSInfo(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsQueryGPSInfo)throw new b("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return t=t??{where:"1=1"},Ho(n(this.parsedUrl),t,this._getRequestOptions(r))}async queryRasterCount(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),Gs(this.url,t,r)}async queryVisibleRasters(t,r){var Z,j,H,E;if(!t)throw new b("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:o,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=r||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const y=tt.servicePixelValue.toLowerCase(),g=this._rasterFunctionNamesIndex;if(t.outFields!=null&&(m=t.outFields.some(F=>!F.toLowerCase().startsWith(y)),this.version>=10.4)){const F=t.outFields.filter(O=>O.toLowerCase().startsWith(y)&&O.length>y.length).map(O=>{const G=O.slice(y.length+1);return[this._updateRenderingRulesFunctionName(G,g),G]});c=F.map(O=>new N({functionName:O[0]})),d=F.map(O=>O[1]);const{rasterFunction:P}=this;c.length===0?P!=null&&P.functionName?(c.push(P),d.push(P.functionName)):c=null:P!=null&&P.functionName&&!c.some(O=>O.functionName===P.functionName)&&(c.push(P),d.push(P.functionName))}const f=t.outSpatialReference==null||t.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:h}=this;let I=t.timeExtent||this.timeExtent;if(h){const{isOutside:F,intersection:P}=ni(h,{geometry:t.geometry,timeExtent:t.timeExtent,multidimensionalDefinition:(Z=this.exportImageServiceParameters.mosaicRule)==null?void 0:Z.multidimensionalDefinition});if(F)throw new b("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(P==null?void 0:P.timeExtent)!=null&&(I=P.timeExtent)}const M=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,I);let S=t.geometry;this.version<10.91&&(S==null?void 0:S.type)==="extent"&&(S=Zt.fromExtent(S));const R=this._getQueryParams({geometry:S,timeExtent:I,mosaicRule:M,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:o,returnCatalogItems:m,returnGeometry:f,raster:this.raster,maxItemCount:u?1:null});delete R.f;const C=new Pr(R);try{await this._generateRasterInfo(this.rasterFunction);const F=await or(this.url,C,{signal:r==null?void 0:r.signal,query:{...this.customParameters}}),P=t.outFields,O=F.value!=null&&F.value.toLowerCase().includes("nodata"),G=m&&!f&&((j=F==null?void 0:F.catalogItems)==null?void 0:j.features.length)&&(p||!O),ue=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?fs({rasterInfo:this.rasterInfo,multidimensionalDefinition:M==null?void 0:M.multidimensionalDefinition,timeExtent:I,multidimensionalSubset:this.multidimensionalSubset}):null;if(!G)return this._processVisibleRastersResponse(F,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P,effectiveMultidimensionalDefinition:ue});const me=this.objectIdField||"ObjectId",de=((H=F.catalogItems)==null?void 0:H.features)??[],Be=de.map(ye=>{var pe;return(pe=ye.attributes)==null?void 0:pe[me]}),it=new oi({objectIds:Be,returnGeometry:!0,outSpatialReference:t.outSpatialReference,outFields:[me]}),ve=await this.queryRasters(it);return(E=ve==null?void 0:ve.features)!=null&&E.length&&ve.features.forEach(ye=>{de.forEach(pe=>{pe.attributes[me]===ye.attributes[me]&&ye.geometry&&(pe.geometry=ye.geometry.clone(),t.outSpatialReference!=null&&(pe.geometry.spatialReference=t.outSpatialReference))})}),this._processVisibleRastersResponse(F,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P,effectiveMultidimensionalDefinition:ue})}catch{throw new b("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(t,r){const o=D(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:t}),signal:r}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),l=D(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:t}),signal:r}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([o,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(t,r){const o=this._rasterJobHandler.instance;return o?o.createFlowMesh(t,r):Os(t.meshType,t.simulationSettings,t.flowData,r.signal!=null?r.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(t){const r=t??this.serviceRasterInfo.multidimensionalInfo;return ws(this.multidimensionalSubset,r)}async _fetchService(t){await this._fetchServiceInfo(t),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const r=this.sourceJSON,o=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):ar(n(this.parsedUrl),r,{signal:t,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),qo(p,r),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:t}):null,u=this._getRasterFunctionInfos();return Promise.all([o,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),pi.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Kr(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(t,r){var h;const o=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(t==null||l==null||r==null||(o==null?void 0:o.startField)==null)return t;const{startField:u}=o,p=l.variables.some(I=>I.dimensions.some(M=>M.name===u))?u:"StdTime";if(t=t.clone(),this.sourceType==="mosaic-dataset")return t.multidimensionalDefinition=(h=t.multidimensionalDefinition)==null?void 0:h.filter(I=>I.dimensionName!==p),this._cleanupMultidimensionalDefinition(t);t.multidimensionalDefinition=t.multidimensionalDefinition||[];const m=t.multidimensionalDefinition.filter(I=>I.dimensionName===p),c=r.start!=null?r.start.getTime():null,d=r.end!=null?r.end.getTime():null,y=c==null||d==null||c===d,g=y?[c||d]:[[c,d]],f=this.version>=10.8;if(m.length)m.forEach(I=>{I.dimensionName===p&&(f?(I.dimensionName=null,I.isSlice=!1,I.values=[]):(I.isSlice=y,I.values=g))});else if(!f){const I=t.multidimensionalDefinition.filter(M=>M.variableName!=null&&M.dimensionName==null);I.length?I.forEach(M=>{M.dimensionName=p,M.isSlice=y,M.values=g}):t.multidimensionalDefinition.push(new Ci({variableName:"",dimensionName:p,isSlice:y,values:g}))}return this._cleanupMultidimensionalDefinition(t)}_cleanupMultidimensionalDefinition(t){return t==null?null:(t.multidimensionalDefinition&&(t.multidimensionalDefinition=t.multidimensionalDefinition.filter(r=>!(!r.variableName&&!r.dimensionName)),t.multidimensionalDefinition.length===0&&(t.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&t.multidimensionalDefinition==null?null:t)}async _prepareForQuery(t,r){if(!(await this._fetchCapabilities(r==null?void 0:r.signal)).operations.supportsQuery)throw new b("imagery-layer:query-rasters","query operation is not supported on the input image service");return t=t!=null?V(oi,t):this.createQuery(),r=this._getRequestOptions(r),this.raster&&(r.query={...r.query,raster:this.raster}),{query:t,requestOptions:r}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Rn;this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{this._rasterJobHandler.instance=t},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(t){const{rasterInfo:r,rasterFunction:o}=this;return t.type==="unique-value"&&this._hasRasterFunction(o)&&(r==null?void 0:r.bandCount)===1&&["u8","s8"].includes(r.pixelType)||r!=null&&t!=null&&Tn(r).includes(t.type)}async _fetchCapabilities(t){return this.capabilities||await this._fetchServiceInfo(t),this.capabilities}async _fetchServiceInfo(t){var o;let r=this.sourceJSON;if(!r){const{data:l,ssl:u}=await D(n(this.parsedUrl),{query:this._getQueryParams(),signal:t});r=l,this.sourceJSON=r,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((o=r.capabilities)==null?void 0:o.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new b("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(t){var r;return t.serviceSourceType?t.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((r=t.fields)==null?void 0:r.length)>0}_isMosaicRuleSupported(t){var l;if(!t)return!1;const r=this._isMosaicDataset(t),o=t.currentVersion>=10.71&&t.hasMultidimensions&&!(((l=t.fields)==null?void 0:l.length)>1);return r||o}_isVectorFieldResampleFunction(t){if(t==null)return!1;const{functionName:r,functionArguments:o}=t,l=(r==null?void 0:r.toLowerCase())==="resample",u=(o==null?void 0:o.ResampleType)||(o==null?void 0:o.resampleType);return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(t){var l,u,p;const r=this._isPicture(),{rasterInfo:o}=this;if(!r&&!this.pixelFilter||this._isVectorDataSet()){const m=(u=(l=this.mosaicRule)==null?void 0:l.multidimensionalDefinition)==null?void 0:u[0].variableName,c=An({variableName:m,rasterFunctionName:(p=this.rasterFunction)==null?void 0:p.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&o.bandCount>=3){const y=(c==null?void 0:c.bandIds)??Cr(o);!y||o.bandCount===3&&y[0]===0&&y[1]===1&&y[2]===2||(this.bandIds=y)}t||(t=(c==null?void 0:c.renderer)??jn(o,{bandIds:this.bandIds,variableName:this.rasterFunction?null:m}));const d=Un(t.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=o):this.symbolizer=new xs({rendererJSON:d,rasterInfo:o}),this.symbolizer.bind().success||(this.symbolizer=null)}return t}_clonePixelData(t){return t==null?t:{extent:t.extent&&t.extent.clone(),pixelBlock:t.pixelBlock!=null?t.pixelBlock.clone():null}}_getQueryParams(t){(t==null?void 0:t.renderingRule)!=null&&typeof t.renderingRule!="string"&&(t.renderingRule=this._getRenderingRuleString(t.renderingRule));const{raster:r,viewId:o}=this;return{raster:r,viewId:o,f:"json",...t,...this.customParameters}}_getRequestOptions(t){return{...t,query:{...t==null?void 0:t.query,...this.customParameters}}}_decodePixelBlock(t,r,o){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:t,options:r}):Qi(t,r,o)}async _getRasterFunctionInfos(t){var o;const r=this.sourceJSON.rasterFunctionInfos;return this.loaded?r:r&&this.version>=10.3?r.length===1&&r[0].name.toLowerCase()==="none"?r:(o=(await D(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:t})).data)==null?void 0:o.rasterFunctionInfos:null}_canRequestImageElement(t){return!this.pixelFilter&&(!t||t.includes("png"))}async _requestArrayBuffer(t){const{imageProps:r,requestAsImageElement:o,returnImageBitmap:l,signal:u}=t;if(o&&this._canRequestImageElement(r.format)){const f=`${n(this.parsedUrl)}/exportImage`,{data:h}=await D(f,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...t.imageServiceParameters}),signal:u});return h instanceof Blob?{imageBitmap:await Ki(h,f,u),params:r}:{imageOrCanvasElement:h,params:r}}const p=this._initJobHandler(),m=D(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...t.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=r.format||"jpgpng";let y=d;if(y!=="bsq"&&y!=="bip"&&(y=As(c)),!y)throw new b("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const g={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(y==="png"||y==="jpg")?Qi(c,{useCanvas:!0,...r},g):this._decodePixelBlock(c,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:d},g)),extent:r.extent},params:r}}_generateRasterInfo(t,r){return this.generateRasterInfo(t,r).catch(()=>null)}_isValidCustomizedMosaicRule(t){var r;return t&&JSON.stringify(t.toJSON())!==JSON.stringify((r=this.defaultMosaicRule)==null?void 0:r.toJSON())}_updateMultidimensionalDefinition(t){var o;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=Is(t,{multidimensionalSubset:this.multidimensionalSubset});if(r!=null&&r.length>0){this.mosaicRule=this.mosaicRule||new oe;const l=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((o=this.rasterFunction.functionName)==null?void 0:o.toLowerCase())!=="none"&&r.forEach(u=>u.variableName=""),r=r.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(l!=null&&l.length)&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(t,r){var R,C,Z;r=r||{};const o=t.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=r,c=t.processedValues;let d=(R=t.catalogItems)==null?void 0:R.features,y=((Z=(C=t.properties)==null?void 0:C.Values)==null?void 0:Z.map(j=>j.replaceAll(/ /gi,", ")))||[];const g=this.objectIdField||"ObjectId",f=typeof o=="string"&&o.toLowerCase().includes("nodata"),h=[];if(o&&!d&&!f){const j={};j[g]=0,y=[o],d=[new ur({geometry:this.fullExtent,attributes:j})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&Ms(this.rasterFields,j,r.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,m),f&&!u&&(d=[]);const{itemPixelValue:I,servicePixelValue:M}=tt,S=this.rasterFields.some(j=>j.name===I);for(let j=0;j<d.length;j++){const H=d[j];if(o!=null){const E=y[j],F=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:o;if(E.toLowerCase()==="nodata"&&!u)continue;S&&(H.attributes[I]=E),H.attributes[M]=F,this._updateFeatureWithMagDirValues(H,E);const P=this.fields&&this.fields.length>0;let O=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?P?E:o:F;this.rasterFunction||(O=P?E:o),this._updateFeatureWithRasterAttributeTableValues(H,O)}if(H.sourceLayer=H.layer=this,p&&this._updateFeatureWithDomainValues(H),l&&c&&l.length===c.length)for(let E=0;E<l.length;E++){const F=`${tt.servicePixelValue}.${l[E]}`;H.attributes[F]=c[E]}h.push(d[j])}return h}_processMultidimensionalIntersection(t,r,o){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:r,mosaicRule:o=this._combineMosaicRuleWithTimeExtent(o,r)};if(l){const{isOutside:u,intersection:p}=ni(l,{geometry:t,timeExtent:r});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(p==null?void 0:p.timeExtent)!=null&&(r=p.timeExtent)}if(o=this._combineMosaicRuleWithTimeExtent(o,r),o==null?void 0:o.multidimensionalDefinition){const{isOutside:u}=ni(l,{multidimensionalDefinition:o.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:r,mosaicRule:o}}_updateFeatureWithRasterAttributeTableValues(t,r){const o=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(o==null)return;const{features:l,fields:u}=o,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=l.filter(c=>c.attributes[p]===(r!=null?parseInt(r,10):null));m&&m[0]&&u.forEach(c=>{const d=vs+c.name;t.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(t,r){if(!this._isVectorDataSet())return;const o=r.split(/,\s*/).map(c=>parseFloat(c)),l=o.map(c=>[c]),u=o.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new Ie({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Je(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Bs([p.pixels[0][0],p.pixels[1][0]]);t.attributes[tt.magnitude]=m[0],t.attributes[tt.direction]=m[1]}_updateFeatureWithDomainValues(t){var r;(r=this.fields&&this.fields.filter(o=>o.domain&&o.domain.type==="coded-value"))==null||r.forEach(o=>{const l=t.attributes[o.name];if(l!=null){const u=o.domain.codedValues.find(p=>p.code===l);u&&(t.attributes[o.name]=u.name)}})}_updateResponseFieldNames(t,r){if(!r||r.length<1)return;const o=this.fieldsIndex;o!=null&&t.forEach(l=>{var u;if(l!=null&&l.attributes)for(const p of r){const m=(u=o.get(p))==null?void 0:u.name;m&&m!==p&&(l.attributes[p]=l.attributes[m],delete l.attributes[m])}})}_getRenderingRuleString(t){if(t){let r=t.toJSON();return r=r.rasterFunctionDefinition??r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRasterFunction(t){return(t==null?void 0:t.functionName)!=null&&t.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(t,r){if(!t||t.length<1)return;if(t==="Raw")return t.replace("Raw","None");const o=t.toLowerCase().replaceAll(/ /gi,"_");return r.has(o)?r.get(o):t}_isRFTJson(t){return(t==null?void 0:t.name)&&t.arguments&&t.function&&t.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(t){const{raster:r,mosaicRule:o,rasterFunction:l}=this;l&&t.rasterFunction==null&&(t.rasterFunction=l),o&&t.mosaicRule==null&&(t.mosaicRule=o),r&&t.raster==null&&(t.raster=r)}_applyMosaicRule(t){const{raster:r,mosaicRule:o}=this;o&&t.mosaicRule==null&&(t.mosaicRule=o),r&&t.raster==null&&(t.raster=r)}_readCapabilities(t){var S;const r=t.capabilities?t.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:o,advancedQueryCapabilities:l,maxRecordCount:u}=t,p=r.includes("image"),m=t.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!t.spatialReference&&!((S=t.extent)!=null&&S.spatialReference)),d=r.includes("edit"),y=r.includes("mensuration")&&c,g=t.mensurationCapabilities==null?[]:t.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),f=y&&g.includes("basic"),h=this._isMosaicDataset(t)&&r.includes("catalog"),I=r.includes("download"),M=o>=10.7&&m||o>=11.4&&(m||y&&g.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:o>=11.2&&h,supportsImageToMapMultiray:o>=11.2&&h,supportsMapToImage:o>=11.2&&h,supportsFindImages:o>=11.2&&h,supportsGetImageUrl:o>=11.3&&I,supportsMeasure:y,supportsMeasureFromImage:o>=11.2,supportsDownload:I,supportsQuery:h&&t.fields&&t.fields.length>0,supportsGetSamples:o>=10.2&&p,supportsProject:o>=10.3&&p,supportsComputeStatisticsHistograms:o>=10.4&&p,supportsQueryBoundary:o>=10.6&&p,supportsCalculateVolume:M,supportsComputePixelLocation:o>=10.7&&h,supportsComputeAngles:o>=10.91,supportsQueryGPSInfo:o>=11.2&&h,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(l!=null&&l.supportsStatistics),supportsOrderBy:!!(l!=null&&l.supportsOrderBy),supportsDistinct:!!(l!=null&&l.supportsDistinct),supportsPagination:!!(l!=null&&l.supportsPagination),supportsStandardizedQueriesOnly:!!(l!=null&&l.useStandardizedQueries),supportsPercentileStatistics:!!(l!=null&&l.supportsPercentileStatistics),supportsCentroid:!!(l!=null&&l.supportsReturningGeometryCentroid),supportsCurrentUser:!1,supportsDistance:!!(l!=null&&l.supportsQueryWithDistance),supportsExtent:!!(l!=null&&l.supportsReturningQueryExtent),supportsGeometryProperties:!!(l!=null&&l.supportsReturningGeometryProperties),supportsHavingClause:!!(l!=null&&l.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(l!=null&&l.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:f,supportsAreaAndPerimeter:f,supportsPointOrCentroid:f,supportsHeightFromBaseAndTop:y&&g.includes("base-top height"),supportsHeightFromBaseAndTopShadow:y&&g.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:y&&g.includes("top-top shadow height"),supports3D:y&&g.includes("3d")}}}};function n(t){return(t==null?void 0:t.path)??""}return s([a({clonable:!1})],i.prototype,"_functionRasterInfos",void 0),s([a({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),s([a({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),s([a({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),s([z("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),s([a({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),s([a()],i.prototype,"adjustAspectRatio",void 0),s([a({type:[ie],json:{write:!0}})],i.prototype,"bandIds",void 0),s([z("bandIds")],i.prototype,"readBandIds",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),s([z("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),s([a({type:Number})],i.prototype,"compressionQuality",void 0),s([T("compressionQuality")],i.prototype,"writeCompressionQuality",null),s([a({type:Number})],i.prototype,"compressionTolerance",void 0),s([T("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),s([a({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([a({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),s([z("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),s([a({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([a({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),s([a()],i.prototype,"rasterInfo",void 0),s([a({readOnly:!0,type:[fr]})],i.prototype,"fields",void 0),s([a({readOnly:!0})],i.prototype,"fieldsIndex",null),s([a({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],i.prototype,"format",null),s([z("service","format",["serviceDataType"])],i.prototype,"readFormat",null),s([a({type:Je})],i.prototype,"fullExtent",void 0),s([a({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),s([a({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),s([a({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),s([a({type:String,json:{type:Ze.jsonValues,read:Ze.read,write:Ze.write}})],i.prototype,"interpolation",void 0),s([a()],i.prototype,"minScale",void 0),s([z("service","minScale")],i.prototype,"readMinScale",null),s([a()],i.prototype,"maxScale",void 0),s([z("service","maxScale")],i.prototype,"readMaxScale",null),s([a({type:oe})],i.prototype,"mosaicRule",null),s([z("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),s([T("mosaicRule")],i.prototype,"writeMosaicRule",null),s([a()],i.prototype,"multidimensionalInfo",void 0),s([a({type:Sn,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),s([a({json:{type:ie}})],i.prototype,"noData",void 0),s([T("noData")],i.prototype,"writeNoData",null),s([a({type:String,json:{type:vt.jsonValues,read:vt.read,write:vt.write}})],i.prototype,"noDataInterpretation",void 0),s([a({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),s([z("objectIdField")],i.prototype,"readObjectIdField",null),s([a({readOnly:!0})],i.prototype,"geometryType",void 0),s([a({})],i.prototype,"typeIdField",void 0),s([a({})],i.prototype,"types",void 0),s([a({readOnly:!0})],i.prototype,"parsedUrl",null),s([a({type:Function})],i.prototype,"pixelFilter",void 0),s([a()],i.prototype,"raster",void 0),s([a({readOnly:!0})],i.prototype,"sourceType",void 0),s([z("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),s([a()],i.prototype,"viewId",void 0),s([a()],i.prototype,"renderer",null),s([a({types:qt,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Wt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),s([z("internalRenderer")],i.prototype,"readRenderer",null),s([T("internalRenderer")],i.prototype,"writeRenderer",null),s([a({clonable:!1})],i.prototype,"symbolizer",void 0),s([a(ss)],i.prototype,"opacity",void 0),s([a({readOnly:!0})],i.prototype,"rasterFields",null),s([a({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),s([a({type:N,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),s([z("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),s([a({readOnly:!0})],i.prototype,"serviceDataType",void 0),s([a({readOnly:!0,type:Me})],i.prototype,"spatialReference",void 0),s([z("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),s([a({type:Re.apiValues,json:{read:Re.read,type:Re.jsonValues}})],i.prototype,"pixelType",void 0),s([T("pixelType")],i.prototype,"writePixelType",null),s([a({constructOnly:!0,type:Li})],i.prototype,"serviceRasterInfo",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a(ns)],i.prototype,"url",void 0),s([a({readOnly:!0})],i.prototype,"version",void 0),s([z("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=s([w("esri.layers.mixins.ArcGISImageService")],i),i};let Ve=class extends Ae.ClonableMixin(v){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([a({type:String,json:{write:{isRequired:!0}}})],Ve.prototype,"name",void 0),s([a({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),qe({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],Ve.prototype,"method",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],Ve.prototype,"value",void 0),s([a({type:[ie],json:{write:{isRequired:!0}}})],Ve.prototype,"bandIds",void 0),s([a({types:qt,json:{write:!0,origins:{"web-scene":{types:Wt,write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],Ve.prototype,"renderer",void 0),Ve=s([w("esri.renderers.support.RasterPresetRenderer")],Ve);const Yo=Ve,ea=e=>{let i=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([a({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),s([a({type:[Yo],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=s([w("esri.layers.mixins.RasterPresetRendererMixin")],i),i};let ne=class extends Qs(en(Ks(Yr(es(ea(Xo(Ys($s(Ws(ts(Ae.ClonableMixin(os)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Er(async(i,n,t)=>{const{save:r,saveAs:o}=await Wr(()=>import("./imageryUtils-BCPb5mXs-Bh6HVdQa.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]),import.meta.url);switch(i){case Dt.SAVE:return r(this,n);case Dt.SAVE_AS:return o(this,t,n)}})}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}load(e){const i=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(Vr).then(()=>this._fetchService(i))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,i,n){var r;const t=((r=this.renderer)==null?void 0:r.type)==="vector-field";i[n]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var e;return!(!this.raster||!((e=this.url)!=null&&e.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(e){const{rasterFields:i}=this,n=new Set,t=tt.itemPixelValue.toLowerCase(),r=this.sourceType==="raster-dataset",o=ls.toLowerCase(),l=`${tt.servicePixelValue.toLowerCase()}.`;for(const m of i){const c=m.name.toLowerCase();c===t||c.startsWith(l)||r&&c.startsWith(o)||n.add(m.name)}const u=Xs({fields:i,title:this.title},{...e,visibleFieldNames:n}),{rasterInfo:p}=this;return u!=null&&u.fieldInfos&&p&&as(u.fieldInfos,p),u}queryFeatures(e,i){return this.queryRasters(e,i).then(n=>{if(n!=null&&n.features)for(const t of n.features)t.layer=t.sourceLayer=this;return n})}queryFeatureCount(e,i){return this.queryRasterCount(e,i)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Dt.SAVE,e)}async saveAs(e,i){return this._debouncedSaveOperations(Dt.SAVE_AS,i,e)}serviceSupportsSpatialReference(e){return tn(this,e)}write(e,i){if(!this._isPreviewLayer)return super.write(e,i);if(i!=null&&i.messages){const n=`${i.origin}/${i.layerContainerType||"operational-layers"}`;i.messages.push(new b("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};s([a(is)],ne.prototype,"legendEnabled",null),s([a({type:["show","hide"]})],ne.prototype,"listMode",null),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ne.prototype,"isReference",void 0),s([a({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ne.prototype,"operationalLayerType",void 0),s([T("web-map","operationalLayerType")],ne.prototype,"writeOperationalLayerType",null),s([a(rs)],ne.prototype,"popupEnabled",void 0),s([a({type:kr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ne.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],ne.prototype,"defaultPopupTemplate",null),s([a({readOnly:!0,json:{read:!1}})],ne.prototype,"type",void 0),s([a({readOnly:!0})],ne.prototype,"_isPreviewLayer",null),ne=s([w("esri.layers.ImageryLayer")],ne);const ta=ne,Il=Object.freeze(Object.defineProperty({__proto__:null,default:ta},Symbol.toStringTag,{value:"Module"}));export{fl as E,Il as I,An as L,Cr as U,Nn as W,Vn as a,qo as b,Sn as c,Un as e,ar as f,oo as g,qt as l,ea as o,Wt as p,jn as q,Rn as t,N as w,wl as z};
