import{c as l,A as c,an as s}from"./index-Bq7Udiuc.js";import{p as m,F as f}from"./project-CdmvlsYz-Dn1orZg_.js";import"./utils-DuaeuwP5-BCZke6dZ.js";import"./utils-Jw-4AGsF-kT105Oxg.js";async function g(e=null,a){var n,o;if(c.geometryServiceUrl)return c.geometryServiceUrl;if(!e)throw new l("internal:geometry-service-url-not-configured");let r;r="portal"in e?e.portal||s.getDefault():e,await r.load({signal:a});const t=(o=(n=r.helperServices)==null?void 0:n.geometry)==null?void 0:o.url;if(!t)throw new l("internal:geometry-service-url-not-configured");return t}async function v(e,a,r=null,t){const n=await g(r,t),o=new m({geometries:[e],outSpatialReference:a}),i=await f(n,o,{signal:t});if(i&&Array.isArray(i)&&i.length===1)return i[0];throw new l("internal:geometry-service-projection-failed")}export{g as getGeometryServiceURL,v as projectGeometry};
