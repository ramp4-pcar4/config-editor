import{c as v,ih as m}from"./index-Bq7Udiuc.js";import{D as M}from"./associatedFeatureServiceUtils-DCapzd9d-Doehwxc_.js";import{g as T}from"./fetchService-Bp_4TwIU-DdEVR-7J.js";import{u as p,h as L,f as C,p as P,g as G,L as $,m as b}from"./loadUtils-qPQbuxA4-Drd1yKJu.js";import{t as D}from"./lazyLayerLoader-CEoVkyTx-bCKqzkqq.js";import h from"./PortalItem-CJetnHeq-DU1PthkB.js";import{o as y}from"./portalItemUtils-DsrxEt4W-AFhOD2Cb.js";import"./projection-m8vi7Cxv-dX7rRAaA.js";async function le(e){let{portalItem:a}=e;!a||a instanceof h||(a=new h(a));const r=await F(a);return new r.constructor({portalItem:a,...r.properties})}async function F(e){await e.load();const a=new b;return W(await K(e,a))}async function K(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?R():E();case"CSV":return q();case"Feature Collection":return J(e);case"Feature Service":return O(e,a);case"Feed":return Z();case"GeoJson":return A();case"Group Layer":return _();case"Image Service":return k(e,a);case"KML":return z();case"Knowledge Graph Layer":return B();case"Map Service":return j(e,a);case"Media Layer":return ee();case"Scene Service":return V(e,a);case"Stream Service":return x();case"Vector Tile Service":return U();case"WCS":return H();case"WFS":return Q();case"WMS":return X();case"WMTS":return Y();default:throw new v("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function W(e){const a=e.className,r=D[a];return{constructor:await r(),properties:e.properties}}async function j(e,a){return await ae(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function O(e,a){const r=await g(e,a);if(typeof r=="object"){const{sourceJSON:t,className:o}=r,s={sourceJSON:t};return r.id!=null&&(s.layerId=r.id),{className:o||"FeatureLayer",properties:s}}return{className:"GroupLayer"}}async function V(e,a){var t,o;const r=await g(e,a,async()=>{var s;try{if(!e.url)return[];const{serverUrl:n}=await M(e.url,{sceneLayerItem:e});return((s=await a.fetchServiceMetadata(n))==null?void 0:s.tables)??[]}catch{return[]}});if(typeof r=="object"){const s={};let n;if(r.id!=null?(s.layerId=r.id,n=`${e.url}/layers/${r.id}`):n=e.url,(t=e.typeKeywords)==null?void 0:t.length){for(const c of Object.keys(m))if(e.typeKeywords.includes(c))return{className:m[c]}}const l=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,c=>{var i;return(i=p(c))==null?void 0:i.customParameters})});return{className:m[l==null?void 0:l.layerType]||"SceneLayer",properties:s}}return r===!1&&((o=await a.fetchServiceMetadata(e.url))==null?void 0:o.layerType)==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function J(e){await e.load();const a=y(e,"Map Notes"),r=y(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(y(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return L(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function k(e,a){var u,d,w,N,S;await e.load();const r=((u=e.typeKeywords)==null?void 0:u.map(I=>I.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),o=t==null?void 0:t.layerType;if(o==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(o==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),n=(d=s.cacheType)==null?void 0:d.toLowerCase(),l=(w=s.capabilities)==null?void 0:w.toLowerCase().includes("tilesonly"),c=((S=(N=s.tileInfo)==null?void 0:N.format)==null?void 0:S.toLowerCase())??"",i=n==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c);return n==="map"||i||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function x(){return{className:"StreamLayer"}}function U(){return{className:"VectorTileLayer"}}function A(){return{className:"GeoJSONLayer"}}function E(){return{className:"IntegratedMesh3DTilesLayer"}}function R(){return{className:"UnsupportedLayer"}}function q(){return{className:"CSVLayer"}}function z(){return{className:"KMLLayer"}}function B(){return{className:"KnowledgeGraphLayer"}}function H(){return{className:"WCSLayer"}}function Q(){return{className:"WFSLayer"}}function X(){return{className:"WMSLayer"}}function Y(){return{className:"WMTSLayer"}}function Z(){return{className:"StreamLayer"}}function _(){return{className:"GroupLayer"}}function ee(){return{className:"MediaLayer"}}async function ae(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function g(e,a,r){const{url:t,type:o}=e,s=o==="Feature Service";if(!t)return{};if(/\/\d+$/.test(t)){if(s){const c=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,i=>{var u;return(u=p(i))==null?void 0:u.customParameters})});return{id:c.id,className:T(c.type),sourceJSON:c}}return{}}await e.load();let n=await a.fetchItemData(e);if(s){const c=await C(n,t,a),i=f(c);if(typeof i=="object"){const u=P(c,i.id);i.className=G(u==null?void 0:u.layerType)}return i}if(o==="Scene Service"&&(n=await $(e,n,a)),L(n)>0)return f(n);const l=await a.fetchServiceMetadata(t);return r&&(l.tables=await r()),f(l)}function f(e){var a;return L(e)===1&&{id:(a=p(e))==null?void 0:a.id}}export{le as fromItem,K as selectLayerClassPath};
