import{ao as u,aa as f,dK as w,b3 as n,ai as p,cJ as h,dF as y,v as _,t as V}from"./index-DT_2vTqg.js";import{D as v}from"./LayerView2D-CCfp06E--C4NNBV5k.js";import{d as c}from"./GraphicContainer-CEP0E1kz-ClFCoSLw.js";import{F as g}from"./GraphicsView2D-yiocyXG3-Cq3WEVfo.js";import{v as C}from"./LayerView-D3XoMhlx-JyGKkRuR.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-BdpN3llD-CCTZpMQd.js";import"./MapView-BcnxJC0k-DnL3Bvpc.js";import"./globalCss-CFN4F315-BP1UVbnN.js";import"./Queue-B8H6jIv7-Di67S5Qa.js";import"./signal-DxzURL18-CNLg-02N.js";import"./Version-BTMwSXf1-Cws5FYod.js";import"./CollectionFlattener-9hYRBLDX-DhrL6KZ9.js";import"./workers-0oosFQiO-smKQnY2u.js";import"./intl-DLmy-Li5-DnUfHfMm.js";import"./projection-m8vi7Cxv-C_JltvOn.js";import"./TileInfo-owTCOSRx-Dk8Rfaxb.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-D52OxJOv.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-B93Tiora.js";import"./Map-DbZVFU-I-Diejy-Du.js";import"./Basemap-DxWxjcEH-DweBjGOf.js";import"./loadAll-BIhJ1RSe-BBKe-a9A.js";import"./PortalItem-CJetnHeq-DOaYmpxa.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-BOPNBj93.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-vl9jWDTa.js";import"./TimeExtent-gZaEUVeW-CjhClSAm.js";import"./GraphicsCollection-rAFZo1AJ-DaZCacJZ.js";import"./HeightModelInfo-BkDck4B0-DkxbX2IE.js";import"./timeZoneUtils-z3WjfjXQ-o-7Y3KVZ.js";import"./ReactiveMap-BaMcQuG3-CF68SCX9.js";import"./Query-CxQYWcUQ-8fAvXq-1.js";import"./Field-Cj6Pz3TI-MOMvkSrj.js";import"./fieldType-VTpxE-EM-CWsgg3NV.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-D-T1qTN7.js";import"./a11yUtils-C2ydunC--O8BkDWlt.js";import"./heightModelInfoUtils-CI93rfC7-Bn5B9c1D.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-CBPnL-S2.js";import"./utils-DuaeuwP5-C7ypGGP3.js";import"./utils-Jw-4AGsF-BfrtfTII.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-CKbCLMdl.js";import"./vec32-BuqRmYBM-BM3KqM8m.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-BW24c6Lx.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-BQWJP58O.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-dKVo5HlR.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-6LnnfcAZ.js";import"./EffectView-Bw7SZPlx-1mOgkJoW.js";import"./parser-hXQyB-Qx-CKYTh4L4.js";import"./layerViewUtils-Bk5QNiAa-BDm7c-BY.js";import"./AGraphicContainer-BSUvBxvy-BSR7Eb-h.js";import"./TechniqueInstance-oJ4weLzg-DlbI0DpD.js";import"./UpdateTracking2D-CaPtqow6-F3G8dqqh.js";import"./dataViewUtils-xig9T3UA-BpxmFH9X.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./FramebufferObject-DQw0QX3p-CmoLAX9I.js";import"./VertexArrayObject-DTkLCIKs-BHRJ8-TV.js";import"./memoryEstimations-iHVpvWPf-BPOfuqjq.js";import"./TileContainer-Dc8VVA_r-NRAhyxjn.js";import"./WGLContainer-CF3AeUnM-CVHZ2V7o.js";import"./ProgramTemplate-CBS0ERm4-DCf40Bte.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-COHzotnb.js";import"./OptimizedFeatureSet-D6mgsKNr-kjbXfGBQ.js";import"./OptimizedGeometry-1qDYm3YK-B34_HlnU.js";import"./FeatureCommandQueue-CqM9cs0l-B1MF-qsw.js";import"./CIMSymbolHelper-Bcp4nGf3-BtJCE9CE.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./fontUtils-Ce-zEYaT-DH-VvReQ.js";import"./Rect-KI3be8Nv-Duk5wtS2.js";import"./utils-BYqzY6_X-BSj4Clgc.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./rasterizingUtils-B8CPqgVl-CAImRnjz.js";import"./floatRGBA-YJlz5IlR-C9HRt-3O.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./GraphShaderModule-C7Apfssb-CQylSK5x.js";import"./ShaderBuilder-BkQM64Qp-DeRvPN3Y.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./lengthUtils-wU9RRIqK-Ck-67-Py.js";import"./QueueProcessor-BtXHzeIT-Bnt580eH.js";import"./FieldsIndex-Y7EBAYp0-D921qi6C.js";import"./OverrideHelper-GkMo7t6B-gd-3ezuR.js";import"./colorUtils-DxUhbS7D-Cifi2H0p.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./callExpressionWithFeature-uWLbeAgq-DUNRPhRk.js";import"./quantizationUtils-Cndke4AR-B7cvRcyx.js";import"./FeatureMetadata-X_4q5T4e-Xo5OctZF.js";import"./diffUtils-BSe9IE26-BzWFgoq_.js";import"./queryUtils-OXllLZed-CqXjhSAq.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-_0FhDj9z-BrIQbDKu.js";import"./TimeOnly-C3SOkmg2-ySe4vkvU.js";import"./labelUtils-Dd5sr1UJ-CZyeF6UG.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./normalizeUtilsSync-C40q69cc-Coy0PDiE.js";import"./dehydratedFeatures-CekTKTy7-216ajJqp.js";const d="sublayers",m="layerView",H=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const s=this._graphicsViewsFeatureCollectionMap.get(t);for(const o of e)!o.popupTemplate&&s.popupTemplate&&(o.popupTemplate=s.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):f.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(w);return e!=null&&e.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const s=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:s});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.addHandles([p(()=>e.visible,a=>o.container.visible=a,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const s=new c(this.view.featuresTilingScheme);s.fadeTransitionEnabled=!0;const o=new g({view:r,graphics:e.graphics,requestUpdateCallback:t,container:s});this.addHandles([e.on("graphic-update",o.graphicUpdateHandler),p(()=>e.visible,a=>o.container.visible=a,h),p(()=>o.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(o.container),i.push(o)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};
