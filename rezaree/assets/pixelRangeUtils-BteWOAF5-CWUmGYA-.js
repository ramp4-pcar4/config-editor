const S=9999999e31,y=2e-7,U={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function x(e){return U[e]??[-34028234663852886e22,34028234663852886e22]}function O(e,n){return e==null||n==null?"s32":e<0?e>=-128&&n<128?"s8":e>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function V(e){return((e==null?void 0:e.startsWith("s"))||(e==null?void 0:e.startsWith("u")))??!1}function P(e,n,u,c){let[l,r]=x(u);const t=V(u);return t&&(l-=1e-5,r+=1e-5),t?u.startsWith("u")?v(e,n,c,[l,r]):w(e,n,c,[l,r]):I(e,n,c,[l,r])}function W(e,n){for(let u=0;u<n.length;u++)n[u]&&isNaN(e[u])&&(n[u]=0,e[u]=0)}function v(e,n,u,c){const[l,r]=c;for(let t=0;t<n.length;t++)if(n[t]){const i=e[t];i<l||i>r?n[t]=0:u[t]=i+.5|0}}function w(e,n,u,c){const[l,r]=c;for(let t=0;t<n.length;t++)if(n[t]){const i=e[t];i<l||i>r?n[t]=0:u[t]=i+(i>0?.5:-.5)|0}}function I(e,n,u,c){const[l,r]=c;for(let t=0;t<n.length;t++)if(n[t]){const i=e[t];i<l||i>r?n[t]=0:u[t]=i}}function C(e,n,u){var M,k;if(e.depthCount&&e.depthCount>1)return;const{pixels:c,statistics:l,pixelType:r}=e,t=c[0].length,i=e.bandMasks??[],g=e.mask??new Uint8Array(t).fill(255),E=r==="f32"||r==="f64",p=x(r);let N=!1;for(let o=0;o<c.length;o++){const a=typeof n=="number"?n:n[o];if(a==null)continue;const d=((M=l==null?void 0:l[o])==null?void 0:M.minValue)??p[0],m=((k=l==null?void 0:l[o])==null?void 0:k.maxValue)??p[1];if(d>a+Number.EPSILON||m<a-Number.EPSILON)continue;const h=i[o]||g.slice(),f=c[o],A=u==null?void 0:u.customFloatTolerance;if(E&&A!==0){let s=A;s||(s=Math.abs(a)>=S?y*Math.abs(a):r==="f32"?2**-23:Number.EPSILON);for(let b=0;b<f.length;b++)h[b]&&Math.abs(f[b]-a)<s&&(f[b]=0,h[b]=0,g[b]=0,N=!0)}else for(let s=0;s<f.length;s++)h[s]&&f[s]===a&&(f[s]=0,h[s]=0,g[s]=0,N=!0);i[o]=h}if(N){const o=e.bandMasks||e.pixels.length>1?i:null;u!=null&&u.matchAllNoData?e.mask=o&&o.length>1?L(o):g:(e.bandMasks=o,e.mask=g)}function L(o){if(o.length<2)return o[0];const a=o[0].length,d=new Uint8Array(a).fill(0);for(let m=0;m<o.length;m++){const h=o[m];for(let f=0;f<a;f++)h[f]&&(d[f]=255)}return d}N&&"updateStatistics"in e&&e.updateStatistics()}export{V as A,C as P,O as U,P as V,x as p,W as v};
