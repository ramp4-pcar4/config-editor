import{T as o,k as c}from"./utils-DawrlST4-DylcXGZ-.js";import{L as p,E as v,I as g,l as s}from"./portalItemUtils-DsrxEt4W-C0PlKpJq.js";import"./index-Byk76P34.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./PortalItem-CJetnHeq-CbPth-a0.js";import"./jsonContext-D_JQG_uA-D0Qg_l-K.js";import"./projection-m8vi7Cxv-Cttix58F.js";const y="Image Service",u="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",T="imagery-tile-layer-save-as",l="WCS",I="wcs-layer-save",w="wcs-layer-save-as";function m(r){var t;if(r.type==="imagery"||r.type==="wcs")return{isValid:!0};const{raster:e}=r,a=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(a==null?void 0:a.datasetFormat)==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function x(r,e){const{parsedUrl:a,title:t,fullExtent:i}=r;e.url=a.path,e.title||(e.title=t);try{e.extent=await p(i)}catch{e.extent=void 0}v(e,s.METADATA),g(e,s.TILED_IMAGERY,r.type==="imagery-tile")}async function R(r,e){const a=r.type==="imagery"?u:r.type==="imagery-tile"?d:I,t=r.type==="wcs"?l:y;return o({layer:r,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:a},e)}async function S(r,e,a){const t=r.type==="imagery"?f:r.type==="imagery-tile"?T:w,i=r.type==="wcs"?l:y;return c({layer:r,itemType:i,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:e,setItemProperties:x},a)}export{R as save,S as saveAs};
