const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./OverrideHelper-GkMo7t6B-BjdtnZIa.js","./index-C8m3jhgc.js","./index-CliIjrnX.css","./colorUtils-DxUhbS7D-B-Muh5Ny.js","./vec42-D8CJyqHG-DnfLTeQH.js","./common-CYWrYyJl-E8-sukrT.js","./vec4f64-CjUMzAyX-DPYbdAom.js","./utils-BYqzY6_X-x0QsB8bB.js","./defaultCIMValues-gWpu7WSC-cjxb95kj.js","./enums-f9UUstHQ-hLTu4V1l.js","./callExpressionWithFeature-uWLbeAgq-CIZV_qJT.js","./quantizationUtils-Cndke4AR-g6lLwree.js"])))=>i.map(i=>d[i]);
import{z as p,cO as L,v as i,I as s,U as K,t as E,dz as v,a1 as le,fc as J,fd as ae,ca as U,S as ue,dD as Z,Y as N,ex as X,eO as ee,dK as pe,R as ye,bV as de,bW as ce,a8 as P,b as W,am as he,c as fe,fe as me,_ as ge,ff as be,fg as ve,eF as we}from"./index-C8m3jhgc.js";import{J as te}from"./ClassBreaksRenderer-D97YzbWp-BNKlZRw7.js";import{o as Y,f as xe,e as T,h as Se,T as _e,l as je,a as Ie}from"./commonProperties-BLIn8DYU-te3BK1cG.js";import{i as Ee}from"./LRUCache-BLmkvs7b-C7sAHc2V.js";import{m as De}from"./Version-BTMwSXf1-BhPPVtmW.js";import{o as Re}from"./FieldsIndex-Y7EBAYp0-w6K0n6zu.js";import{q as Ve,F as Me}from"./utils-BYqzY6_X-x0QsB8bB.js";import{b as Pe,y as Te,c as Ce}from"./heatmapUtils--OU2Fakh-BfIIxpey.js";import{u as Ne}from"./RendererLegendOptions-f5mIImtQ-DjUg407A.js";import{u as ie}from"./SimpleRenderer-ADQlYl8U-BozHxNBQ.js";import{_ as se}from"./UniqueValueRenderer-BmoLL_Ee-WAX_-d_L.js";const G="esri.renderers.support.DictionaryLoader",qe={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class re{constructor(t,r,o){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new Ee(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=t,this.config=r,this.fieldMap=o}getSymbolFields(){return this._symbolFields}async getSymbolAsync(t,r){var R;let o;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(r));try{o=await this._dictionaryPromise}catch(f){if(ye(f))return this._dictionaryPromise=null,null}const d=(R=this._dictionaryVersion)==null?void 0:R.greaterEqual(4,0),a={};if(this.fieldMap)for(const f of this._symbolFields){const n=Ve(this.fieldMap[f],this._fieldIndex);if(n){const l=t.attributes[n];a[f]=d?l:l!=null?""+t.attributes[n]:""}else a[f]=""}let u=null;try{u=o==null?void 0:o(a,r)}catch{return null}if(!u||typeof u!="string"||u==="invalid")return null;const m=u.split(";"),x=[],g=[];for(let f=0;f<m.length;f++){const n=m[f];if(n){if(n.includes("po:")){const l=n.slice(3).split("|");if(l.length===3){const D=l[0],j=l[1];let S=l[2];const k="countrylabel";if(D===k&&j==="TextString"){if(this.fieldMap!=null){let b=this.fieldMap[k];b==null&&(b=k,this.fieldMap[b]=b),t.attributes[b]=S}continue}if(j==="DashTemplate")S=S.split(" ").map(b=>Number(b));else if(j==="Color"){const b=new v(S).toRgba();S=[b[0],b[1],b[2],255*b[3]]}else S=Number(S);g.push({primitiveName:D,propertyName:j,value:S,defaultValue:null})}}else if(n.includes("|")){for(const l of n.split("|"))if(this._itemNames.has(l)){x.push(l);break}}else if(this._itemNames.has(n))x.push(n);else if(f===0){x.length=0;let l="Invalid_P";t.geometry!=null&&(de(t.geometry)?l="Invalid_A":ce(t.geometry)&&(l="Invalid_L")),x.push(l);break}}}const _=t.geometry==null||!t.geometry.hasZ&&t.geometry.type==="point";return this._cimPartsToCIMSymbol(t,x,g,_,r)}async fetchResources(t){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void P.getLogger(G).error("no valid URL!");const r=W(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:t!=null?t.signal:null}),[{data:o}]=await Promise.all([r,he()]);if(!o)throw this._dictionaryPromise=null,new fe("esri.renderers.DictionaryRenderer","Bad dictionary data!");const{authoringInfo:d,dictionary_version:a,expression:u,itemsNames:m}=o,x=u;let g=!1;a&&(this._dictionaryVersion=De.parse(a),g=this._dictionaryVersion.greaterEqual(4,0)),this._refSymbolUrlTemplate=this.url+"/"+o.cimRefTemplateUrl,this._itemNames=new Set(m),this._symbolFields=d.symbol;const _={};if(this.config){const n=this.config;for(const l in n)_[l]=n[l]}if(d.configuration)for(const n of d.configuration)_.hasOwnProperty(n.name)||(_[n.name]=n.value);const R=[];if(t!=null&&t.fields&&this.fieldMap)for(const n in this.fieldMap){const l=this.fieldMap[n],D=t.fields.filter(j=>j.name.toLowerCase()===(l==null?void 0:l.toLowerCase()));D.length>0&&R.push({...D[0],type:g?D[0].type:"esriFieldTypeString"})}R.length>0&&(this._fieldIndex=new Re(R));const f=me(x,t!=null?t.spatialReference:null,R,_).then(n=>{const l={scale:0};return(D,j)=>{if(n==null)return null;const S=n.repurposeFeature({geometry:null,attributes:D});return l.scale=j!=null?j.scale??void 0:void 0,n.evaluate({$feature:S,$view:l},n.services)}}).catch(n=>(P.getLogger(G).error("Creating dictionary expression failed:",n),null));return this._dictionaryPromise=f,f}async _cimPartsToCIMSymbol(t,r,o,d,a){const u=new Array(r.length);for(let g=0;g<r.length;g++)u[g]=this._getSymbolPart(r[g],a);let m=await Promise.all(u);const x=this.fieldMap;if(x&&m.length>0){const{OverrideHelper:g}=await ge(()=>import("./OverrideHelper-GkMo7t6B-BjdtnZIa.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]),import.meta.url);m=p(m);for(const _ of m)g.applyDictionaryTextOverrides(_,t,x,this._fieldIndex,Me(_))}return new be({data:Oe(m,o,d)})}async _getSymbolPart(t,r){const o=this._symbolCache.get(t);if(o)return o;if(this._ongoingRequests.has(t))return this._ongoingRequests.get(t).then(u=>u.data);const d=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,t),a=W(d,{responseType:"json",query:{f:"json"},...r});this._ongoingRequests.set(t,a),a.finally(()=>this._ongoingRequests.delete(t));try{const u=await a;return this._symbolCache.put(t,u.data),u.data}catch(u){throw u}}}function Oe(e,t,r){if(!e||e.length===0)return null;const o={...e[0]};if(e.length>1){o.effects=null,o.symbolLayers=[];for(const d of e){const a=d;if(a.effects!=null)for(const u of a.symbolLayers)u.effects==null?u.effects=a.effects:u.effects.unshift(...a.effects);o.symbolLayers.unshift(...a.symbolLayers)}}return r&&(o.callout=qe),{type:"CIMSymbolReference",symbol:o,primitiveOverrides:t}}var F;let w=F=class extends Y(T){constructor(e){super(e),this.config=null,this.fieldMap=null,this.scaleExpression=null,this.scaleExpressionTitle=null,this.url=null,this.type="dictionary"}get _loader(){return new re(this.url,this.config,this.fieldMap)}writeData(e,t){e&&(t.scalingExpressionInfo={expression:e,returnType:"number"})}writeVisualVariables(e,t,r,o){o!=null&&o.origin||super.writeVisualVariables(e,t,r,o)}clone(){return new F({config:p(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:p(this.fieldMap),url:p(this.url),visualVariables:p(this.visualVariables)})}async getSymbolAsync(e,t){return this._loader.getSymbolAsync(e,t)}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t),this.scaleExpression&&await L(e,t,this.scaleExpression);for(const r in this.fieldMap){const o=this.fieldMap[r];t.has(o)&&e.add(o)}}get arcadeRequired(){return!0}getSymbol(){return null}get symbols(){return[]}getAttributeHash(){var e;return((e=this.visualVariables)==null?void 0:e.reduce((t,r)=>t+r.getAttributeHash(),""))??""}getMeshHash(){return`${this.url}-${JSON.stringify(this.fieldMap)}`}getSymbolFields(){return this._loader.getSymbolFields()}};i([s({type:re})],w.prototype,"_loader",null),i([s({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],w.prototype,"config",void 0),i([s({type:Object,json:{write:!0}})],w.prototype,"fieldMap",void 0),i([s({type:String,json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],w.prototype,"scaleExpression",void 0),i([K("scaleExpression")],w.prototype,"writeData",null),i([s({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(e){return{enabled:!!e&&!!this.scaleExpression}}}}})],w.prototype,"scaleExpressionTitle",void 0),i([s({type:String,json:{write:!0}})],w.prototype,"url",void 0),i([K("visualVariables")],w.prototype,"writeVisualVariables",null),w=F=i([E("esri.renderers.DictionaryRenderer")],w);const Le=w;var A;let I=A=class extends N{constructor(e){super(e),this.color=null,this.field=null,this.label=null,this.valueExpression=null,this.valueExpressionTitle=null}castField(e){return e==null?e:typeof e=="function"?(P.getLogger(this).error(".field: field must be a string value"),null):ve(e)}getAttributeHash(){return`${this.field}-${this.valueExpression}`}clone(){var e;return new A({color:(e=this.color)==null?void 0:e.clone(),field:this.field,label:this.label,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};i([s({type:v,json:{type:[Number],write:!0}})],I.prototype,"color",void 0),i([s({type:String,json:{write:!0}})],I.prototype,"field",void 0),i([le("field")],I.prototype,"castField",null),i([s({type:String,json:{write:!0}})],I.prototype,"label",void 0),i([s({type:String,json:{write:!0}})],I.prototype,"valueExpression",void 0),i([s({type:String,json:{write:!0}})],I.prototype,"valueExpressionTitle",void 0),I=A=i([E("esri.renderers.support.AttributeColorInfo")],I);const oe=I;var $;let q=$=class extends N{constructor(){super(...arguments),this.unit=null}clone(){return new $({unit:this.unit})}};i([s({type:String,json:{write:!0}})],q.prototype,"unit",void 0),q=$=i([E("esri.renderers.support.DotDensityLegendOptions")],q);const ke=q;var H;let c=H=class extends Y(T){constructor(e){super(e),this.attributes=null,this.backgroundColor=new v([0,0,0,0]),this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new J,this.dotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}calculateDotValue(e){if(this.referenceScale==null)return this.dotValue;const t=e/this.referenceScale*this.dotValue;return t<1?1:t}getSymbol(){return new ae({outline:this.outline})}async getSymbolAsync(){return this.getSymbol()}get symbols(){return[this.getSymbol()]}getAttributeHash(){var e;return((e=this.attributes)==null?void 0:e.reduce((t,r)=>t+r.getAttributeHash(),""))??""}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new H({attributes:p(this.attributes),backgroundColor:p(this.backgroundColor),dotBlendingEnabled:p(this.dotBlendingEnabled),dotShape:p(this.dotShape),dotSize:p(this.dotSize),dotValue:p(this.dotValue),legendOptions:p(this.legendOptions),outline:p(this.outline),referenceScale:p(this.referenceScale),seed:p(this.seed),visualVariables:p(this.visualVariables),authoringInfo:p(this.authoringInfo)})}getControllerHash(){var e;return`${(e=this.attributes)==null?void 0:e.map(t=>t.field||t.valueExpression||"")}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const r of this.attributes??[])r.valueExpression&&await L(e,t,r.valueExpression),r.field&&e.add(r.field)}};i([s({type:[oe],json:{write:!0}})],c.prototype,"attributes",void 0),i([s({type:v,json:{write:!0}})],c.prototype,"backgroundColor",void 0),i([s({type:Boolean,json:{write:!0}})],c.prototype,"dotBlendingEnabled",void 0),i([s({type:String,json:{write:!1}})],c.prototype,"dotShape",void 0),i([s({type:Number,json:{write:!0}})],c.prototype,"dotSize",void 0),i([s({type:ke,json:{write:!0}})],c.prototype,"legendOptions",void 0),i([s({type:J,json:{default:null,write:!0}})],c.prototype,"outline",void 0),i([s({type:Number,json:{write:!0}})],c.prototype,"dotValue",void 0),i([s({type:Number,json:{write:!0}})],c.prototype,"referenceScale",void 0),i([s({type:Number,json:{write:!0}})],c.prototype,"seed",void 0),i([U({dotDensity:"dot-density"})],c.prototype,"type",void 0),c=H=i([E("esri.renderers.DotDensityRenderer")],c);const Fe=c;var z;let C=z=class extends N{constructor(e){super(e),this.color=null,this.ratio=null}clone(){return new z({color:this.color&&this.color.clone(),ratio:this.ratio})}};i([s({type:v,json:{type:[ue],default:null,write:{isRequired:!0}}})],C.prototype,"color",void 0),i([s({type:Number,json:{write:{isRequired:!0}}})],C.prototype,"ratio",void 0),C=z=i([E("esri.renderers.support.HeatmapColorStop")],C);const O=C;let M=class extends Z.ClonableMixin(N){constructor(){super(...arguments),this.minLabel=null,this.maxLabel=null,this.title=null}};i([s({type:String,json:{write:!0}})],M.prototype,"minLabel",void 0),i([s({type:String,json:{write:!0}})],M.prototype,"maxLabel",void 0),i([s({type:String,json:{write:!0}})],M.prototype,"title",void 0),M=i([E("esri.renderers.support.HeatmapLegendOptions")],M);var B;function Q(e){if(e!=null){const{maxDensity:t,minDensity:r,radius:o}=e;if(t!=null||r!=null||o!=null){const{blurRadius:d,maxPixelIntensity:a,minPixelIntensity:u,...m}=e;return m}}return e}let y=B=class extends T{constructor(e){super(e),this.authoringInfo=null,this.colorStops=[new O({ratio:0,color:new v("rgba(255, 140, 0, 0)")}),new O({ratio:.75,color:new v("rgba(255, 140, 0, 1)")}),new O({ratio:.9,color:new v("rgba(255, 0,   0, 1)")})],this.field=null,this.legendOptions=null,this.maxDensity=.04,this.minDensity=0,this.radius=18,this.referenceScale=0,this.type="heatmap",this.valueExpression=null,this.valueExpressionTitle=null}normalizeCtorArgs(e){return Q(e)}get blurRadius(){return Pe(this.radius)}set blurRadius(e){const t=this.maxPixelIntensity,r=this.minPixelIntensity;this._set("radius",Te(e)),this._set("maxDensity",t*this._pixelIntensityToDensity),this._set("minDensity",r*this._pixelIntensityToDensity)}get maxPixelIntensity(){return this.maxDensity/this._pixelIntensityToDensity}set maxPixelIntensity(e){this._set("maxDensity",e*this._pixelIntensityToDensity)}get minPixelIntensity(){return this.minDensity/this._pixelIntensityToDensity}set minPixelIntensity(e){this._set("minDensity",e*this._pixelIntensityToDensity)}get _pixelIntensityToDensity(){return 24/(Ce**2*this.blurRadius**4)}read(e,t){e=Q(e),super.read(e,t)}getSymbol(){return new ee}async getSymbolAsync(){return this.getSymbol()}get symbols(){return[this.getSymbol()]}async collectRequiredFields(e,t){const r=this.field,o=this.valueExpression;r&&typeof r=="string"&&we(e,t,r),o&&typeof o=="string"&&await L(e,t,o)}getAttributeHash(){return""}getMeshHash(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`}clone(){return new B({authoringInfo:this.authoringInfo&&this.authoringInfo.clone(),colorStops:p(this.colorStops),field:this.field,legendOptions:p(this.legendOptions),maxDensity:this.maxDensity,minDensity:this.minDensity,radius:this.radius,referenceScale:this.referenceScale,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};i([s({type:xe,json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],y.prototype,"authoringInfo",void 0),i([s({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],y.prototype,"blurRadius",null),i([s({type:[O],json:{write:{isRequired:!0}}})],y.prototype,"colorStops",void 0),i([s({type:String,json:{write:!0}})],y.prototype,"field",void 0),i([s({type:M,json:{write:!0}})],y.prototype,"legendOptions",void 0),i([s({type:Number,json:{write:!0}})],y.prototype,"maxDensity",void 0),i([s({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],y.prototype,"maxPixelIntensity",null),i([s({type:Number,json:{write:!0}})],y.prototype,"minDensity",void 0),i([s({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],y.prototype,"minPixelIntensity",null),i([s({type:Number,cast:X,json:{write:!0}})],y.prototype,"radius",void 0),i([s({type:Number,range:{min:0},json:{default:0,write:!0}})],y.prototype,"referenceScale",void 0),i([U({heatmap:"heatmap"})],y.prototype,"type",void 0),i([s({type:String,json:{write:!0,origins:{"web-document":{write:!1},"portal-item":{write:!1}}}})],y.prototype,"valueExpression",void 0),i([s({type:String})],y.prototype,"valueExpressionTitle",void 0),i([s({readOnly:!0})],y.prototype,"_pixelIntensityToDensity",null),y=B=i([E("esri.renderers.HeatmapRenderer")],y);const ne=y;let V=class extends Z.ClonableMixin(N){constructor(){super(...arguments),this.color=new v([0,0,0,0]),this.label=null,this.threshold=0}};i([s({type:v,json:{write:!0}})],V.prototype,"color",void 0),i([s({type:String,json:{write:!0}})],V.prototype,"label",void 0),i([s({type:Number,range:{min:0,max:1},json:{write:!0}})],V.prototype,"threshold",void 0),V=i([E("esri.renderers.support.OthersCategory")],V);const Ae={base:_e,key:"type",typeMap:{size:je,opacity:Ie}};let h=class extends Y(Z.ClonableMixin(T)){constructor(e){super(e),this.attributes=null,this.backgroundFillSymbol=null,this.defaultColor=new v([0,0,0,0]),this.defaultLabel=null,this.holePercentage=0,this.othersCategory=new V,this.legendOptions=null,this.outline=null,this.size=12,this.type="pie-chart",this.visualVariables=null}getSymbol(){var e;return new ee({size:this.size?this.size/2+(((e=this.outline)==null?void 0:e.width)||0):0})}async getSymbolAsync(){return this.getSymbol()}get symbols(){return[this.getSymbol(),this.backgroundFillSymbol].filter(pe)}getAttributeHash(){var e;return((e=this.visualVariables)==null?void 0:e.reduce((t,r)=>t+r.getAttributeHash(),""))??""}getMeshHash(){return this.symbols.reduce((e,t)=>e+JSON.stringify(t),"")}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const r of this.attributes)r.valueExpression&&await L(e,t,r.valueExpression),r.field&&e.add(r.field)}};i([s({type:[oe],json:{write:!0}})],h.prototype,"attributes",void 0),i([s(Se)],h.prototype,"backgroundFillSymbol",void 0),i([s({type:v,json:{write:!0}})],h.prototype,"defaultColor",void 0),i([s({type:String,json:{write:!0}})],h.prototype,"defaultLabel",void 0),i([s({type:Number,range:{min:0,max:1},json:{write:!0}})],h.prototype,"holePercentage",void 0),i([s({type:V,json:{write:!0}})],h.prototype,"othersCategory",void 0),i([s({type:Ne,json:{write:!0}})],h.prototype,"legendOptions",void 0),i([s({type:J,json:{default:null,write:!0}})],h.prototype,"outline",void 0),i([s({type:Number,cast:X,json:{write:!0}})],h.prototype,"size",void 0),i([U({pieChart:"pie-chart"})],h.prototype,"type",void 0),i([s({types:[Ae]})],h.prototype,"visualVariables",void 0),h=i([E("esri.renderers.PieChartRenderer")],h);const $e=h,st={key:"type",base:T,typeMap:{heatmap:ne,simple:ie,"unique-value":se,"class-breaks":te,"dot-density":Fe,dictionary:Le,"pie-chart":$e},errorContext:"renderer"},rt={key:"type",base:T,typeMap:{simple:ie,"unique-value":se,"class-breaks":te,heatmap:ne},errorContext:"renderer",validate:He};function He(e){switch(e.type){case"simple":return ze(e);case"unique-value":return Be(e);case"class-breaks":return Je(e);case"heatmap":return e}}function ze(e){if(e.symbol)return e;P.getLogger("esri.renderers.support.types").error("Removed invalid 'simple' renderer without a symbol from web scene.")}function Be(e){const t=e.uniqueValueInfos,r=t==null?void 0:t.filter(({symbol:o,label:d},a)=>(o||P.getLogger("esri.renderers.support.types").error(`Removed invalid unique value info ([${a}] ${d}) without a symbol from web scene.`),!!o));return(r==null?void 0:r.length)!==(t==null?void 0:t.length)&&(e.uniqueValueInfos=r),e}function Je(e){const t=e.classBreakInfos,r=t==null?void 0:t.filter(({symbol:o,label:d},a)=>(o||P.getLogger("esri.renderers.support.types").error(`Removed invalid class break info ([${a}] ${d}) without a symbol from web scene.`),!!o));return(r==null?void 0:r.length)!==(t==null?void 0:t.length)&&(e.classBreakInfos=r),e}export{rt as $,st as k,O as q};
