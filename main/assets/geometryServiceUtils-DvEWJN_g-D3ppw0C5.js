import{f as c,h as l,bq as s}from"./index-1o7Uo5_u.js";import{o as f,O as g}from"./project-TZjL1vJA-M-SRmSU_.js";import"./utils-BO8hgPs3-BIQC0bAi.js";import"./utils-DpLVEUvg-CaXyb1MK.js";async function m(e=null,a){var o,i;if(c.geometryServiceUrl)return c.geometryServiceUrl;if(!e)throw new l("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");let r;r="portal"in e?e.portal||s.getDefault():e,await r.load({signal:a});const t=(i=(o=r.helperServices)==null?void 0:o.geometry)==null?void 0:i.url;if(!t)throw new l("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");return t}async function w(e,a,r=null,t){const o=await m(r,t),i=new f({geometries:[e],outSpatialReference:a}),n=await g(o,i,{signal:t});if(n&&Array.isArray(n)&&n.length===1)return n[0];throw new l("internal:geometry-service-projection-failed","Geometry projection failed on service")}export{m as getGeometryServiceURL,w as projectGeometry};
