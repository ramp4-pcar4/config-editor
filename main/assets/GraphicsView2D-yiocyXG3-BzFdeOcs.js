import{a2 as he,bM as ce,a5 as x,ai as ue,dK as de,e3 as le,H as me,cX as T,bW as pe,ks as ge,bV as ye,fQ as J,kt as fe,ku as _e,eh as ee,bL as be,v as S,j0 as we,cT as Ie,kv as Se,fr as B,I as v,t as ve,k2 as xe,iE as Me,iw as j,iC as Re,d$ as Te,e0 as Ge,kw as Ce,eY as Pe}from"./index-BcWBQvu1.js";import{o as ke}from"./FieldsIndex-Y7EBAYp0-C6we7QC1.js";import{S as De,b as je,m as Ue,f as $,k as N,p as te}from"./CIMSymbolHelper-Bcp4nGf3-BcJij-e4.js";import{OverrideHelper as ze}from"./OverrideHelper-GkMo7t6B-DC2jqaAF.js";import{D as Fe,t as C,h as Oe,j as Be,k as Le}from"./definitions-CBIQmVpq-o3EUznKY.js";import{J as $e}from"./WGLContainer-CF3AeUnM-CgvXFJk9.js";import{C as qe,I as Ae,H as Ee,t as Ve,q as He,s as Ze}from"./FeatureMetadata-X_4q5T4e-B6_HaE9k.js";import{e as We,G as Ye,r as Ne,h as Qe,p as Xe,m as Ke,b as q,d as Je,c as et,l as tt,u as st,i as rt,n as it}from"./FeatureCommandQueue-CqM9cs0l-DWP_Z8eV.js";import{L as nt,C as ot,D as A}from"./featureConversionUtils-DRaHTjrY-2OeRDlb0.js";import{c as P}from"./OptimizedGeometry-1qDYm3YK-JQGls0Yz.js";import{E as at}from"./Tile-DvzRai0K-CKoBSD0n.js";import{u as ht}from"./normalizeUtils-b-vZURob-BKxgSG4k.js";import{p as ct}from"./memoryEstimations-iHVpvWPf-7G5hNXoi.js";import{Q as E,C as V}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{n as ut}from"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import{M as dt}from"./vec2-BnynUbeJ-CKtGJQAy.js";import{F as lt}from"./normalizeUtilsSync-C40q69cc-BfnxPwbO.js";import{k as mt,g as pt,h as gt,y as yt,x as ft}from"./dehydratedFeatures-CekTKTy7-DiveaoVK.js";import{p as _t,h as bt}from"./queryUtils-OXllLZed-C4meNqUf.js";import{l as wt}from"./UpdateTracking2D-CaPtqow6-BOCKeyxP.js";async function It(s,e,t){const r=[],i={scaleInfo:Ne(s),scaleExpression:null};for(const n of e)switch(n.type){case"marker":if(n.animationParams){r.push(...rt(t.instances.animatedMarker,n,q,i));break}r.push(...it(t.instances.marker,n,q,i));break;case"fill":n.spriteRasterizationParam==null?r.push(...tt(t.instances.fill,n,i)):r.push(...st(t.instances.complexFill,n,!1,i));break;case"line":n.spriteRasterizationParam?r.push(...Je(t.instances.texturedLine,n,!1,i)):r.push(...et(t.instances.line,n,!1,i));break;case"text":r.push(...Ke(t.instances.text,n,q,i));break;case"gradientFill":r.push(...Xe(t.instances.gradientFill,n,i));break;case"gradientStroke":r.push(...Qe(t.instances.gradientStroke,n,i))}return r}let St=class Z extends Ze{static from(e,t,r){return new Z(e,t,r)}constructor(e,t,r){super(r),this._items=e,this._tile=t,this._index=-1,this._cachedGeometry=null;const i=t.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){var e;return((e=this._current.symbolResource)==null?void 0:e.symbolInfo.meshWriters)??[]}hasField(e){return this._current.attributes[e]!=null}field(e){return this.readAttribute(e)}get geometryType(){const e=ee(this._current.geometry);return e==="esriGeometryPoint"?"esriGeometryMultipoint":e}getCursor(){return this.copy()}copy(){const e=new Z(this._items,this._tile,this.metadata);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._cachedGeometry=this._cachedGeometry,e._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let e=nt(this._current.projectedGeometry,this.hasZ,this.hasM);if(this.geometryType==="esriGeometryPolyline"&&(e=ot(new P,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=A(new P,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(e){if(!this._wrappingInfo)return;const{worldSizeX:t}=this._wrappingInfo;if(e.isPoint)return t===1?(e.coords.push(C,0),e.coords.push(-1024,0),void e.lengths.push(3)):t===2?(e.coords.push(2*C,0),e.coords.push(-2048,0),void e.lengths.push(3)):void this._wrapVertex(e.coords,0,2,t);if(this.geometryType==="esriGeometryMultipoint"){if(t===1){const r=e.coords.slice();r[0]-=512;const i=e.coords.slice();i[0]+=512,e.coords.push(...r,...i);const n=e.lengths[0];return void e.lengths.push(n,n)}this._wrapVertex(e.coords,0,2,t)}}_wrapVertex(e,t,r,i){const n=t*r,o=e[n];o<-C*(i-2)?e[n]=o+C*i:o>C*(i-1)&&(e[n]=o-C*i)}_readX(){const e=this._readGeometry();return e!=null?e.coords[0]:0}_readY(){const e=this._readGeometry();return e!=null?e.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{const e=Me(this._current.projectedGeometry),t=new P([],e);return A(new P,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{const e=this._current.projectedGeometry,t=xe(e.paths,this.hasZ),r=new P([],t);return A(new P,r,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(e,t){const r=this._current.attributes[e];if(r!==void 0)return r;const i=e.toLowerCase();for(const n in this._current.attributes)if(n.toLowerCase()===i)return this._current.attributes[n]}_readAttributes(){return this._current.attributes}};function W(s){var e,t;return"curveRings"in s&&!!((e=s.curveRings)!=null&&e.length)||"curvePaths"in s&&!!((t=s.curvePaths)!=null&&t.length)}function vt(s){return"curveRings"in s?s.curveRings:s.curvePaths}function se(s){return"b"in s}function re(s){return"c"in s}function xt(s){return Array.isArray(s)}function ie(s){return"a"in s}function Mt(s){return s.a.length===4}function Rt(s){return se(s)?s.b[0]:re(s)?s.c[0]:ie(s)?s.a[0]:s}const H={maxSegmentLength:1/0,maxSegmentsPerCurve:12e3,minSegmentsPerCurve:1},L=1e-6,k=ut();function U(s,e){return dt(s,e)}function G(s,e){const t=Math.atan2(s,e);return t<0?t+2*Math.PI:t}function ne(s,e,t,{maxSegmentLength:r,maxSegmentsPerCurve:i,minSegmentsPerCurve:n},o){const a=r*r,u=1/i,c=o(0),h=o(1);U(e,c)>L&&s.push(c);const d=[1],l=[h],m=1/n;for(let g=n-1;g>0;g--){const f=g*m;d.push(f),l.push(o(f))}let p=0,y=c;for(;d.length>0;){const g=d.pop(),f=l.pop();if(U(y,f)<a||p===g||g-p<u)s.push(f),p=g,y=f;else{d.push(g),l.push(f);const _=(p+g)/2;d.push(_),l.push(o(_))}}return U(t,h)>L&&s.push([...t]),s}function Tt(s,e,t,r,i){const n=1-i,o=n*n,a=i*i,u=o*n,c=3*i*o,h=3*a*n,d=a*i;return[s[0]*u+e[0]*c+t[0]*h+r[0]*d,s[1]*u+e[1]*c+t[1]*h+r[1]*d]}function Gt(s,e,t,r){const[i,n,o]=t.b;return ne(s,e,i,r,a=>Tt(e,n,o,i,a))}function Ct(s,e,t,r){const[i,n]=e,[o,a]=t,[u,c]=r,h=i*i+n*n,d=o*o+a*a,l=u*u+c*c;E(k,i,o,u,n,a,c,1,1,1);const m=V(k);if(m===0)return null;E(k,h,d,l,n,a,c,1,1,1);const p=V(k);E(k,h,d,l,i,o,u,1,1,1);const y=p/m*.5,g=V(k)/m*-.5;return s[0]=y,s[1]=g,s}function oe(s,e,t,r,i,n,o,a,{maxSegmentLength:u,maxSegmentsPerCurve:c,minSegmentsPerCurve:h}){const d=2*n,l=[r+n*Math.cos(o),i+n*Math.sin(o)],m=[r+n*Math.cos(a),i+n*Math.sin(a)];U(e,l)>L&&s.push(l);const p=a-o,y=u<d?2*Math.asin(u/d):p,g=Math.min(c,Math.max(h,Math.ceil(Math.abs(p/y)))),f=1/g;for(let _=1;_<g;_++){const w=_*f,b=o*(1-w)+a*w;s.push([r+n*Math.cos(b),i+n*Math.sin(b)])}return s.push(m),U(t,m)>L&&s.push([...t]),s}function Pt(s,e,t,r){const[i,n]=t.c,o=Ct([],e,n,i);if(o==null)return s.push([...i]),s;const[a,u]=e,[c,h]=n,[d,l]=i,[m,p]=o,y=a-m,g=u-p,f=Math.sqrt(y*y+g*g),_=G(u-p,a-m),w=G(h-p,c-m);let b=G(l-p,d-m);return(w-_)*(b-w)<0&&(b+=2*Math.sign(_-b)*Math.PI),oe(s,e,i,m,p,f,_,b,r)}function ae(s,e,t){const[r,i,n,o]=t.a,a=Math.abs(s-e),u=a>Math.PI,c=a<Math.PI,h=Pe(a,Math.PI);return(!h&&(u&&n||c&&!n)||h&&(s>e&&o||s<e&&!o))&&(s+=2*(Math.sign(e-s)||1)*Math.PI),s}function kt(s,e,t,r){const[i,n]=t.a,[o,a]=e,[u,c]=i,[h,d]=n,l=o-h,m=a-d,p=Math.sqrt(l*l+m*m),y=G(a-d,o-h);return oe(s,e,i,h,d,p,y,ae(G(c-d,u-h),y,t),r)}function Dt(s,e,t,r){const[i,n,o,a,u,c,h]=t.a,[d,l]=e,[m,p]=i,[y,g]=n,f=c*h,_=Math.cos(u),w=Math.sin(u),b=G(1/f*(l-g)*_-1/f*(d-y)*w,1/c*(l-g)*w+1/c*(d-y)*_),D=ae(G(1/f*(p-g)*_-1/f*(m-y)*w,1/c*(p-g)*w+1/c*(m-y)*_),b,t);return ne(s,e,i,r,R=>{const z=b*(1-R)+D*R,F=Math.cos(z),O=Math.sin(z);return[c*F*_-f*O*w+y,c*F*w+f*O*_+g]})}function jt(s,e,t,r){return se(t)?Gt(s,e,t,r):re(t)?Pt(s,e,t,r):ie(t)?Mt(t)?kt(s,e,t,r):Dt(s,e,t,r):(xt(t)&&s.push([...t]),s)}function Q(s,e){if(!W(s))return s;const t=vt(s),r=[];for(const i of t){const n=[];for(let o=0,a=1;a<i.length;o=a++){const u=Rt(i[o]);o===0&&n.push(u),jt(n,u,i[a],{maxSegmentLength:e.maxSegmentLength??H.maxSegmentLength,maxSegmentsPerCurve:e.maxSegmentsPerCurve??H.maxSegmentsPerCurve,minSegmentsPerCurve:Math.max(e.minSegmentsPerCurve??H.minSegmentsPerCurve,1)})}r.push(n)}return"curvePaths"in s?{paths:r,spatialReference:s.spatialReference}:{rings:r,spatialReference:s.spatialReference}}class Y{static fromGraphic(e,t,r,i){return new Y(e.geometry,t,e.attributes,e.visible,e.uid,e.version,r,i)}constructor(e,t,r,i,n,o,a,u){this.geometry=e,this.symbol=t,this.attributes=r,this.visible=i,this.objectId=n,this._version=o,this.zOrder=a,this.displayId=u,this.symbolBounds=j(),this.prevSymbolBounds=j(),this.size=[0,0,0,0],this.geometryBounds=j(),this._isDensificationDirty=!1,this._densificationSegmentLength=1/0}get projectedGeometry(){return this._projectedGeometry}get linearCIM(){var e;return(e=this.symbolResource)==null?void 0:e.symbolInfo.linearCIM}get usedMemory(){return 128+ct(this.attributes)+mt(this.geometry)}get hasAnimations(){const{linearCIM:e}=this;return!!e&&e.some(t=>"animationParams"in t&&!!t.animationParams)}get hasCurvedGeoemtry(){return this.geometry!=null&&this.geometry.type!=="mesh"&&W(this.geometry)}update(e,t,r){return(this._version!==e.version||this.zOrder!==r||this.symbol!==t)&&(this.prevSymbolBounds=this.symbolBounds,this.symbolBounds=j(),this.zOrder=r,this.geometry=e.geometry,this.attributes=e.attributes,this.symbol=t,this.visible=e.visible,this._version=e.version,this.symbolResource=null,this._projectedGeometry=null,j(this.geometryBounds),this._minDensificationSegmentLength=null,!0)}updateDensificationResolution(e){if(!this.hasCurvedGeoemtry)return!1;const t=Math.max(Ut(e),this._minDensificationSegmentLength??0);return t!==this._densificationSegmentLength&&(this._densificationSegmentLength=t,this._isDensificationDirty=!0,!0)}async projectAndNormalize(e){let t,r=this.geometry;if(r&&r.spatialReference&&r.type!=="mesh"&&(r.type==="extent"&&(r=te(r)),t=W(r)?Q(r,{maxSegmentLength:1/0,minSegmentsPerCurve:pt()}):r.toJSON(),this._projectedGeometry=await X(t,r.spatialReference,e),Re(this.geometryBounds,this._projectedGeometry),this.hasCurvedGeoemtry&&this._projectedGeometry!=null)){const i=Te(this.geometryBounds),n=Ge(this.geometryBounds);(i||n)&&(this._minDensificationSegmentLength=Math.max(i,n)/gt())}}async densifyCurvedGeometryForDisplay(e){if(!this.hasCurvedGeoemtry||!this._isDensificationDirty)return;this._isDensificationDirty=!1;const t=this.geometry;if(!t||!t.spatialReference||t.type==="mesh")return;const r=e.metersPerUnit/t.spatialReference.metersPerUnit,i=this._densificationSegmentLength*r,n=Q(t,{maxSegmentLength:i,minSegmentsPerCurve:yt()});this._projectedGeometry=await X(n,t.spatialReference,e)}}async function X(s,e,t){await _t(s.spatialReference,t);const r=lt(s);if(!r)return;const i=bt(r,e,t);return i&&Ce(i),J(i)?te(i):i}function Ut(s){return 2**Math.round(Math.log2(s))*ft()}class zt{constructor(e,t,r){this.added=e,this.updated=t,this.removed=r}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}}const K=1e-5;function Ft(s,e){return e.zOrder-s.zOrder}class Ot{constructor(e,t,r,i,n){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=e,this._cimResourceManager=t,this._hittestDrawHelper=new Ue(t),this._tileInfoView=r,this._store=n;const o=r.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(o.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(e){return this._items.get(e)}async update(e,t,r){const i=[],n=[],o=[],a=new Set,u=[];let c=0;for(const h of e.items){c++;const d=h.uid,l=this._items.get(d),m=t(h);if(a.add(d),l){const g=l.update(h,m,c),f=l.updateDensificationResolution(this._resolution);g&&u.push(this._updateItem(l,r)),(g||f)&&n.push(l);continue}const p=this._store.createDisplayIdForObjectId(d),y=Y.fromGraphic(h,m,c,p);y.updateDensificationResolution(this._resolution),u.push(this._updateItem(y,r)),this._items.set(y.objectId,y),i.push(y)}for(const[h,d]of this._items.entries())a.has(h)||(this._store.releaseDisplayIdForObjectId(h),this._items.delete(h),o.push(d));return await Promise.all(u),this._index=null,new zt(i,n,o)}updateLevel(e){if(this._resolution===e)return!1;this._index=null,this._boundsDirty=!0,this._resolution=e;for(const t of this.items())if(t.hasCurvedGeoemtry)return!0;return!1}hitTest(e,t,r,i,n){const o=x("esri-mobile"),a=o?Oe:Be,u=a+(o?0:Le);e=ht(e,this._tileInfoView.spatialReference);const c=i*window.devicePixelRatio*u,h=T();h[0]=e-c,h[1]=t-c,h[2]=e+c,h[3]=t+c;const d=i*window.devicePixelRatio*a,l=T();l[0]=e-d,l[1]=t-d,l[2]=e+d,l[3]=t+d;const m=.5*i*(u+$),p=this._searchIndex(e-m,t-m,e+m,t+m);if(!p||p.length===0)return[];const y=[],g=T(),f=T();for(const b of p){if(!b.visible)continue;const{geometryBounds:D,symbolResource:R}=b;this._getSymbolBounds(g,R,D,f,n),f[3]=f[2]=f[1]=f[0]=0,we(g,h)&&y.push(b)}if(y.length===0)return[];const _=this._hittestDrawHelper,w=[];for(const b of y){const{projectedGeometry:D,symbolResource:R}=b;if(!R)continue;const{textInfo:z,symbolInfo:F}=R,O=F.cimSymbol;_.hitTest(l,O.symbol,D,z,n,i)&&w.push(b)}return w.sort(Ft),w.map(b=>b.objectId)}queryItems(e){return this._items.size===0?[]:this._searchForItems(e)}clear(){this._items.clear(),this._index=null}async _updateItem(e,t){await e.projectAndNormalize(this._outSpatialReference),await t(e);const{size:r}=e;r[0]=r[1]=r[2]=r[3]=0,this._getSymbolBounds(e.symbolBounds,e.symbolResource,e.geometryBounds,e.size,0)}_searchIndex(e,t,r,i){return this._boundsDirty&&(this._items.forEach(n=>this._getSymbolBounds(n.symbolBounds,n.symbolResource,n.geometryBounds,n.size,0)),this._boundsDirty=!1),this._index||(this._index=at(9,n=>({minX:n.symbolBounds[0],minY:n.symbolBounds[1],maxX:n.symbolBounds[2],maxY:n.symbolBounds[3]})),this._index.load(Array.from(this._items.values()))),this._index.search({minX:e,minY:t,maxX:r,maxY:i})}_searchForItems(e){const t=this._tileInfoView.spatialReference,r=e.bounds,i=Ie(t);if(i&&t.isWrappable){const[n,o]=i.valid,a=Math.abs(r[2]-o)<K,u=Math.abs(r[0]-n)<K;if((!a||!u)&&(a||u)){const c=e.resolution;let h;h=T(a?[n,r[1],n+c*$,r[3]]:[o-c*$,r[1],o,r[3]]);const d=this._searchIndex(r[0],r[1],r[2],r[3]),l=this._searchIndex(h[0],h[1],h[2],h[3]);return[...new Set([...d,...l])]}}return this._searchIndex(r[0],r[1],r[2],r[3])}_getSymbolBounds(e,t,r,i,n){if(!t||!t.symbolInfo.linearCIM)return null;if(e||(e=T()),Se(e,r),!i||i[0]===0&&i[1]===0&&i[2]===0&&i[3]===0){const{textInfo:u,symbolInfo:c}=t,h=c.cimSymbol;i||(i=[0,0,0,0]);const d=N.getSymbolInflateSize(i,h.symbol,this._cimResourceManager,n,u);i[0]=B(d[0]),i[1]=B(d[1]),i[2]=B(d[2]),i[3]=B(d[3])}const o=this._resolution,a=N.safeSize(i);return e[0]-=a*o,e[1]-=a*o,e[2]+=a*o,e[3]+=a*o,e}}class M{static getOrCreate(e,t,r){let i=t.get(e.id);return i||(i=new M(e,r),t.set(e.id,i)),i}static fromItems(e,t,r){const i=new M(e,r);for(const n of t)i.append(n);return i}constructor(e,t){this.tile=e,this.metadata=t,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=St.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(e){this.addedOrModified.push(e),e.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[e.displayId]=e.objectId)}}let I=class extends he.IdentifiableMixin(ce){constructor(s){super(s),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new wt({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new We({process:e=>{if(e.type==="update")return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new qe({spatialReference:this.view.spatialReference,fields:new ke}),this._attributeStore=new Ae({isLocal:!0,update:e=>{x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:e}),this.container.attributeView.requestUpdate(e),this.container.requestRender(),x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:e})}});const s=Ye(null,[]);this._attributeStore.update(s,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=Ee.createGraphics(this.view.spatialReference),this._resourceProxy=new Ve({fetch:e=>Promise.all(e.map(t=>this.view.stage.textureManager.rasterizeItem(t))),fetchDictionary:e=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([ue(()=>this._effectiveRenderer,()=>this._pushUpdate()),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{var e;this.addHandles([this.graphics.on("change",()=>this._pushUpdate())]),(e=this._graphicStore)==null||e.destroy(),this._graphicStore=new Ot(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()})]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);const s=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:s,removed:[]})}get _effectiveRenderer(){return typeof this.renderer=="function"?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){const s=!this._attached||this._updateTracking.updating;return x("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${s}
  -> attaching ${!this._attached}
  -> updateTracking ${this._updateTracking.updating}`),s}hitTest(s){if(!this.view||this.view.suspended)return[];const{resolution:e,rotation:t}=this.view.state,r=this._graphicStore.hitTest(s.x,s.y,2,e,t),i=new Set(r),n=this.graphics.items.reduce((o,a)=>(i.has(a.uid)&&o.set(a.uid,a),o),new Map);return r.map(o=>n.get(o)).filter(de)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(s){this.updateRequested&&(this.updateRequested=!1,this.update(s))}viewChange(){this.requestUpdate()}setHighlight(s){var t;const e=[];for(const{objectId:r,highlightFlags:i}of s){const n=(t=this._graphicStore.getItem(r))==null?void 0:t.displayId;e.push({objectId:r,highlightFlags:i,displayId:n})}this._attributeStore.setHighlight(e,s),this._pushUpdate()}graphicUpdateHandler(s){this._pushUpdate()}update(s){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(s.state.resolution)&&this.pushUpdate()}pushUpdate(){this._pushUpdate()}_pushUpdate(){le(this._commandQueue.push({type:"update"}))}async _update(){try{x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`);const s=await this._graphicStore.update(this.graphics,t=>this._getSymbolForGraphic(t),t=>this._ensureSymbolResource(t));for(const t of s.updated)this.container.restartAnimation(t.objectId);if(!s.hasAnyUpdate())return void this._attributeStore.sendUpdates();s.removed.length&&(this._cleanupRequired=!0),x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,s);const e=this._createTileMessages(s);await this._densifyItemsForDisplay(e),await this._fetchResources(e),this._write(e);for(const t of s.added)this._setFilterState(t);for(const t of s.updated)this._setFilterState(t);x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,s),this._attributeStore.sendUpdates(),x("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,s)}catch{}this._cleanupSharedResources()}_createTileMessages(s){const e=new Map;for(const t of s.added){const r=this.view.graphicsTileStore.getIntersectingTiles(t.symbolBounds);for(const i of r)M.getOrCreate(i,e,this._metadata).append(t)}for(const t of s.updated){const r=this.view.graphicsTileStore.getIntersectingTiles(t.prevSymbolBounds),i=this.view.graphicsTileStore.getIntersectingTiles(t.symbolBounds);for(const n of r)M.getOrCreate(n,e,this._metadata).removed.push(t.displayId);for(const n of i)M.getOrCreate(n,e,this._metadata).append(t)}for(const t of s.removed){const r=this.view.graphicsTileStore.getIntersectingTiles(t.symbolBounds);for(const i of r)M.getOrCreate(i,e,this._metadata).removed.push(t.displayId)}return Array.from(e.values())}async _densifyItemsForDisplay(s){const e=new Map;for(const t of s)for(const r of t.addedOrModified)e.has(r)||e.set(r,r.densifyCurvedGeometryForDisplay(this.view.spatialReference));await Promise.all(e.values())}async _fetchResources(s){const e={timeZone:null,timeExtent:null};for(const{tile:t,reader:r}of s){x("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${t.id}] GraphicsView fetchResources`,s);const i=r.getCursor();for(;i.next();)for(const n of i.getMeshWriters())n.enqueueRequest(this._resourceProxy,i,t.createArcadeEvaluationOptions(e))}await this._resourceProxy.fetchEnqueuedResources()}_write(s){for(const e of s){x("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView write`,e);const t=this._writeMeshes(e);let r=this._tiles.get(e.tile.key);r||(r=this._createFeatureTile(e.tile.key)),x("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView onTileData`,e),this.container.onTileData(r,{type:"update",modify:t,remove:e.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:e.objectIdMap}),this.container.requestRender()}}_writeMeshes(s){const e={timeZone:null,timeExtent:null},t=new He(s.tile.id),r=s.reader.getCursor();for(;r.next();){t.entityStart(r.getDisplayId(),r.getZOrder());for(const i of r.getMeshWriters())i.write(t,this._resourceProxy,r,s.tile.createArcadeEvaluationOptions(e),s.tile.level);t.entityEnd()}return{...t.serialize().message,tileId:s.tile.id}}_setFilterState(s){const e=s.displayId,t=this._attributeStore.getHighlightFlags(s.objectId);this._attributeStore.setData(e,0,0,t|(s.visible?Fe:0))}_getSymbolForGraphic(s){return s.symbol!=null?s.symbol:this._effectiveRenderer!=null?this._effectiveRenderer.getSymbol(s):this._getNullSymbol(s)}async _ensureSymbolResource(s){if(!s.symbol)return;const e=await this._getSymbolInfo(s.symbol);if(!e)return;const t=e.linearCIM.filter(r=>r.type==="text");if(t.length>0){const r=await this._getTextResources(s,t);s.symbolResource={symbolInfo:e,textInfo:r}}else s.symbolResource={symbolInfo:e}}_getSymbolInfo(s){const e=s.hash();return this._hashToSymbolInfo.has(e)||this._hashToSymbolInfo.set(e,this._createSymbolInfo(e,s).catch(t=>null)),this._hashToSymbolInfo.get(e)}async _createSymbolInfo(s,e){const t=await this._convertToCIMSymbol(e),r=await this._createLinearCIM(t);return{hash:s,cimSymbol:t,linearCIM:r,meshWriters:await this._createMeshWriters(t,r)}}async _convertToCIMSymbol(s){const e=De(s);return e.type==="web-style"?(await e.fetchCIMSymbol()).data:e}async _createLinearCIM(s){return await Promise.all(je.fetchResources(s.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(s,!1)}async _createMeshWriters(s,e){me(this._controller.signal);const t=this.container.instanceStore,r=this.view.stage.meshWriterRegistry,i=await It(s,e,t);return Promise.all(i.map(n=>r.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},n)))}_onTileUpdate(s){if(s.added&&s.added.length>0)for(const e of s.added)this._updateTracking.addPromise(this._addTile(e));if(s.removed&&s.removed.length>0)for(const e of s.removed)this._removeTile(e.key)}_createFeatureTile(s){const e=this.view.featuresTilingScheme.getTileBounds(T(),s),t=this.view.featuresTilingScheme.getTileResolution(s.level),r=new $e(s,t,e[0],e[3]);return this._tiles.set(s,r),this.container.addChild(r),r}async _addTile(s){if(!this._attached)return;const e=this._graphicStore.queryItems(s);if(!e.length)return;const t=this._createFeatureTile(s.key),r=M.fromItems(s,e,this._metadata);await this._densifyItemsForDisplay([r]),await this._fetchResources([r]);const i=this._writeMeshes(r);t.onMessage({type:"append",append:i,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:r.objectIdMap})}_removeTile(s){if(!this._tiles.has(s))return;const e=this._tiles.get(s);this.container.removeChild(e),e.destroy(),this._tiles.delete(s)}_getNullSymbol(s){const e=s.geometry;return pe(e)?ge:ye(e)||J(e)?fe:this.defaultPointSymbolEnabled?_e:null}async _getTextResources(s,e){const t=new Array,r=new Array;for(let a=0;a<e.length;a++){const u=e[a],{resource:c,overrides:h}=u.textRasterizationParam;if((h==null?void 0:h.length)>0){const d=ze.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:h,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:c.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:c.symbol,textString:c.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},s,this.view.spatialReference,null,ee(s.projectedGeometry),null,null);d.then(l=>{const m=l.symbolLayers[0],{textString:p}=m.markerGraphics[0];r.push({type:"cim-rasterization-info",resource:{type:"text",textString:p||"",font:c.font}}),u.text=c.textString=p||""}),t.push(d)}else r.push({type:"cim-rasterization-info",resource:c})}t.length>0&&await Promise.all(t);const i=r.map(a=>this.view.stage.textureManager.rasterizeItem(a)),n=await Promise.all(i);be(n);const o=new Map;for(let a=0;a<e.length;a++){const u=e[a];o.set(u.textRasterizationParam.resource.symbol,{text:u.text,glyphMosaicItems:n[a]})}return o}_cleanupSharedResources(){var r;if(!this._cleanupRequired)return;const s=performance.now();if(s-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=s;const e=new Set;for(const i of this._graphicStore.items()){const n=(r=i.symbolResource)==null?void 0:r.symbolInfo.hash;e.add(n)}const t=new Set(this._hashToSymbolInfo.keys());for(const i of t.values())e.has(i)||this._hashToSymbolInfo.delete(i)}};S([v()],I.prototype,"_effectiveRenderer",null),S([v({constructOnly:!0})],I.prototype,"layerId",void 0),S([v({constructOnly:!0})],I.prototype,"requestUpdateCallback",void 0),S([v()],I.prototype,"container",void 0),S([v({constructOnly:!0})],I.prototype,"graphics",void 0),S([v()],I.prototype,"renderer",void 0),S([v()],I.prototype,"_updateTracking",void 0),S([v()],I.prototype,"updating",null),S([v()],I.prototype,"view",void 0),S([v()],I.prototype,"updateRequested",void 0),S([v()],I.prototype,"defaultPointSymbolEnabled",void 0),I=S([ve("esri.views.2d.layers.graphics.GraphicsView2D")],I);const is=I;export{is as F};
