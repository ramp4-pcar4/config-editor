import{b3 as g,cV as w,R as m,cI as y,a8 as I,v as n,I as f,t as V}from"./index-DT_2vTqg.js";import{o as T}from"./GraphicsCollection-rAFZo1AJ-DaZCacJZ.js";import"./colorUtils-DxUhbS7D-Cifi2H0p.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./floatRGBA-YJlz5IlR-C9HRt-3O.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./UpdateTracking2D-CaPtqow6-F3G8dqqh.js";import"./Rect-KI3be8Nv-Duk5wtS2.js";import"./CIMSymbolHelper-Bcp4nGf3-BtJCE9CE.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./OverrideHelper-GkMo7t6B-gd-3ezuR.js";import"./EffectView-Bw7SZPlx-1mOgkJoW.js";import"./Container-BdpN3llD-CCTZpMQd.js";import{u as v}from"./MapView-BcnxJC0k-DnL3Bvpc.js";import"./WGLContainer-CF3AeUnM-CVHZ2V7o.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-BQWJP58O.js";import"./dataViewUtils-xig9T3UA-BpxmFH9X.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-qHpGJ28Q-CmnLAccm.js";import"./GridShader-an_AUKfk-BuaQZjhV.js";import"./pbf-Ijhb7ANA-D3gZVKh2.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./FramebufferObject-DQw0QX3p-CmoLAX9I.js";import"./FeatureCommandQueue-CqM9cs0l-B1MF-qsw.js";import"./PieChartMeshWriter-tjXifLuk-C09SjHkE.js";import"./renderState-DlSSrLcZ-Du_EmLq6.js";import"./glsl-o28TenZV-B0eZUNn3.js";import"./testSVGPremultipliedAlpha-CdWnvpEj-6kKDyCGZ.js";import{F as H}from"./GraphicsView2D-yiocyXG3-Cq3WEVfo.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./normalizeUtils-b-vZURob-CBPnL-S2.js";import"./UpdatingHandles-DBzjq66S-B93Tiora.js";import"./projection-m8vi7Cxv-C_JltvOn.js";import{F as C,u as l,S as d}from"./imageUtils-O-zHRU7h-DCqPCMUs.js";import{D as q}from"./LayerView2D-CCfp06E--C4NNBV5k.js";import{d as U}from"./HighlightGraphicContainer-4ulPEk7p-B_E5BJwZ.js";import{k as b,X as Q,q as S,T as _}from"./Tile-DvzRai0K-BW24c6Lx.js";import{v as G}from"./LayerView-D3XoMhlx-JyGKkRuR.js";import{n as k}from"./RefreshableLayerView-CB9NNXxL-BLFbIM_9.js";import{V as F,j as L}from"./MapServiceLayerViewHelper-BFiO4D0h-DLg6K72M.js";import{x as P}from"./drapedUtils-7RfmdK5D-B02L8yZj.js";import{w as W}from"./HighlightDefaults-Cg50f_1y-D-T1qTN7.js";import{i as z}from"./Scheduler-Br-2v2ys-CKbCLMdl.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./ReactiveMap-BaMcQuG3-CF68SCX9.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./fontUtils-Ce-zEYaT-DH-VvReQ.js";import"./OptimizedGeometry-1qDYm3YK-B34_HlnU.js";import"./memoryEstimations-iHVpvWPf-BPOfuqjq.js";import"./utils-BYqzY6_X-BSj4Clgc.js";import"./rasterizingUtils-B8CPqgVl-CAImRnjz.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./callExpressionWithFeature-uWLbeAgq-DUNRPhRk.js";import"./quantizationUtils-Cndke4AR-B7cvRcyx.js";import"./parser-hXQyB-Qx-CKYTh4L4.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-BOPNBj93.js";import"./globalCss-CFN4F315-BP1UVbnN.js";import"./Queue-B8H6jIv7-Di67S5Qa.js";import"./signal-DxzURL18-CNLg-02N.js";import"./Version-BTMwSXf1-Cws5FYod.js";import"./CollectionFlattener-9hYRBLDX-DhrL6KZ9.js";import"./workers-0oosFQiO-smKQnY2u.js";import"./intl-DLmy-Li5-DnUfHfMm.js";import"./TileInfo-owTCOSRx-Dk8Rfaxb.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-D52OxJOv.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Map-DbZVFU-I-Diejy-Du.js";import"./Basemap-DxWxjcEH-DweBjGOf.js";import"./loadAll-BIhJ1RSe-BBKe-a9A.js";import"./PortalItem-CJetnHeq-DOaYmpxa.js";import"./Layer-B8q-l4yV-vl9jWDTa.js";import"./TimeExtent-gZaEUVeW-CjhClSAm.js";import"./HeightModelInfo-BkDck4B0-DkxbX2IE.js";import"./timeZoneUtils-z3WjfjXQ-o-7Y3KVZ.js";import"./Query-CxQYWcUQ-8fAvXq-1.js";import"./Field-Cj6Pz3TI-MOMvkSrj.js";import"./fieldType-VTpxE-EM-CWsgg3NV.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./a11yUtils-C2ydunC--O8BkDWlt.js";import"./heightModelInfoUtils-CI93rfC7-Bn5B9c1D.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec32-BuqRmYBM-BM3KqM8m.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-DEFspgr5-dKVo5HlR.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-6LnnfcAZ.js";import"./utils-DuaeuwP5-C7ypGGP3.js";import"./utils-Jw-4AGsF-BfrtfTII.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./ProgramTemplate-CBS0ERm4-DCf40Bte.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./VertexArrayObject-DTkLCIKs-BHRJ8-TV.js";import"./featureConversionUtils-DRaHTjrY-COHzotnb.js";import"./OptimizedFeatureSet-D6mgsKNr-kjbXfGBQ.js";import"./GraphShaderModule-C7Apfssb-CQylSK5x.js";import"./ShaderBuilder-BkQM64Qp-DeRvPN3Y.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./CircularArray-DaQg3PQl-BXS52LZy.js";import"./FeatureMetadata-X_4q5T4e-Xo5OctZF.js";import"./diffUtils-BSe9IE26-BzWFgoq_.js";import"./queryUtils-OXllLZed-CqXjhSAq.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-_0FhDj9z-BrIQbDKu.js";import"./FieldsIndex-Y7EBAYp0-D921qi6C.js";import"./TimeOnly-C3SOkmg2-ySe4vkvU.js";import"./labelUtils-Dd5sr1UJ-CZyeF6UG.js";import"./lengthUtils-wU9RRIqK-Ck-67-Py.js";import"./QueueProcessor-BtXHzeIT-Bnt580eH.js";import"./libtess-D7mkf7O_-S9o2wG8S.js";import"./utils-BddLNd1v-AbICXKCN.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./normalizeUtilsSync-C40q69cc-Coy0PDiE.js";import"./dehydratedFeatures-CekTKTy7-216ajJqp.js";import"./BitmapTechnique-BX6dC711-CNKjwdje.js";import"./TileContainer-Dc8VVA_r-NRAhyxjn.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-Bk5QNiAa-BDm7c-BY.js";import"./AGraphicContainer-BSUvBxvy-BSR7Eb-h.js";import"./TechniqueInstance-oJ4weLzg-DlbI0DpD.js";import"./scaleUtils-DtnDbXa5-DyUZRDyt.js";import"./floorFilterUtils-4r-vVdzs-u-jw2p7F.js";import"./sublayerUtils-CVtBGavp-mRCdbfv8.js";import"./popupUtils-sIuvqRgn-aRFw-lQD.js";const A=[0,0];let p=class extends k(C(q(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new T,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new Q({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:z.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new S({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,h)=>P(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=v(t);if(e.length===0)return g();const r=(i==null?void 0:i.name)??W;return this._addHighlightGraphics(e,r),g(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return w((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(A,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(h){if(m(h))throw h;if(!this.resampling)return l(this._tileInfoView.tileInfo.size);if(r<3){const s=this._tileInfoView.getTileParentId(t.id);if(s){const o=new _(s),a=await this._fetchTileWithoutTilemapCache(o,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,o,t)}}return l(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i,s=new _(0,0,0,0);let o,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),!this.resampling&&s.level!==t.level)return await y(i),l(this._tileInfoView.tileInfo.size);o=await this._fetchImage(s,r)}catch(c){if(m(c))throw c;if(this.resampling&&a==="unknown"&&h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){s.set(u);try{o=await this._fetchTileWithTilemapCache(s,{...i,resamplingLevel:h+1})}catch{}}}}return o?this.resampling?d(this._tileInfoView,o,s,t):o:l(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){m(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],p.prototype,"resampling",null),n([f()],p.prototype,"tilemapCache",null),p=n([V("esri.views.2d.layers.TileLayerView2D")],p);const ue=p;export{ue as default};
