const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./RouteLayerInteraction-BMnSFGWR-CwH4YUwU.js","./index-BcWBQvu1.js","./index-CpSsk29H.css","./UpdatingHandles-DBzjq66S-Dy0j40nk.js","./GraphicsLayer-GkJJfSu5-BBCu7Mrz.js","./GraphicsCollection-rAFZo1AJ-DlHwmSdS.js","./Layer-B8q-l4yV-CupBcNoh.js","./TimeExtent-gZaEUVeW-BAp4H8RE.js","./ScaleRangeLayer-DIxukUBC-Bamk9BOz.js","./layerContainerType-ChWdCT09-G5sdAsSy.js","./jsonUtils-DzmXEA9_-CsE6vrfH.js","./parser-hXQyB-Qx-B58HRtHN.js","./mat4f32-CiZjBg9k-CUm34GoR.js","./mat4-BFStKTjU-B_JhQhkc.js","./common-CYWrYyJl-E8-sukrT.js","./ElevationInfo-DkWlof50-DaYIROLW.js","./lengthUtils-wU9RRIqK-BlZAX8e_.js","./SketchViewModel-T2dNp9Tt-Bxx6mmmi.js","./projection-m8vi7Cxv-B8O5gc-_.js","./globalCss-CFN4F315-kmKwukwz.js","./Queue-B8H6jIv7-DuYWn_in.js","./signal-DxzURL18-HZrG96zK.js","./Version-BTMwSXf1-LuMx4kh0.js","./quantityUtils-RaoZoCNH-fLF0h1dz.js","./vec2-BnynUbeJ-CKtGJQAy.js","./vec2f64-CEUyUoff-BBc0aQ6D.js","./vec32-BuqRmYBM-CJQjS2rL.js","./projectVectorToVector-D0K_S4MR-CigoAUw-.js","./projectPointToVector-CG1hALQu-SK5onGFo.js","./geodesicUtils-DV-lFWtb-B95Xim-F.js","./Query-CxQYWcUQ-CxkBOzvD.js","./Field-Cj6Pz3TI-Cf5yuLDE.js","./fieldType-VTpxE-EM-xOb8kqCl.js","./vec42-D8CJyqHG-DnfLTeQH.js","./vec4f64-CjUMzAyX-DPYbdAom.js","./plane-B_adY3_o-2r1F2Ada.js","./mat3f64-Dh9_zhFu-BIT-k8Dm.js","./mat4f64-BaJwL7tQ-k0uMm8LY.js","./quatf64-C16JxGFv-BKWK1F8U.js","./sphere-Cj20syUS-wd2n5kmf.js","./mat3-DOnW3DjW-C3hbW9XY.js","./CollectionFlattener-9hYRBLDX-Cdfhtm2R.js","./LayerView2D-CCfp06E--9k_60qnN.js","./utils-C0LvbFCo-RMQaTNpt.js","./Container-BdpN3llD-Da7NUOXJ.js","./MapView-BcnxJC0k-DWU28fk7.js","./workers-0oosFQiO-DhBye4xH.js","./intl-DLmy-Li5-CMNporLm.js","./TileInfo-owTCOSRx-C9TIn54r.js","./TileKey-B_6qmYK--BtZdR-Xy.js","./jsxFactory-C5LxVioS-neqH_wVd.js","./uuid-Dj9mdEVg-BaKSCiyT.js","./Map-DbZVFU-I-B_YmKvF4.js","./Basemap-DxWxjcEH-BWpWMXdo.js","./loadAll-BIhJ1RSe-D0Y7WGox.js","./PortalItem-CJetnHeq-BptYPU2H.js","./HeightModelInfo-BkDck4B0-BfwQixbI.js","./timeZoneUtils-z3WjfjXQ-BSZKhDQq.js","./ReactiveMap-BaMcQuG3-BNNOHmo3.js","./IViewEvents-BE10MM98-CvMfjolG.js","./HighlightDefaults-Cg50f_1y-C_ZJUPTE.js","./a11yUtils-C2ydunC--w4n9xgdb.js","./heightModelInfoUtils-CI93rfC7-DiHh7IWK.js","./ViewingMode-CyR_b1T8-_s7_Gbsk.js","./mat2d-BQA-1WB--Pnyy0dhf.js","./normalizeUtils-b-vZURob-BKxgSG4k.js","./utils-DuaeuwP5-CRf6bB61.js","./utils-Jw-4AGsF-BRiKk67F.js","./mat2df32-BCnkwMW8-BLRY8i4P.js","./vec2f32-CVhmN3Me-DxoqVD7C.js","./Scheduler-Br-2v2ys-BKmDlUgJ.js","./unitBezier-DhyPAQO8-B9kUb8N6.js","./Tile-DvzRai0K-CKoBSD0n.js","./quickselect-DHTstthl-Ds_Aj0x5.js","./definitions-CBIQmVpq-o3EUznKY.js","./enums-DBi1-Mm2-CUS1pvQe.js","./Texture-DXSFJsEu-DXdlyOxk.js","./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js","./imageUtils-DEFspgr5-CQGIUrtO.js","./themeUtils-RB4IoNvm-uO-dsvgO.js","./ColorBackground-Dcc9SnXm-ClkcF8Bb.js","./EffectView-Bw7SZPlx-k7WoyOxP.js","./layerViewUtils-Bk5QNiAa-DLP0YihH.js","./GraphicContainer-CEP0E1kz-fE-eLSpL.js","./AGraphicContainer-BSUvBxvy-DBeywut4.js","./TechniqueInstance-oJ4weLzg-CIB09kul.js","./UpdateTracking2D-CaPtqow6-BOCKeyxP.js","./dataViewUtils-xig9T3UA-4vmZHKBG.js","./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js","./BoundingBox-D9JxeQeA-SaxmeIkg.js","./FramebufferObject-DQw0QX3p-niK_t7Gj.js","./VertexArrayObject-DTkLCIKs-Dki3JJxr.js","./memoryEstimations-iHVpvWPf-7G5hNXoi.js","./TileContainer-Dc8VVA_r-D31ehgs5.js","./WGLContainer-CF3AeUnM-CgvXFJk9.js","./ProgramTemplate-CBS0ERm4-DNUq-I9T.js","./vec3f32-BS0cezmI-B_madU1n.js","./config-DB0LnTDt-CYa9nhWp.js","./enums-f9UUstHQ-hLTu4V1l.js","./earcut-XDcq3zAf-BcwyrT7l.js","./featureConversionUtils-DRaHTjrY-2OeRDlb0.js","./OptimizedFeatureSet-D6mgsKNr-7d8j9uMk.js","./OptimizedGeometry-1qDYm3YK-JQGls0Yz.js","./FeatureCommandQueue-CqM9cs0l-DWP_Z8eV.js","./CIMSymbolHelper-Bcp4nGf3-BcJij-e4.js","./BidiEngine-Bdqv5H5j-Dyqh9XG-.js","./fontUtils-Ce-zEYaT-_AzfYpRX.js","./Rect-KI3be8Nv-CivJPAgU.js","./utils-BYqzY6_X-DK7K8nmr.js","./defaultCIMValues-gWpu7WSC-cjxb95kj.js","./rasterizingUtils-B8CPqgVl-U2aCyIrb.js","./floatRGBA-YJlz5IlR-BlBFjBnp.js","./TechniqueType-GommNIdJ-ByYTgVOB.js","./GraphShaderModule-C7Apfssb-C-RWT9AZ.js","./ShaderBuilder-BkQM64Qp-CQZA0xLT.js","./BindType-CKbZk6AG-Bqvzo9NX.js","./QueueProcessor-BtXHzeIT-mJj5fXAl.js","./GraphicsView2D-yiocyXG3-BzFdeOcs.js","./FieldsIndex-Y7EBAYp0-C6we7QC1.js","./OverrideHelper-GkMo7t6B-DC2jqaAF.js","./colorUtils-DxUhbS7D-CRI7vv_q.js","./callExpressionWithFeature-uWLbeAgq-BK5K7xFN.js","./quantizationUtils-Cndke4AR-CKofkCo2.js","./FeatureMetadata-X_4q5T4e-B6_HaE9k.js","./diffUtils-BSe9IE26-5FvsD1qI.js","./queryUtils-OXllLZed-C4meNqUf.js","./json-BI97KiBB-Ce5cWfI2.js","./timeSupport-_0FhDj9z-BTG-ck9T.js","./TimeOnly-C3SOkmg2-D06pqgVM.js","./labelUtils-Dd5sr1UJ-DnndMR0b.js","./normalizeUtilsSync-C40q69cc-BfnxPwbO.js","./dehydratedFeatures-CekTKTy7-DiveaoVK.js","./LayerView-D3XoMhlx-CMS8hQR4.js"])))=>i.map(i=>d[i]);
import{cD as l,dD as O,Y as w,v as e,ca as M,ao as j,I as r,J as m,U as I,aa as q,ai as V,cJ as at,dK as R,b3 as it,_ as ot,t as S,L as Q,ae as F,eE as _,E as X,Q as nt,bh as lt}from"./index-BcWBQvu1.js";import{f as ut}from"./CollectionFlattener-9hYRBLDX-Cdfhtm2R.js";import{D as pt}from"./LayerView2D-CCfp06E--9k_60qnN.js";import{d as mt}from"./GraphicContainer-CEP0E1kz-fE-eLSpL.js";import{F as dt}from"./GraphicsView2D-yiocyXG3-BzFdeOcs.js";import{v as ct}from"./LayerView-D3XoMhlx-CMS8hQR4.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-BdpN3llD-Da7NUOXJ.js";import"./MapView-BcnxJC0k-DWU28fk7.js";import"./globalCss-CFN4F315-kmKwukwz.js";import"./Queue-B8H6jIv7-DuYWn_in.js";import"./signal-DxzURL18-HZrG96zK.js";import"./Version-BTMwSXf1-LuMx4kh0.js";import"./workers-0oosFQiO-DhBye4xH.js";import"./intl-DLmy-Li5-CMNporLm.js";import"./projection-m8vi7Cxv-B8O5gc-_.js";import"./TileInfo-owTCOSRx-C9TIn54r.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-neqH_wVd.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-Dy0j40nk.js";import"./Map-DbZVFU-I-B_YmKvF4.js";import"./Basemap-DxWxjcEH-BWpWMXdo.js";import"./loadAll-BIhJ1RSe-D0Y7WGox.js";import"./PortalItem-CJetnHeq-BptYPU2H.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-B_JhQhkc.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-CupBcNoh.js";import"./TimeExtent-gZaEUVeW-BAp4H8RE.js";import"./GraphicsCollection-rAFZo1AJ-DlHwmSdS.js";import"./HeightModelInfo-BkDck4B0-BfwQixbI.js";import"./timeZoneUtils-z3WjfjXQ-BSZKhDQq.js";import"./ReactiveMap-BaMcQuG3-BNNOHmo3.js";import"./Query-CxQYWcUQ-CxkBOzvD.js";import"./Field-Cj6Pz3TI-Cf5yuLDE.js";import"./fieldType-VTpxE-EM-xOb8kqCl.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-C_ZJUPTE.js";import"./a11yUtils-C2ydunC--w4n9xgdb.js";import"./heightModelInfoUtils-CI93rfC7-DiHh7IWK.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-BKxgSG4k.js";import"./utils-DuaeuwP5-CRf6bB61.js";import"./utils-Jw-4AGsF-BRiKk67F.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-BKmDlUgJ.js";import"./vec32-BuqRmYBM-CJQjS2rL.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-CKoBSD0n.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-DXdlyOxk.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-CQGIUrtO.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-ClkcF8Bb.js";import"./EffectView-Bw7SZPlx-k7WoyOxP.js";import"./parser-hXQyB-Qx-B58HRtHN.js";import"./layerViewUtils-Bk5QNiAa-DLP0YihH.js";import"./AGraphicContainer-BSUvBxvy-DBeywut4.js";import"./TechniqueInstance-oJ4weLzg-CIB09kul.js";import"./UpdateTracking2D-CaPtqow6-BOCKeyxP.js";import"./dataViewUtils-xig9T3UA-4vmZHKBG.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./FramebufferObject-DQw0QX3p-niK_t7Gj.js";import"./VertexArrayObject-DTkLCIKs-Dki3JJxr.js";import"./memoryEstimations-iHVpvWPf-7G5hNXoi.js";import"./TileContainer-Dc8VVA_r-D31ehgs5.js";import"./WGLContainer-CF3AeUnM-CgvXFJk9.js";import"./ProgramTemplate-CBS0ERm4-DNUq-I9T.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-2OeRDlb0.js";import"./OptimizedFeatureSet-D6mgsKNr-7d8j9uMk.js";import"./OptimizedGeometry-1qDYm3YK-JQGls0Yz.js";import"./FeatureCommandQueue-CqM9cs0l-DWP_Z8eV.js";import"./CIMSymbolHelper-Bcp4nGf3-BcJij-e4.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./fontUtils-Ce-zEYaT-_AzfYpRX.js";import"./Rect-KI3be8Nv-CivJPAgU.js";import"./utils-BYqzY6_X-DK7K8nmr.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./rasterizingUtils-B8CPqgVl-U2aCyIrb.js";import"./floatRGBA-YJlz5IlR-BlBFjBnp.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./GraphShaderModule-C7Apfssb-C-RWT9AZ.js";import"./ShaderBuilder-BkQM64Qp-CQZA0xLT.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./lengthUtils-wU9RRIqK-BlZAX8e_.js";import"./QueueProcessor-BtXHzeIT-mJj5fXAl.js";import"./FieldsIndex-Y7EBAYp0-C6we7QC1.js";import"./OverrideHelper-GkMo7t6B-DC2jqaAF.js";import"./colorUtils-DxUhbS7D-CRI7vv_q.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./callExpressionWithFeature-uWLbeAgq-BK5K7xFN.js";import"./quantizationUtils-Cndke4AR-CKofkCo2.js";import"./FeatureMetadata-X_4q5T4e-B6_HaE9k.js";import"./diffUtils-BSe9IE26-5FvsD1qI.js";import"./queryUtils-OXllLZed-C4meNqUf.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-_0FhDj9z-BTG-ck9T.js";import"./TimeOnly-C3SOkmg2-D06pqgVM.js";import"./labelUtils-Dd5sr1UJ-DnndMR0b.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./normalizeUtilsSync-C40q69cc-BfnxPwbO.js";import"./dehydratedFeatures-CekTKTy7-DiveaoVK.js";const st={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},yt=l()(st),xi=l()({...st,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),Ri=l()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),qi=l()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),Gi=l()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),Hi=l()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),Ki=l()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});l()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const ht=l()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});l()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),l()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const Tt=l()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),c=l()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),L=l()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),A=l()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),J=l()({1:"right",2:"left"},{useNumericKeys:!0}),v=l()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),W=l()({0:"permit",1:"restrict"},{useNumericKeys:!0}),P=l()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),B=l()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),zi=l()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),bt=l()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),vt=l()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),C=l()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),rt=l()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Yi=l()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),$i=l()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Zi=l()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Qi=l()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});let d=class extends O.ClonableMixin(w){constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(t,i){return i.id??i.itemId??null}readRestrictionAttributes(t,i){const{restrictionAttributeNames:s}=i;return s==null?null:s.map(n=>rt.fromJSON(n))}writeRestrictionAttributes(t,i,s){t!=null&&(i[s]=t.map(n=>rt.toJSON(n)))}};e([r({type:[Object],json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),e([r({type:String,json:{write:!0}})],d.prototype,"description",void 0),e([M(bt,{ignoreUnknown:!1})],d.prototype,"distanceAttributeName",void 0),e([r({type:String,json:{write:!0}})],d.prototype,"id",void 0),e([m("id",["id","itemId"])],d.prototype,"readId",null),e([M(C,{ignoreUnknown:!1})],d.prototype,"impedanceAttributeName",void 0),e([r({type:String,json:{write:!0}})],d.prototype,"name",void 0),e([r({type:[String],json:{write:!0}})],d.prototype,"restrictionAttributeNames",void 0),e([m("restrictionAttributeNames")],d.prototype,"readRestrictionAttributes",null),e([I("restrictionAttributeNames")],d.prototype,"writeRestrictionAttributes",null),e([r({type:Number,json:{write:{allowNull:!0}}})],d.prototype,"simplificationTolerance",void 0),e([M(yt)],d.prototype,"simplificationToleranceUnits",void 0),e([M(vt,{ignoreUnknown:!1})],d.prototype,"timeAttributeName",void 0),e([M(Tt)],d.prototype,"type",void 0),e([r({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),e([M(ht)],d.prototype,"uturnAtJunctions",void 0),d=e([S("esri.rest.support.TravelMode")],d);const gt=d;function f(t,i){if(t==null)return null;const s={},n=new RegExp(`^${i}`,"i");for(const y of Object.keys(t))if(n.test(y)){const N=y.slice(i.length);s[C.fromJSON(N)]=t[y]}return s}function tt(t,i,s){if(t!=null){i.attributes||(i.attributes={});for(const n in t){const y=C.toJSON(n);i.attributes[`${s}${y}`]=t[n]}}}function U(t){const i={};for(const s of Object.keys(t)){const n=s;i[C.fromJSON(n)]=t[s]}return i}function k(t){const i={};for(const s of Object.keys(t)){const n=s;i[C.toJSON(n)]=t[s]}return i}function x(t,i){return t==null||i==null?null:Math.round((t-i)/6e4)}function Xi(t){var n,y,N;const i=t.toJSON(),s=i;return s.accumulateAttributeNames&&(s.accumulateAttributeNames=(n=i.accumulateAttributeNames)==null?void 0:n.join()),s.attributeParameterValues&&(s.attributeParameterValues=JSON.stringify(i.attributeParameterValues)),s.barriers&&(s.barriers=JSON.stringify(i.barriers)),s.outSR&&(s.outSR=(y=i.outSR)==null?void 0:y.wkid),s.overrides&&(s.overrides=JSON.stringify(i.overrides)),s.polygonBarriers&&(s.polygonBarriers=JSON.stringify(i.polygonBarriers)),s.polylineBarriers&&(s.polylineBarriers=JSON.stringify(i.polylineBarriers)),s.restrictionAttributeNames&&(s.restrictionAttributeNames=(N=i.restrictionAttributeNames)==null?void 0:N.join()),s.stops&&(s.stops=JSON.stringify(i.stops)),s.travelMode&&(s.travelMode=JSON.stringify(i.travelMode)),s}var G;let h=G=class extends O.ClonableMixin(w){constructor(t){super(t),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(t){return new G({directionLineType:B.fromJSON(t.attributes.DirectionLineType),directionPointId:t.attributes.DirectionPointID,distance:t.attributes.Meters,duration:t.attributes.Minutes,fromLevel:t.attributes.FromLevel??null,geometry:t.geometry,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,symbol:t.symbol,toLevel:t.attributes.ToLevel??null})}toGraphic(){const t={ObjectID:this.objectId,DirectionLineType:this.directionLineType!=null?B.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return this.fromLevel!=null&&(t.FromLevel=this.fromLevel),this.toLevel!=null&&(t.ToLevel=this.toLevel),new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],e([r({type:B.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:B.read}}})],h.prototype,"directionLineType",void 0),e([r({json:{read:{source:"attributes.DirectionPointID"}}})],h.prototype,"directionPointId",void 0),e([r({json:{read:{source:"attributes.Meters"}}})],h.prototype,"distance",void 0),e([r({json:{read:{source:"attributes.Minutes"}}})],h.prototype,"duration",void 0),e([r({json:{read:{source:"attributes.FromLevel"}}})],h.prototype,"fromLevel",void 0),e([r({type:Q})],h.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],h.prototype,"objectId",void 0),e([r({type:F})],h.prototype,"popupTemplate",void 0),e([r({types:_})],h.prototype,"symbol",void 0),e([r({json:{read:{source:"attributes.ToLevel"}}})],h.prototype,"toLevel",void 0),e([r({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=G=e([S("esri.rest.support.DirectionLine")],h);const ft=h;var H;let u=H=class extends O.ClonableMixin(w){constructor(t){super(t),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(t,i){return i.attributes.ArrivalTime!=null?new Date(i.attributes.ArrivalTime):null}static fromGraphic(t){return new H({alternateName:t.attributes.AlternateName??null,arrivalTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arrivalTimeOffset:t.attributes.ArrivalUTCOffset??null,azimuth:t.attributes.Azimuth??null,branchName:t.attributes.BranchName??null,directionPointType:P.fromJSON(t.attributes.DirectionPointType),displayText:t.attributes.DisplayText??null,exitName:t.attributes.ExitName??null,geometry:t.geometry,intersectingName:t.attributes.IntersectingName??null,level:t.attributes.Level??null,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,sequence:t.attributes.Sequence,shortVoiceInstruction:t.attributes.ShortVoiceInstruction??null,stopId:t.attributes.StopID??null,symbol:t.symbol,towardName:t.attributes.TowardName??null,voiceInstruction:t.attributes.VoiceInstruction??null})}toGraphic(){const t={ObjectID:this.objectId,DirectionPointType:this.directionPointType!=null?P.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return this.alternateName!=null&&(t.AlternateName=this.alternateName),this.arrivalTime!=null&&(t.ArrivalTime=this.arrivalTime.getTime()),this.arrivalTimeOffset!=null&&(t.ArrivalUTCOffset=this.arrivalTimeOffset),this.azimuth!=null&&(t.Azimuth=this.azimuth),this.branchName!=null&&(t.BranchName=this.branchName),this.displayText!=null&&(t.DisplayText=this.displayText),this.exitName!=null&&(t.ExitName=this.exitName),this.intersectingName!=null&&(t.IntersectingName=this.intersectingName),this.level!=null&&(t.Level=this.level),this.name!=null&&(t.Name=this.name),this.shortVoiceInstruction!=null&&(t.ShortVoiceInstruction=this.shortVoiceInstruction),this.towardName!=null&&(t.TowardName=this.towardName),this.voiceInstruction!=null&&(t.VoiceInstruction=this.voiceInstruction),new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};u.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],e([r({json:{read:{source:"attributes.AlternateName"}}})],u.prototype,"alternateName",void 0),e([r({type:Date})],u.prototype,"arrivalTime",void 0),e([m("arrivalTime",["attributes.ArrivalTime"])],u.prototype,"readArrivalTime",null),e([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],u.prototype,"arrivalTimeOffset",void 0),e([r({json:{read:{source:"attributes.Azimuth"}}})],u.prototype,"azimuth",void 0),e([r({json:{read:{source:"attributes.BranchName"}}})],u.prototype,"branchName",void 0),e([r({type:P.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:P.read}}})],u.prototype,"directionPointType",void 0),e([r({json:{read:{source:"attributes.DisplayText"}}})],u.prototype,"displayText",void 0),e([r({json:{read:{source:"attributes.ExitName"}}})],u.prototype,"exitName",void 0),e([r({type:X})],u.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.IntersectingName"}}})],u.prototype,"intersectingName",void 0),e([r({json:{read:{source:"attributes.Level"}}})],u.prototype,"level",void 0),e([r({json:{read:{source:"attributes.Name"}}})],u.prototype,"name",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],u.prototype,"objectId",void 0),e([r({type:F})],u.prototype,"popupTemplate",void 0),e([r({json:{read:{source:"attributes.Sequence"}}})],u.prototype,"sequence",void 0),e([r({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],u.prototype,"shortVoiceInstruction",void 0),e([r({json:{read:{source:"attributes.StopID"}}})],u.prototype,"stopId",void 0),e([r({types:_})],u.prototype,"symbol",void 0),e([r({json:{read:{source:"attributes.TowardName"}}})],u.prototype,"towardName",void 0),e([r({readOnly:!0,json:{read:!1}})],u.prototype,"type",void 0),e([r({json:{read:{source:"attributes.VoiceInstruction"}}})],u.prototype,"voiceInstruction",void 0),u=H=e([S("esri.rest.support.DirectionPoint")],u);const St=u;var K;let p=K=class extends O.ClonableMixin(w){constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(t,i){return f(i.attributes,"Attr_")}writeCosts(t,i){tt(t,i,"Attr_")}static fromGraphic(t){return new K({addedCost:t.attributes.AddedCost??null,barrierType:t.attributes.BarrierType!=null?v.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?U(JSON.parse(t.attributes.Costs)):null,curbApproach:t.attributes.CurbApproach!=null?c.fromJSON(t.attributes.CurbApproach):null,fullEdge:t.attributes.FullEdge!=null?W.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:t.attributes.Status!=null?A.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:this.barrierType!=null?v.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(k(this.costs)):null,CurbApproach:this.curbApproach!=null?c.toJSON(this.curbApproach):null,FullEdge:this.fullEdge!=null?W.toJSON(this.fullEdge):null,Name:this.name,Status:this.status!=null?A.toJSON(this.status):null};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};p.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],e([r()],p.prototype,"addedCost",void 0),e([r({type:v.apiValues,json:{name:"attributes.BarrierType",read:{reader:v.read},write:{writer:v.write}}})],p.prototype,"barrierType",void 0),e([r()],p.prototype,"costs",void 0),e([m("costs",["attributes"])],p.prototype,"readCosts",null),e([I("costs")],p.prototype,"writeCosts",null),e([r({type:c.apiValues,json:{read:{source:"attributes.CurbApproach",reader:c.read}}})],p.prototype,"curbApproach",void 0),e([r({type:W.apiValues,json:{name:"attributes.FullEdge",read:{reader:W.read},write:{writer:W.write}}})],p.prototype,"fullEdge",void 0),e([r({type:X,json:{write:!0}})],p.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],p.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],p.prototype,"objectId",void 0),e([r({type:F})],p.prototype,"popupTemplate",void 0),e([r({type:J.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:J.read}}})],p.prototype,"sideOfEdge",void 0),e([r({json:{read:{source:"attributes.SourceID"}}})],p.prototype,"sourceId",void 0),e([r({json:{read:{source:"attributes.SourceOID"}}})],p.prototype,"sourceOid",void 0),e([r({type:A.apiValues,json:{read:{source:"attributes.Status",reader:A.read}}})],p.prototype,"status",void 0),e([r({types:_})],p.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],p.prototype,"type",void 0),p=K=e([S("esri.rest.support.PointBarrier")],p);const wt=p;var z;let T=z=class extends O.ClonableMixin(w){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(t,i){return f(i.attributes,"Attr_")}writeCosts(t,i){tt(t,i,"Attr_")}static fromGraphic(t){return new z({barrierType:t.attributes.BarrierType!=null?v.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?U(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:this.barrierType!=null?v.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(k(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e([r({type:v.apiValues,json:{name:"attributes.BarrierType",read:{reader:v.read},write:{writer:v.write}}})],T.prototype,"barrierType",void 0),e([r()],T.prototype,"costs",void 0),e([m("costs",["attributes"])],T.prototype,"readCosts",null),e([I("costs")],T.prototype,"writeCosts",null),e([r({type:nt,json:{write:!0}})],T.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),e([r({type:F})],T.prototype,"popupTemplate",void 0),e([r()],T.prototype,"scaleFactor",void 0),e([r({types:_})],T.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=z=e([S("esri.rest.support.PolygonBarrier")],T);const Nt=T;var Y;let b=Y=class extends O.ClonableMixin(w){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(t,i){return f(i.attributes,"Attr_")}static fromGraphic(t){return new Y({barrierType:t.attributes.BarrierType!=null?v.fromJSON(t.attributes.BarrierType):null,costs:t.attributes.Costs!=null?U(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:this.barrierType!=null?v.toJSON(this.barrierType):null,Costs:this.costs!=null?JSON.stringify(k(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};b.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e([r({type:v.apiValues,json:{read:{source:"attributes.BarrierType",reader:v.read}}})],b.prototype,"barrierType",void 0),e([r()],b.prototype,"costs",void 0),e([m("costs",["attributes"])],b.prototype,"readCosts",null),e([r({type:Q,json:{write:!0}})],b.prototype,"geometry",void 0),e([r({json:{name:"attributes.Name"}})],b.prototype,"name",void 0),e([r({json:{name:"attributes.ObjectID"}})],b.prototype,"objectId",void 0),e([r({type:F})],b.prototype,"popupTemplate",void 0),e([r()],b.prototype,"scaleFactor",void 0),e([r({types:_})],b.prototype,"symbol",void 0),e([r({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0),b=Y=e([S("esri.rest.support.PolylineBarrier")],b);const Dt=b;let g=class extends w{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return t==null?null:t.map(i=>C.fromJSON(i))}writeAccumulateAttributes(t,i,s){t!=null&&t.length&&(i[s]=t.map(n=>C.toJSON(n)))}};e([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],g.prototype,"accumulateAttributes",void 0),e([m("accumulateAttributes")],g.prototype,"readAccumulateAttributes",null),e([I("accumulateAttributes")],g.prototype,"writeAccumulateAttributes",null),e([r({type:String,json:{write:!0}})],g.prototype,"directionsLanguage",void 0),e([r({type:Boolean,json:{write:!0}})],g.prototype,"findBestSequence",void 0),e([r({type:Boolean,json:{write:!0}})],g.prototype,"preserveFirstStop",void 0),e([r({type:Boolean,json:{write:!0}})],g.prototype,"preserveLastStop",void 0),e([r({type:Boolean,json:{write:!0}})],g.prototype,"startTimeIsUTC",void 0),e([r({type:Boolean,json:{write:!0}})],g.prototype,"timeWindowsAreUTC",void 0),e([r({type:gt,json:{write:!0}})],g.prototype,"travelMode",void 0),g=e([S("esri.rest.support.RouteSettings")],g);const At=g;var $;let o=$=class extends O.ClonableMixin(w){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(t,i){return i.attributes.EndTimeUTC!=null?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(t,i){return x(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(t,i){return i.attributes.StartTimeUTC!=null?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(t,i){return x(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(t,i){return f(i.attributes,"Total_")}readTotalViolations(t,i){return f(i.attributes,"TotalViolation_")}readTotalWait(t,i){return f(i.attributes,"TotalWait_")}static fromGraphic(t){return new $({analysisSettings:t.attributes.AnalysisSettings!=null?At.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:t.attributes.EndTime!=null?new Date(t.attributes.EndTime):null,endTimeOffset:t.attributes.EndUTCOffset??null,geometry:t.geometry,messages:t.attributes.Messages!=null?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:t.attributes.StartTime!=null?new Date(t.attributes.StartTime):null,startTimeOffset:t.attributes.StartUTCOffset??null,symbol:t.symbol,totalCosts:t.attributes.TotalCosts!=null?U(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:t.attributes.TotalMeters??null,totalDuration:t.attributes.TotalMinutes??null,totalLateDuration:t.attributes.TotalLateMinutes??null,totalWaitDuration:t.attributes.TotalWaitMinutes??null,version:t.attributes.Version})}toGraphic(){const t={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings!=null?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime!=null?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:this.messages!=null?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime!=null?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts!=null?JSON.stringify(k(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};o.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],e([r()],o.prototype,"analysisSettings",void 0),e([r({type:Date})],o.prototype,"endTime",void 0),e([m("endTime",["attributes.EndTimeUTC"])],o.prototype,"readEndTime",null),e([r()],o.prototype,"endTimeOffset",void 0),e([m("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],o.prototype,"readEndTimeOffset",null),e([r({json:{read:{source:"attributes.FirstStopID"}}})],o.prototype,"firstStopId",void 0),e([r({type:Q})],o.prototype,"geometry",void 0),e([r({json:{read:{source:"attributes.LastStopID"}}})],o.prototype,"lastStopId",void 0),e([r()],o.prototype,"messages",void 0),e([r({json:{read:{source:"attributes.Name"}}})],o.prototype,"name",void 0),e([r({json:{read:{source:"attributes.ObjectID"}}})],o.prototype,"objectId",void 0),e([r({type:F})],o.prototype,"popupTemplate",void 0),e([r({type:Date})],o.prototype,"startTime",void 0),e([m("startTime",["attributes.StartTimeUTC"])],o.prototype,"readStartTime",null),e([r()],o.prototype,"startTimeOffset",void 0),e([m("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],o.prototype,"readStartTimeOffset",null),e([r({json:{read:{source:"attributes.StopCount"}}})],o.prototype,"stopCount",void 0),e([r({types:_})],o.prototype,"symbol",void 0),e([r()],o.prototype,"totalCosts",void 0),e([m("totalCosts",["attributes"])],o.prototype,"readTotalCosts",null),e([r()],o.prototype,"totalDistance",void 0),e([r()],o.prototype,"totalDuration",void 0),e([r()],o.prototype,"totalLateDuration",void 0),e([r()],o.prototype,"totalViolations",void 0),e([m("totalViolations",["attributes"])],o.prototype,"readTotalViolations",null),e([r()],o.prototype,"totalWait",void 0),e([m("totalWait",["attributes"])],o.prototype,"readTotalWait",null),e([r()],o.prototype,"totalWaitDuration",void 0),e([r({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),e([r()],o.prototype,"version",void 0),o=$=e([S("esri.rest.support.RouteInfo")],o);const Ot=o;var Z;let a=Z=class extends O.ClonableMixin(w){constructor(t){super(t),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(t,i){return x(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(t,i){return f(i.attributes,"Cumul_")}readDepartTimeOffset(t,i){return x(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(t,i){return f(i.attributes,"Attr_")}writeServiceCosts(t,i){tt(t,i,"Attr_")}writeTimeWindowEnd(t,i){t!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=t.getTime())}writeTimeWindowStart(t,i){t!=null&&(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=t.getTime())}readViolations(t,i){return f(i.attributes,"Violation_")}readWait(t,i){return f(i.attributes,"Wait_")}static fromGraphic(t){return new Z({arriveCurbApproach:t.attributes.ArrivalCurbApproach!=null?c.fromJSON(t.attributes.ArrivalCurbApproach):null,arriveTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arriveTimeOffset:t.attributes.ArrivalUTCOffset,cumulativeCosts:t.attributes.CumulativeCosts!=null?U(JSON.parse(t.attributes.CumulativeCosts)):null,cumulativeDistance:t.attributes.CumulativeMeters??null,cumulativeDuration:t.attributes.CumulativeMinutes??null,curbApproach:t.attributes.CurbApproach!=null?c.fromJSON(t.attributes.CurbApproach):null,departCurbApproach:t.attributes.DepartureCurbApproach!=null?c.fromJSON(t.attributes.DepartureCurbApproach):null,departTime:t.attributes.DepartureTime!=null?new Date(t.attributes.DepartureTime):null,departTimeOffset:t.attributes.DepartureUTCOffset??null,geometry:t.geometry,lateDuration:t.attributes.LateMinutes??null,locationType:t.attributes.LocationType!=null?L.fromJSON(t.attributes.LocationType):null,name:t.attributes.Name,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,routeName:t.attributes.RouteName,sequence:t.attributes.Sequence??null,serviceCosts:t.attributes.ServiceCosts!=null?U(JSON.parse(t.attributes.ServiceCosts)):null,serviceDistance:t.attributes.ServiceMeters??null,serviceDuration:t.attributes.ServiceMinutes??null,status:t.attributes.Status!=null?A.fromJSON(t.attributes.Status):null,symbol:t.symbol,timeWindowEnd:t.attributes.TimeWindowEnd!=null?new Date(t.attributes.TimeWindowEnd):null,timeWindowEndOffset:t.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:t.attributes.TimeWindowStart!=null?new Date(t.attributes.TimeWindowStart):null,timeWindowStartOffset:t.attributes.TimeWindowStartUTCOffset??null,waitDuration:t.attributes.WaitMinutes??null})}toGraphic(){const t={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach!=null?c.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime!=null?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts!=null?JSON.stringify(k(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach!=null?c.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach!=null?c.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime!=null?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType!=null?L.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts!=null?JSON.stringify(k(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status!=null?A.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd!=null?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart!=null?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new j({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};a.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],e([r({type:c.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:c.read}}})],a.prototype,"arriveCurbApproach",void 0),e([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],a.prototype,"arriveTime",void 0),e([r()],a.prototype,"arriveTimeOffset",void 0),e([m("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],a.prototype,"readArriveTimeOffset",null),e([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],a.prototype,"bearing",void 0),e([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],a.prototype,"bearingTol",void 0),e([r()],a.prototype,"cumulativeCosts",void 0),e([m("cumulativeCosts",["attributes"])],a.prototype,"readCumulativeCosts",null),e([r()],a.prototype,"cumulativeDistance",void 0),e([r()],a.prototype,"cumulativeDuration",void 0),e([r({type:c.apiValues,json:{name:"attributes.CurbApproach",read:{reader:c.read},write:{writer:c.write}}})],a.prototype,"curbApproach",void 0),e([r({type:c.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:c.read}}})],a.prototype,"departCurbApproach",void 0),e([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],a.prototype,"departTime",void 0),e([r()],a.prototype,"departTimeOffset",void 0),e([m("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],a.prototype,"readDepartTimeOffset",null),e([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],a.prototype,"distanceToNetworkInMeters",void 0),e([r({type:X,json:{write:!0}})],a.prototype,"geometry",void 0),e([r()],a.prototype,"lateDuration",void 0),e([r({type:L.apiValues,json:{name:"attributes.LocationType",read:{reader:L.read},write:{writer:L.write}}})],a.prototype,"locationType",void 0),e([r({json:{name:"attributes.Name"}})],a.prototype,"name",void 0),e([r({json:{name:"attributes.NavLatency",read:!1,write:!0}})],a.prototype,"navLatency",void 0),e([r({json:{name:"attributes.ObjectID"}})],a.prototype,"objectId",void 0),e([r({type:F})],a.prototype,"popupTemplate",void 0),e([r({json:{read:{source:"attributes.PosAlong"}}})],a.prototype,"posAlong",void 0),e([r({json:{name:"attributes.RouteName"}})],a.prototype,"routeName",void 0),e([r()],a.prototype,"serviceCosts",void 0),e([m("serviceCosts",["attributes"])],a.prototype,"readServiceCosts",null),e([I("serviceCosts")],a.prototype,"writeServiceCosts",null),e([r()],a.prototype,"serviceDistance",void 0),e([r()],a.prototype,"serviceDuration",void 0),e([r({json:{name:"attributes.Sequence"}})],a.prototype,"sequence",void 0),e([r({type:J.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:J.read}}})],a.prototype,"sideOfEdge",void 0),e([r({json:{read:{source:"attributes.SnapX"}}})],a.prototype,"snapX",void 0),e([r({json:{read:{source:"attributes.SnapY"}}})],a.prototype,"snapY",void 0),e([r({json:{read:{source:"attributes.SnapZ"}}})],a.prototype,"snapZ",void 0),e([r({json:{read:{source:"attributes.SourceID"}}})],a.prototype,"sourceId",void 0),e([r({json:{read:{source:"attributes.SourceOID"}}})],a.prototype,"sourceOid",void 0),e([r({type:A.apiValues,json:{read:{source:"attributes.Status",reader:A.read}}})],a.prototype,"status",void 0),e([r({types:_})],a.prototype,"symbol",void 0),e([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],a.prototype,"timeWindowEnd",void 0),e([I("timeWindowEnd")],a.prototype,"writeTimeWindowEnd",null),e([r()],a.prototype,"timeWindowEndOffset",void 0),e([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],a.prototype,"timeWindowStart",void 0),e([I("timeWindowStart")],a.prototype,"writeTimeWindowStart",null),e([r()],a.prototype,"timeWindowStartOffset",void 0),e([r({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),e([r()],a.prototype,"violations",void 0),e([m("violations",["attributes"])],a.prototype,"readViolations",null),e([r()],a.prototype,"waitDuration",void 0),e([r()],a.prototype,"wait",void 0),e([m("wait",["attributes"])],a.prototype,"readWait",null),a=Z=e([S("esri.rest.support.Stop")],a);const It=a,Ct=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],E={graphic:null,property:null,oldValue:null,newValue:null};function et(t){return t instanceof ft||t instanceof St||t instanceof wt||t instanceof Nt||t instanceof Dt||t instanceof Ot||t instanceof It}function jt(t){return q.isCollection(t)&&t.length&&et(t.at(0))}function Ft(t){return Array.isArray(t)&&t.length>0&&et(t[0])}const _t=new Set(["default"]);let D=class extends pt(ct){constructor(){super(...arguments),this._graphics=new q,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new ut({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new q([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(V(()=>{const{interactive:t,suspended:i}=this;return{interactive:t,suspended:i}},({interactive:t,suspended:i})=>{const s=t&&!i;s&&this._getInteractionLoadPromise().then(n=>{n.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=s)},lt)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),at)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){var t;this._destroyGraphicsView(),(t=this._interaction)!=null&&t.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){var t;return((t=this._interaction)==null?void 0:t.selectedNetworkFeatures)??null}async create(t){if(this.interactive)return(await this._getInteractionLoadPromise()).create(t)}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:s})=>!!s)}highlight(t){let i;i=et(t)?[this._getNetworkFeatureUid(t)]:Ft(t)?t.map(n=>this._getNetworkFeatureUid(n)):jt(t)?t.map(n=>this._getNetworkFeatureUid(n)).toArray():[t.uid];const s=i.filter(R);return s.length?(this._addHighlight(s),it(()=>this._removeHighlight(s))):it()}async hitTest(t,i){if(this.suspended)return null;const s=this._graphicsView.hitTest(t).filter(R).map(y=>this._networkGraphicMap.get(y));if(!s.length)return null;const{layer:n}=this;return s.reverse().map(y=>({type:"route",layer:n,mapPoint:t,networkFeature:y}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(t){var i;(i=this._interaction)==null||i.remove(t)}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const s=this._highlightIds.get(i);this._highlightIds.set(i,s+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),s=new mt(t.featuresTilingScheme);this._graphicsView=new dt({container:s,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(s),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return Ct.indexOf(i.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}async _loadInteraction(){const{layer:t,view:i}=this,{RouteLayerInteraction:s}=await ot(async()=>{const{RouteLayerInteraction:n}=await import("./RouteLayerInteraction-BMnSFGWR-CwH4YUwU.js");return{RouteLayerInteraction:n}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132]),import.meta.url);return this._interaction=new s({view:i,layer:t}),this._interaction}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const s=this._highlightIds.get(i)-1;s===0?this._highlightIds.delete(i):this._highlightIds.set(i,s)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const s=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(s),s}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const s=this._createGraphic(i);return s.symbol==null?null:(this._networkFeatureMap.set(i,s),this._networkGraphicMap.set(s,i),s)}).filter(R));for(const i of t.added)this.addHandles([V(()=>i.geometry,(s,n)=>{this._updateGraphic(i,"geometry",s,n)}),V(()=>i.symbol,(s,n)=>{this._updateGraphic(i,"symbol",s,n)}),V(()=>i.popupTemplate,s=>{this._networkFeatureMap.has(i)&&(this._networkFeatureMap.get(i).popupTemplate=s)})],i);this._graphics.sort((i,s)=>this._getDrawOrder(i)-this._getDrawOrder(s))}}_updateGraphic(t,i,s,n){if(!this._networkFeatureMap.has(t)){const N=this._createGraphic(t);return this._networkFeatureMap.set(t,N),this._networkGraphicMap.set(N,t),void this._graphics.add(N)}const y=this._networkFeatureMap.get(t);y[i]=s,E.graphic=y,E.property=i,E.oldValue=n,E.newValue=s,this._graphicsView.graphicUpdateHandler(E)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(_t.values());this._graphicsView.setHighlight(t.map(s=>({objectId:s,highlightFlags:i})))}};e([r()],D.prototype,"_graphics",void 0),e([r()],D.prototype,"_routeItems",null),e([r()],D.prototype,"_interaction",void 0),e([r()],D.prototype,"interactive",void 0),e([r({readOnly:!0})],D.prototype,"selectedNetworkFeatures",null),D=e([S("esri.views.2d.layers.RouteLayerView2D")],D);const Mt=D,tr=Object.freeze(Object.defineProperty({__proto__:null,default:Mt},Symbol.toStringTag,{value:"Module"}));export{C as D,Yi as M,$i as R,Ot as S,Nt as T,vt as U,wt as a,Zi as b,qi as c,gt as d,x as e,rt as f,Hi as g,zi as h,ft as i,Dt as j,At as k,Ki as l,ht as m,Gi as n,Xi as o,tr as p,Qi as q,yt as r,Ri as s,xi as t,It as w,St as y};
