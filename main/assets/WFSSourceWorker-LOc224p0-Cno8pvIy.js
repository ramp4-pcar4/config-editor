import{g as E}from"./asyncUtils-BPUlNCrX-CgQ-bqnN.js";import{h as y,u as c,cx as q,k as I,a6 as g,aR as _,aM as R,J as P,ap as b}from"./index-aQr1pzMk.js";import{U as j,u as N}from"./featureConversionUtils-Bjjlcfdo-W23tSVOf.js";import{M as Q}from"./executeQueryForSnapping-BsS9M1AV-DMh2Ogmx.js";import{I as O}from"./FeatureStore-DfjNNhD_-Cj8u_g_m.js";import{p as U,h as k}from"./queryUtils-DZy8hWx3-CmvK2xk4.js";import{K as M}from"./QueryEngine-B7NH52mH-B4gUeF8Z.js";import{Y as $,Q as L}from"./geojson-BLilYCbg-Clh3ZYMr.js";import{C as A}from"./sourceUtils-k2zbXRon-BMA8Is_T.js";import{U as J,b as W,I as f}from"./wfsUtils-z6T0V9sE-BvxcG8_a.js";import{o as Y}from"./FieldsIndex-Bt0Y8aWr-BpPxKhnV.js";import"./OptimizedFeature-mIz_HhJg-BvAcQ_JK.js";import"./memoryEstimations-DeWfxwaV-BEOBMvAl.js";import"./OptimizedGeometry-pzfNw1AT-DQmyFD5U.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./normalizeUtils-u00NGW3M-8Ej-Vv-t.js";import"./normalizeUtilsCommon-ClagynAA-CvakA4bY.js";import"./utils-BO8hgPs3-R1XXoFdI.js";import"./utils-DpLVEUvg-CzvbbwOQ.js";import"./timeSupport-C2LrHIeW-BTMNEiP9.js";import"./BoundsStore-DffHzOYo-DjmQleey.js";import"./PooledRBush-DfSXIoUa-D4nu0GvZ.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-CbN8SGKZ.js";import"./projectionUtils-B-CplN3q-BbhRJk9h.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./WhereClauseCache-CixYkZwn-DJONZSm-.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./WhereClause-D4rZJkVN-Bi3zu1yv.js";import"./TimeOnly-CGkId3bj-Da-7Q4Fn.js";import"./enum-g1DWyQyu-Jw9m_iA7.js";import"./UnknownTimeZone-DxjyzFvs-D03QDRmB.js";import"./fieldType-PhcL4ff8-x0uMaf6W.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-JcivzglI.js";import"./utils-s7ypkCzr-DNS4kakY.js";import"./TimeExtent-Cf2Pienb-BYO88qJi.js";import"./heatmapUtils-DRTN9U3a-CoONj_Tq.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-B_bQkCnp.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DHX-Tx_w.js";import"./intl-BAA1onnp-ubjHiDMN.js";import"./timeZoneUtils-d5p0Jda1-DINixOSa.js";import"./utils-CKRJGBD_-D3V2PZBW.js";import"./ClassBreaksDefinition-BZ4FJdWb-BiZJt3tv.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-rPFjEwU6.js";import"./NormalizationBinParametersMixin-70JA0FRq-lAcAejdF.js";import"./Scheduler-BV4C4cVP-Zy2poEKN.js";import"./debugFlags-8tOwPnHK-DspbDTNZ.js";import"./date-B2Zfy8vK-4Z7B9PBN.js";import"./xmlUtils-TLuV3CJ7-Cs2DGP6C.js";import"./Field-BIQ-quF4-BtlvGEij.js";const x="esri.layers.WFSLayer";class zt{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:a,getFeatureOutputFormat:o,fields:i,geometryType:u,featureType:s,maxRecordCount:n,maxTotalRecordCount:h,maxPageCount:w,objectIdField:d,customParameters:F}=t,{spatialReference:p,getFeatureSpatialReference:l}=J(a,s,t.spatialReference);try{await U(l,p)}catch{throw new y("unsupported-projection","Projection not supported",{inSpatialReference:l,outSpatialReference:p})}c(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=Y.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(T=>T.type==="esriFieldTypeDate")?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=l,this._maxRecordCount=n,this._maxTotalRecordCount=h,this._maxPageCount=w,this._objectIdField=d,this._spatialReference=p;let m=await this._snapshotFeatures(e);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(e),m.errors.length>0))throw m.errors[0];const S={type:"object-id",fieldName:d};return this._queryEngine=new M({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,featureIdInfo:S,spatialReference:p,timeInfo:null,featureStore:new O({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:C(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new y("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(I)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),Q(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=E(a=>this._snapshotFeatures({signal:a})),this._snapshotTask.promise.then(a=>{var o;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(a.features);for(const i of C(a))g.getLogger(x).warn(new _("wfs-layer:refresh-warning",i.message,i.details));(o=a.errors)!=null&&o.length&&g.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:a.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,a=this._maxTotalRecordCount,o=this._maxPageCount,i=this._supportsPagination&&o>1?await W(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(i==null)try{u=await this._singleQuery(e)}catch(n){R(n)||s.push(n)}else{const n=Math.min(i,a),h=v(this,P(Math.ceil(n/this._maxRecordCount),1,o),e);await Promise.allSettled(Array.from({length:10}).map(()=>G(h,u,s)))}return c(e),{features:u,totalRecordCount:i,maxTotalRecordCount:a,maxPageCount:o,errors:s}}async _singleQuery(t){const e=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,a=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:e,signal:t});return this._processGeoJSON(a,{signal:t})}async _pageQuery(t,e){const a=t*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:e});return this._processGeoJSON(o,{startIndex:a,signal:e})}_processGeoJSON(t,e){$(t,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:o}=e;c(o);const i=L(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!b(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=j(k(N(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const s of i){const n={};A(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=u++)}return i}}function*v(r,t,e){for(let a=0;a<t;a++)yield r._pageQuery(a,e)}async function G(r,t,e){let a=r.next();for(;!a.done;){try{const o=await a.value;t.push(...o)}catch(o){R(o)||e.push(o)}a=r.next()}}function C(r){const t=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),t}export{zt as default};
