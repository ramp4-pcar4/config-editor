import{h as M,iu as f,iv as v,it as T}from"./index-DECxckyg.js";import{q as C}from"./associatedFeatureServiceUtils-5tlRvHRs-5EFVw2C4.js";import{g as G}from"./fetchService-IPSkq0MP-mVZEemKB.js";import{u as w,d as L,p as P,b,L as V,w as $,f as j}from"./loadUtils-B4p6zboh-DkTH-nIx.js";import{t as F}from"./lazyLayerLoader-zoCpoQZ8-DPas8XcJ.js";import g from"./PortalItem-BP-IQXnZ-Cz8SNVQk.js";import{o as p}from"./portalItemUtils-BfWDJg-S-ChmaXTTv.js";import"./projectionUtils-B-CplN3q-dCP8PmW1.js";async function fe(e){let{portalItem:a}=e;!a||a instanceof g||(a=new g(a));const r=await K(a);return new r.constructor({portalItem:a,...r.properties})}async function K(e){await e.load();const a=new j;return D(await W(e,a))}async function W(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?H():E();case"CSV":return z();case"Feature Collection":return x(e);case"Feature Service":return J(e,a);case"Feed":return ae();case"GeoJson":return B();case"Group Layer":return re();case"Image Service":return U(e,a);case"KML":return Q();case"Knowledge Graph Layer":return X();case"Map Service":return O(e,a);case"Media Layer":return te();case"Scene Service":return k(e,a);case"Stream Service":return q();case"Video Service":return A(e,a);case"Vector Tile Service":return R();case"WCS":return Y();case"WFS":return Z();case"WMS":return _();case"WMTS":return ee();default:throw new M("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function D(e){const a=e.className,r=F[a];return{constructor:await r(),properties:e.properties}}async function O(e,a){return await se(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function J(e,a){const r=await N(e,a);if(typeof r=="object"){const{sourceJSON:t,className:n}=r,s={sourceJSON:t};return r.id!=null&&(s.layerId=r.id),{className:n||"FeatureLayer",properties:s}}return{className:"GroupLayer"}}async function k(e,a){var t,n;const r=await N(e,a,async()=>{var s;try{if(!e.url)return[];const{serverUrl:c}=await C(e.url,{sceneLayerItem:e});return((s=await a.fetchServiceMetadata(c))==null?void 0:s.tables)??[]}catch{return[]}});if(typeof r=="object"){const s={};let c;if(r.id!=null?(s.layerId=r.id,c=`${e.url}/layers/${r.id}`):c=e.url,(t=e.typeKeywords)==null?void 0:t.length){for(const u of Object.keys(f))if(e.typeKeywords.includes(u))return{className:f[u]}}const l=await a.fetchServiceMetadata(c,{customParameters:await a.fetchCustomParameters(e,u=>{var i;return(i=w(u))==null?void 0:i.customParameters})});return{className:f[l==null?void 0:l.layerType]||"SceneLayer",properties:s}}return r===!1&&((n=await a.fetchServiceMetadata(e.url))==null?void 0:n.layerType)==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function x(e){await e.load();const a=p(e,"Map Notes"),r=p(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(p(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return L(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function U(e,a){var m,o,y,S,h;await e.load();const r=((m=e.typeKeywords)==null?void 0:m.map(I=>I.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),n=t==null?void 0:t.layerType;if(n==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(n==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),c=(o=s.cacheType)==null?void 0:o.toLowerCase(),l=(y=s.capabilities)==null?void 0:y.toLowerCase().includes("tilesonly"),u=((h=(S=s.tileInfo)==null?void 0:S.format)==null?void 0:h.toLowerCase())??"",i=c==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(u);return c==="map"||i||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function q(){return{className:"StreamLayer"}}async function A(e,a){return typeof await N(e,a)=="object"?{className:"VideoLayer"}:{className:"GroupLayer"}}function R(){return{className:"VectorTileLayer"}}function B(){return{className:"GeoJSONLayer"}}function E(){return{className:"IntegratedMesh3DTilesLayer"}}function H(){return{className:"UnsupportedLayer"}}function z(){return{className:"CSVLayer"}}function Q(){return{className:"KMLLayer"}}function X(){return{className:"KnowledgeGraphLayer"}}function Y(){return{className:"WCSLayer"}}function Z(){return{className:"WFSLayer"}}function _(){return{className:"WMSLayer"}}function ee(){return{className:"WMTSLayer"}}function ae(){return{className:"StreamLayer"}}function re(){return{className:"GroupLayer"}}function te(){return{className:"MediaLayer"}}async function se(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function N(e,a,r){var u;const{url:t,type:n}=e,s=n==="Feature Service";if(!t)return{};if(/\/\d+$/.test(t)){if(s){const i=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,m=>{var o;return(o=w(m))==null?void 0:o.customParameters})});return v(e,T()),{id:i.id,className:G(i.type),sourceJSON:i}}return{}}if(n==="Video Service")return!((((u=(await a.fetchServiceMetadata(t)).layers)==null?void 0:u.length)??0)>1)&&{};await e.load();let c=await a.fetchItemData(e);if(s){const{data:i,preferredHost:m}=await P(c,t,a);v(e,m);const o=d(i);if(typeof o=="object"){const y=b(i,o.id);o.className=V(y==null?void 0:y.layerType)}return o}if(n==="Scene Service"&&(c=await $(e,c,a)),L(c)>0)return d(c);const l=await a.fetchServiceMetadata(t);return r&&(l.tables=await r()),d(l)}function d(e){var a;return L(e)===1&&{id:(a=w(e))==null?void 0:a.id}}export{fe as fromItem,W as selectLayerClassPath};
