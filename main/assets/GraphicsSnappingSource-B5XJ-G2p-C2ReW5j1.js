import{ac as v,a2 as u,a1 as S,a3 as w,b6 as b,u as d,Z as k,bK as E,v as a,S as l,aU as G,cT as C,n as F}from"./index-JysQxb7m.js";import{g as A}from"./asyncUtils-BPUlNCrX-BS2LVKAY.js";import{h as I}from"./memoize-DvEt8OkT-Cy_RrfpZ.js";import{i as P}from"./UpdatingHandles-Bd2FQ26N-CoxDITBt.js";import{L as H,O as R,Q as O}from"./projectionUtils-B-CplN3q-DYZZu_-u.js";import{G as z}from"./normalizeUtilsSync-DslYq1HB-DMEt4kOQ.js";import{U as Z}from"./featureConversionUtils-Bjjlcfdo-BG5IulME.js";import{F as x}from"./OptimizedFeature-mIz_HhJg-lEv_dFEg.js";import{M}from"./executeQueryForSnapping-BsS9M1AV-PUtM8Ehf.js";import{I as L}from"./FeatureStore-DfjNNhD_-57tmd1ao.js";import{K as T}from"./QueryEngine-B7NH52mH-7qQAVWT4.js";import{o as W}from"./FieldsIndex-Bt0Y8aWr-xBUfP_A6.js";import{B as q}from"./elevationInfoUtils-Ccn2Wfoe-CzrZeLi4.js";import{a as y}from"./utils-Cb2uXNfG-CNhH8kmH.js";import{z as N,ar as U}from"./SketchViewModel-B0qFHK0t-92x10Nsv.js";import{c as V,u as B}from"./queryEngineUtils-BDP_R2CG-DmS51fi4.js";import{w as g,T as $,A as f}from"./symbologySnappingCandidates-DPxOMBHj-CzkVDxji.js";import{r as j}from"./Scheduler-BV4C4cVP-DpxzNRMY.js";import"./normalizeUtilsCommon-ClagynAA-DgLRsjpR.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./OptimizedGeometry-pzfNw1AT--wT_d_bU.js";import"./memoryEstimations-DeWfxwaV-BnbU1TaS.js";import"./normalizeUtils-u00NGW3M-DJIcJS3H.js";import"./utils-BO8hgPs3-ESkgk50Y.js";import"./utils-DpLVEUvg-Cr3RAbYo.js";import"./queryUtils-DZy8hWx3-Bfe7hVhI.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-DYJXtuNt.js";import"./BoundsStore-DffHzOYo-D12ZTK1R.js";import"./PooledRBush-DfSXIoUa-Df1QVG8c.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-lauJM7ec.js";import"./WhereClauseCache-CixYkZwn-CtJ_a3Rr.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./WhereClause-D4rZJkVN-DdHUvPIP.js";import"./TimeOnly-CGkId3bj-DEVsu_Sy.js";import"./enum-g1DWyQyu-Cl9-UFcN.js";import"./UnknownTimeZone-DxjyzFvs-ChSwQqMk.js";import"./fieldType-PhcL4ff8-Dx3imvn-.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-DuTV0eJk.js";import"./utils-s7ypkCzr-BvXfmGao.js";import"./TimeExtent-Cf2Pienb-DstDmVgA.js";import"./heatmapUtils-DRTN9U3a-z76Jc4vk.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-BbDe6-Uh.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-d4wDSfI3.js";import"./intl-BAA1onnp-C2vVW-wX.js";import"./timeZoneUtils-d5p0Jda1-RjSvF6yi.js";import"./utils-CKRJGBD_-Chwz6dJv.js";import"./ClassBreaksDefinition-BZ4FJdWb-BlxWDsSM.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-D20vvpx7.js";import"./NormalizationBinParametersMixin-70JA0FRq-OCMdDuvi.js";import"./ElevationInfo-DE5to86a-D9mR-AIA.js";import"./lengthUtils-C61nRlXw-CbFzxkTc.js";import"./jsonUtils-BwLwuQj7-Bu_6JrpW.js";import"./parser-CWccHtwJ-ClH7aFqe.js";import"./cimSymbolUtils-DCedSSCN-C5MSTcya.js";import"./utils-BfXZnjCE-CGCN-wqd.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./GraphicsLayer-BiEC2-gS-X1BXWd5O.js";import"./GraphicsCollection-uWAVmks7-C1GM3TJR.js";import"./Layer-DvVVmz9x-CQh7OSfC.js";import"./BlendLayer-DjW_5k0v-HONeExWo.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ScaleRangeLayer-x42fwED3-DuReLbie.js";import"./editableLayers-DFUBlMJy-CghCkhUG.js";import"./utils-Dd8gTonD-CQWa1OZh.js";import"./Queue-DV3gpSdl-D_5qVZo7.js";import"./Version-CnwD6MZa-BFgcISMZ.js";import"./Cyclical-DgD7_U1C-DWXsOhyZ.js";import"./quantityUtils-B1Ov7DZK-GyqFFU0L.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec32-Cj8pVsU0-Cq-HgVHC.js";import"./projectVectorToVector-DcyiGOWJ-DQfXK2e-.js";import"./projectPointToVector-BZJhoF_5-Dr300XgW.js";import"./geodesicUtils-DKS2UG72-CDZ866Ix.js";import"./Query-n1aoaaFC-BH8Wj8dd.js";import"./Field-BIQ-quF4-CELMLVTM.js";import"./plane-Cf3Koz3c-DCCEvwZa.js";import"./vectorStacks-5ZZtmT9E-Yd4fhXgC.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./sphere-zPMQWhGG-DHiNq8Z2.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./geodeticLengthOperator-DHGBHzf3-CiCC-N0K.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-C4RiBl_1.js";import"./lineSegment-BAWQVP9P-BrsFXHnG.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-ErlLtZyA.js";import"./VertexSnappingCandidate-OoGbhLWl-_DMFALlK.js";import"./PointSnappingHint-OKXicQ1z-a9fau__y.js";import"./debugFlags-8tOwPnHK-Boy4z9Pk.js";const _="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return g();const o=async(r,s)=>(await G(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return $(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(r,s)=>{const p=await t.whenLayerView(e);return d(s),p.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new P,this._memoizedMakeGetGroundElevation=I(B)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},u);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{q(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),S(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),w(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await b(this._mapSources(m=>this._fetchCandidatesForSource(m,t,e)));d(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),p=r.flat().map(m=>V(m,s));return N(i,p),p}async _fetchCandidatesForSource(t,e,i){var h;const o=U({parameters:e,mode:((h=this.view)==null?void 0:h.type)??"2d"}),r=await M(t.queryEngine,o,i);d(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);d(i);const p=await this._symbologySnappingFetcher.fetch(s,i);d(i);const m=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(o,m)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=A(async s=>{await O(t.map(p=>({source:p,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const p of e.values())this._add(p)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>C(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=k.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),y(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!H(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=R(z(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=Z(o,this._hasZ,!1);return new x(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=E.toJSON(t),i=this._hasZ,o=new L({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new T({featureStore:o,fieldsIndex:W.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:j.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),y(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([F("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
