import{jX as w,dO as te,d_ as se,a5 as N,gh as X}from"./index-C8m3jhgc.js";import{O as ie,F as p,b as M,L as re,H as I}from"./Texture-DXSFJsEu-BYX1rrMX.js";import{f as g,X as U,S as n,C as F,r as v,R as b,Y as d,M as C,a as ae,V as R,o as W,A as m,N as D,O as $,L as x,D as B,P as A,T as E,G as y,n as S,I as O,U as j,F as k,B as ne}from"./enums-DBi1-Mm2-CUS1pvQe.js";import{ProgramCache as le,glslifyDefineMap as oe}from"./webglDeps-BKBjGpbm-4dDITF1f.js";import{b as he,Q as fe,m as ue}from"./renderState-DlSSrLcZ-Du_EmLq6.js";import{e as V}from"./glsl-o28TenZV-B0eZUNn3.js";import{u as P,N as Z}from"./VertexArrayObject-DTkLCIKs-CSFN9_jv.js";import{f as L}from"./FramebufferObject-DQw0QX3p-BfLFFTaU.js";import{b as _e,L as ce,c as G}from"./testSVGPremultipliedAlpha-CdWnvpEj-Cic4ea_f.js";import{a as de}from"./floatRGBA-YJlz5IlR-Dw-6FvLC.js";import{f as z}from"./doublePrecisionUtils-BJbYwoii-kIP-tL_t.js";import{n as Q}from"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import{d as Ee}from"./MapView-BcnxJC0k-Binfb5ne.js";import{a as Y}from"./WGLContainer-CF3AeUnM-DFAujpfw.js";let ge=class J{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:`#version 300 es
    precision highp float;

    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,fragment:`#version 300 es
    precision highp float;

    out vec4 fragColor;

    void main(void) {
      fragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`}}_createHelperProgram(){const t=J.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return P.createIndex(this._rctx,S.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,n.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(E.POINTS,1,O.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){}};class q{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:m.ONE,dstRGB:m.ZERO,srcAlpha:m.ONE,dstAlpha:m.ZERO},this.blendEquation={mode:D.ADD,modeAlpha:D.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=F.BACK,this.frontFace=$.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=x.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:F.FRONT_AND_BACK,func:x.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:F.FRONT_AND_BACK,fail:B.KEEP,zFail:B.KEEP,zPass:B.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.drawBuffers={defaultFramebuffer:[g.BACK],fbos:new WeakMap},this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class pe{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<R.COUNT;)this._current.push(0)}increment(t,s,i=1){var r;this._current[t]+=i,(r=this._allocations)==null||r.add(s)}decrement(t,s,i=1){var r;this._current[t]-=i,(r=this._allocations)==null||r.remove(s)}get current(){return this._current}get total(){return this.current.reduce((t,s,i)=>t+(i<R.UNCOUNTED?s:0),0)}get resourceInformation(){var s;let t="";if(this.total>0){t+=`Live objects:
`;for(let i=0;i<R.COUNT;++i){const r=this._current[i];r>0&&(t+=`${R[i]}: ${r}
`)}}return t+=(s=this._allocations)==null?void 0:s.resetLog(),t}}let be=class{constructor(e,t,s){const i=t.textureFilterAnisotropic,r=s.maxAnisotropy??1/0;this.versionString=e.getParameter(e.VERSION),this.maxVertexTextureImageUnits=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=i?Math.min(e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY),r):1,this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=e.getParameter(e.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=e.getParameter(e.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=e.getParameter(e.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=e.getParameter(e.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=e.getParameter(e.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=e.getParameter(e.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=e.getParameter(e.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=e.getParameter(e.MAX_SAMPLES),this.maxDrawBuffers=e.getParameter(e.MAX_DRAW_BUFFERS)}};class Fe extends G{constructor(t){super(),this._rctx=t,this._helperProgram=null,N("mac")&&N("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){var t;super.dispose(),(t=this._helperProgram)==null||t.dispose(),this._helperProgram=null}_test(t){const s=this._rctx,i=s.getBoundFramebufferObject(),{x:r,y:a,width:l,height:h}=s.getViewport();s.resetState();const o=new I(1);o.wrapMode=y.CLAMP_TO_EDGE,o.samplingMode=C.NEAREST;const f=new L(s,o),_=P.createIndex(this._rctx,S.STATIC_DRAW,new Uint8Array([0]));s.bindFramebuffer(f),s.setViewport(0,0,1,1),s.useProgram(this._helperProgram),s.bindBuffer(_,n.ELEMENT_ARRAY_BUFFER),s.drawElements(E.POINTS,1,O.UNSIGNED_BYTE,0),s.useProgram(t),s.bindVAO(null),s.drawArrays(E.TRIANGLES,0,258);const c=new Uint8Array(4);return f.readPixels(0,0,1,1,j.RGBA,k.UNSIGNED_BYTE,c),s.setViewport(r,a,l,h),s.bindFramebuffer(i),f.dispose(),_.dispose(),c[0]===255}_prepareProgram(){const t=`#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${V.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,s=`#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${V.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(t,s,new Map([]))}_prepareHelperProgram(){const t=ge.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}let Re=class extends G{constructor(e){super(),this._rctx=e,this._program=K(this._rctx,!1),this._obfuscated=K(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=w(this._obfuscated)}_test(e){if(N("force-double-precision-obfuscation"))return!0;if(this._obfuscated==null)return!1;const t=this._rctx,s=t.getBoundFramebufferObject(),{x:i,y:r,width:a,height:l}=t.getViewport(),h=this._runProgram(e),o=this._runProgram(this._obfuscated);return t.setViewport(i,r,a,l),t.bindFramebuffer(s),h!==0&&(o===0||h/o>5)}_runProgram(e){const t=this._rctx;t.resetState();const s=new I(1);s.wrapMode=y.CLAMP_TO_EDGE,s.samplingMode=C.NEAREST;const i=new L(t,s),r=P.createVertex(t,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),a=new Z(t,new Map([["position",0]]),new Map([["geometry",[new Q("position",2,O.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",r]])),l=X(5633261287538229e-9,2626832878767164e-9,1.4349880495278358e6),h=X(563327146742708e-8,2.6268736381334523e6,1434963231608387e-9),o=new Float32Array(6);z(l,o,3);const f=new Float32Array(6);z(h,f,3),t.useProgram(e),e.setUniform3f("u_highA",o[0],o[2],o[4]),e.setUniform3f("u_lowA",o[1],o[3],o[5]),e.setUniform3f("u_highB",f[0],f[2],f[4]),e.setUniform3f("u_lowB",f[1],f[3],f[5]),t.bindFramebuffer(i),t.setViewport(0,0,1,1),t.bindVAO(a),t.drawArrays(E.TRIANGLE_STRIP,0,4);const _=new Uint8Array(4);i.readPixels(0,0,1,1,j.RGBA,k.UNSIGNED_BYTE,_),a.dispose(),i.dispose();const c=(l[2]-h[2])/25,T=de(_);return Math.abs(c-T)}};function K(e,t){const s=`

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${t?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `;return e.programCache.acquire(s,`
  precision highp float;

  varying vec4 v_color;

  void main() {
    gl_FragColor = v_color;
  }
  `,new Map([["position",0]]))}class me extends G{constructor(t){var r,a;if(super(),this._rctx=t,!t.gl||!((r=t.capabilities.colorBufferFloat)!=null&&r.textureFloat&&((a=t.capabilities.colorBufferFloat)!=null&&a.floatBlend)))return;const s=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,i=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=t.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(t){const s=this._rctx,i=new I(1);i.wrapMode=y.CLAMP_TO_EDGE,i.dataType=k.FLOAT,i.internalFormat=ne.RGBA32F,i.samplingMode=C.NEAREST;const r=new L(s,i),a=P.createVertex(s,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),l=new Z(s,new Map([["a_pos",0]]),new Map([["geometry",[new Q("a_pos",2,O.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",a]]));s.gl.getError(),s.useProgram(t);const h=s.getBoundFramebufferObject(),{x:o,y:f,width:_,height:c}=s.getViewport();s.bindFramebuffer(r),s.setViewport(0,0,1,1),s.bindVAO(l),s.drawArrays(E.TRIANGLE_STRIP,0,4);const T=fe({blending:ue});s.setPipelineState(T),s.drawArrays(E.TRIANGLE_STRIP,0,4);const ee=s.gl.getError();return s.setViewport(o,f,_,c),s.bindFramebuffer(h),l.dispose(),r.dispose(),ee!==s.gl.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class Be{constructor(t){this.rctx=t,this.floatBufferBlend=new me(t),this.svgPremultipliesAlpha=new _e(t),this.doublePrecisionRequiresObfuscation=new Re(t),this.drawArraysRequiresIndicesTypeReset=new Fe(t)}dispose(){this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function Te(e,t){if(t.compressedTextureETC)return null;const s=e.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function Ae(e,t){if(t.compressedTextureS3TC)return null;const s=e.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function xe(e,t){if(t.textureFilterAnisotropic)return null;const s=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}function Ce(e,t){const s=!t.colorBufferHalfFloat&&e.getExtension("EXT_color_buffer_half_float")||!t.colorBufferFloat&&e.getExtension("EXT_color_buffer_float"),i=!t.colorBufferFloat&&e.getExtension("EXT_color_buffer_float"),r=!t.floatBlend&&!t.colorBufferFloat&&e.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,R16F:e.R16F,RG16F:e.RG16F,RGBA16F:e.RGBA16F,R32F:e.R32F,RG32F:e.RG32F,RGBA32F:e.RGBA32F,R11F_G11F_B10F:e.R11F_G11F_B10F,RGB16F:e.RGB16F}:null}function Se(e,t,s,i,r){if(t[s])return!1;for(const a of r)if(e.getExtension(a))return!0;return!1}function Oe(e,t){if(t.textureNorm16)return null;const s=e.getExtension("EXT_texture_norm16");return s?{R16:s.R16_EXT,RG16:s.RG16_EXT,RGB16:s.RGB16_EXT,RGBA16:s.RGBA16_EXT,R16_SNORM:s.R16_SNORM_EXT,RG16_SNORM:s.RG16_SNORM_EXT,RGB16_SNORM:s.RGB16_SNORM_EXT,RGBA16_SNORM:s.RGBA16_SNORM_EXT}:null}function Pe(e,t){const s=t.loseContext&&e.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}class Me{constructor(t,s){this._gl=t,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._textureFloatLinear=null,this._debugRendererInfo=null,this._disabledExtensions=s.disabledExtensions||{},this._debugWebGLExtensions=s.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC??(this._compressedTextureETC=Te(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC??(this._compressedTextureS3TC=Ae(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic??(this._textureFilterAnisotropic=xe(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery??(this._disjointTimerQuery=ce(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get colorBufferFloat(){return this._colorBufferFloat??(this._colorBufferFloat=Ce(this._gl,this._disabledExtensions)),this._colorBufferFloat}get textureNorm16(){return this._textureNorm16??(this._textureNorm16=Oe(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear??(this._textureFloatLinear=Se(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}get loseContext(){return this._loseContext??(this._loseContext=Pe(this._gl,this._debugWebGLExtensions)),this._loseContext}get debugRendererInfo(){return this._debugRendererInfo??(this._debugRendererInfo=Ee(this._gl,this._debugWebGLExtensions)),this._debugRendererInfo}enable(t){return this[t]}}let Ke=class{constructor(e,t){this.gl=e,this.instanceCounter=new pe,this.programCache=new le(this),this._transformFeedbackRequestInfo=null,this._state=new q,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(t)}configure(e){this._capabilities=new Me(this.gl,e),this._parameters=new be(this.gl,this._capabilities,e),ie.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const t=this.gl.getParameter(this.gl.VIEWPORT);this._state=new q,this._state.viewport={x:t[0],y:t[1],width:t[2],height:t[3]},this._stateTracker=new he({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const i=s.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const i=s.function;this.setStencilFunction(i.func,i.ref,i.mask);const r=s.operation;this.setStencilOp(r.fail,r.zFail,r.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{s?this.setStencilWriteMask(s.mask):this.setStencilWriteMask(0)},setDrawBuffers:s=>{if(s)this.setDrawBuffers(s.buffers);else{const{drawFramebuffer:i}=this._state;i===null?this.setDrawBuffers([g.BACK]):i.colorAttachments.length===0?this.setDrawBuffers([g.NONE]):this.setDrawBuffers([U.COLOR_ATTACHMENT0])}}}),this.enforceState(),w(this._driverTest),this._driverTest=new Be(this)}dispose(){w(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(n.ARRAY_BUFFER),this.unbindBuffer(n.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(n.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(n.PIXEL_PACK_BUFFER),this.unbindBuffer(n.PIXEL_UNPACK_BUFFER),this.unbindBuffer(n.COPY_READ_BUFFER),this.unbindBuffer(n.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,p()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(e){this._stateTracker.setPipeline(e)}setBlendingEnabled(e){this._state.blend!==e&&(e===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=e,this._stateTracker.invalidateBlending())}externalProgramUpdate(){var e;(e=this._state.program)==null||e.stop(),this._state.program=null}externalTextureUnitUpdate(e,t){for(let s=0;s<e.length;++s)this._state.textureUnitMap[e[s]]=null;t>=0&&(this._state.activeTexture=t)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(e,t,s,i){e===this._state.blendColor.r&&t===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(e,t,s,i),this._state.blendColor.r=e,this._state.blendColor.g=t,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(e,t){e===this._state.blendFunction.srcRGB&&t===this._state.blendFunction.dstRGB||(this.gl.blendFunc(e,t),this._state.blendFunction.srcRGB=e,this._state.blendFunction.srcAlpha=e,this._state.blendFunction.dstRGB=t,this._state.blendFunction.dstAlpha=t,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(e,t,s,i){this._state.blendFunction.srcRGB===e&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===t&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(e,t,s,i),this._state.blendFunction.srcRGB=e,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=t,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(e){this._state.blendEquation.mode!==e&&(this.gl.blendEquation(e),this._state.blendEquation.mode=e,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(e,t){this._state.blendEquation.mode===e&&this._state.blendEquation.modeAlpha===t||(this.gl.blendEquationSeparate(e,t),this._state.blendEquation.mode=e,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setColorMask(e,t,s,i){this._state.colorMask.r===e&&this._state.colorMask.g===t&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(e,t,s,i),this._state.colorMask.r=e,this._state.colorMask.g=t,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(e,t,s,i){this._state.clearColor.r===e&&this._state.clearColor.g===t&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(e,t,s,i),this._state.clearColor.r=e,this._state.clearColor.g=t,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(e){this._state.faceCulling!==e&&(e===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=e,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(e){this._state.polygonOffsetFill!==e&&(e===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=e,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(e,t){this._state.polygonOffset[0]===e&&this._state.polygonOffset[1]===t||(this._state.polygonOffset[0]=e,this._state.polygonOffset[1]=t,this.gl.polygonOffset(e,t),this._stateTracker.invalidatePolygonOffset())}setCullFace(e){this._state.cullFace!==e&&(this.gl.cullFace(e),this._state.cullFace=e,this._stateTracker.invalidateCulling())}setFrontFace(e){this._state.frontFace!==e&&(this.gl.frontFace(e),this._state.frontFace=e,this._stateTracker.invalidateCulling())}setScissorTestEnabled(e){this._state.scissorTest!==e&&(e===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=e)}setScissorRect(e,t,s,i){this._state.scissorRect.x===e&&this._state.scissorRect.y===t&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(e,t,s,i),this._state.scissorRect.x=e,this._state.scissorRect.y=t,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(e){this._state.depthTest!==e&&(e===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=e,this._stateTracker.invalidateDepthTest())}setClearDepth(e){this._state.clearDepth!==e&&(this.gl.clearDepth(e),this._state.clearDepth=e)}setDepthFunction(e){this._state.depthFunction!==e&&(this.gl.depthFunc(e),this._state.depthFunction=e,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(e){this._state.depthWrite!==e&&(this.gl.depthMask(e),this._state.depthWrite=e,this._stateTracker.invalidateDepthWrite())}setDepthRange(e,t){this._state.depthRange.zNear===e&&this._state.depthRange.zFar===t||(this.gl.depthRange(e,t),this._state.depthRange.zNear=e,this._state.depthRange.zFar=t,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(e){this._state.stencilTest!==e&&(e===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=e,this._stateTracker.invalidateStencilTest())}setClearStencil(e){e!==this._state.clearStencil&&(this.gl.clearStencil(e),this._state.clearStencil=e)}setStencilFunction(e,t,s){this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===t&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(e,t,s),this._state.stencilFunction.face=F.FRONT_AND_BACK,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=t,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(e,t,s,i){this._state.stencilFunction.face===e&&this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(e,t,s,i),this._state.stencilFunction.face=e,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(e){this._state.stencilWriteMask!==e&&(this.gl.stencilMask(e),this._state.stencilWriteMask=e,this._stateTracker.invalidateStencilWrite())}setStencilOp(e,t,s){this._state.stencilOperation.face===F.FRONT_AND_BACK&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===t&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(e,t,s),this._state.stencilOperation.face=F.FRONT_AND_BACK,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=t,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(e,t,s,i){this._state.stencilOperation.face===e&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(e,t,s,i),this._state.stencilOperation.face=e,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(e,t=!1){const s=this._state.activeTexture;return e>=0&&(t||e!==this._state.activeTexture)&&(this.gl.activeTexture(v+e),this._state.activeTexture=e),s}setDrawBuffers(e){const{drawFramebuffer:t}=this._state,s=t===null,i=s?this._state.drawBuffers.defaultFramebuffer:this._state.drawBuffers.fbos.get(t);if((i==null?void 0:i.length)!==e.length||!i.every((r,a)=>r===e[a]))if(e.length>this.parameters.maxDrawBuffers)console.error("Setting more active draw buffers than GL.MAX_DRAW_BUFFERS allows.");else{if(s){if(e.length>1)return void console.error("The default framebuffer can only have one active draw buffer.");if(e[0]!==g.BACK&&e[0]!==g.NONE)return void console.error("The default framebuffer can only use the constants GL.BACK or GL.NONE as draw buffers.")}s||!e.includes(g.BACK)?(this.gl.drawBuffers(e),s?this._state.drawBuffers.defaultFramebuffer=e:this._state.drawBuffers.fbos.set(t,e),this._stateTracker.invalidateDrawBuffers()):console.error("A framebuffer object can only use the constants GL.COLOR_ATTACHMENTi or GL.NONE as draw buffers.")}}clear(e,t=255){var s;if(e){if(e&b.COLOR){const i=(s=this._state.drawFramebuffer)==null?void 0:s.colorAttachments;i&&this.setDrawBuffers(i),this.setColorMask(!0,!0,!0,!0)}e&b.DEPTH&&this.setDepthWriteEnabled(!0),e&b.STENCIL&&this.setStencilWriteMask(t),this.gl.clear(e)}}clearFramebuffer(e,t=!1,s=!1){let i=0;if(e){const r=Math.max(1e-13,e[3]);this.setClearColor(e[0],e[1],e[2],r),i|=b.COLOR}t&&(i|=b.DEPTH),s===!1?s=0:(s===!0&&(s=255),i|=b.STENCIL),i&&this.clear(i,s)}drawArrays(e,t,s){var i,r;if(this._transformFeedbackRequestInfo){if(e!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(((i=this._state.program)==null?void 0:i.hasTransformFeedbackVaryings)==null)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(p()){this._numOfDrawCalls++,this._numOfTriangles+=H(e,s);const a=this._state.textureUnitMap;for(let l=0;l<a.length;l++){const h=a[l];if(h!=null&&h===((r=this._state.drawFramebuffer)==null?void 0:r.colorTexture))throw new Error(`Detected readWrite. Texture already bound at index ${l}`)}}this.gl.drawArrays(e,t,s),M(this.gl)}drawArraysInstanced(e,t,s,i){this.gl.drawArraysInstanced(e,t,s,i),M(this.gl)}drawElements(e,t,s,i){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(p()&&(this._numOfDrawCalls++,this._numOfTriangles+=H(e,t)),this.gl.drawElements(e,t,s,i),p()){const r=re(this);if(r){const a=this.getBoundVAO(),l=a==null?void 0:a.indexBuffer,h=a==null?void 0:a.vertexBuffers,o={indexBuffer:l,vertexBuffers:h},f={mode:e,count:t,type:s,offset:i},_=(l==null?void 0:l.size)??0,c=i+t,T=_<c?`. Buffer is too small. Attempted to draw index ${c} of ${_}`:"";console.error(`drawElements: ${r}${T}`,{args:f,vao:o})}}}drawElementsInstanced(e,t,s,i,r){this.gl.drawElementsInstanced(e,t,s,i,r),M(this.gl)}logInfo(){p()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){p()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(e,t,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const r=this._state.viewport;r.x===e&&r.y===t&&r.width===s&&r.height===i||(r.x=e,r.y=t,r.width=s,r.height=i,this.gl.viewport(e,t,s,i))}setViewport4fv(e){this.setViewport(e[0],e[1],e[2],e[3])}restoreViewport({x:e,y:t,width:s,height:i}){this.setViewport(e,t,s,i)}getViewport(){const e=this._state.viewport;return{x:e.x,y:e.y,width:e.width,height:e.height}}useProgram(e){var t;this._state.program!==e&&((t=this._state.program)==null||t.stop(),this._state.program=e,this.gl.useProgram((e==null?void 0:e.glName)??null))}bindTexture(e,t,s=!1){(t>=this.parameters.maxTextureImageUnits||t<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[t];return(e==null?void 0:e.glName)==null?(i!=null&&(this.setActiveTexture(t,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[t]=null,i):s||i!==e?(this.setActiveTexture(t,s),this.gl.bindTexture(e.descriptor.target,e.glName),e.applyChanges(),this._state.textureUnitMap[t]=e,i):(e.isDirty&&(this.setActiveTexture(t,s),e.applyChanges()),i)}unbindTexture(e){if(e!=null)for(let t=0;t<this.parameters.maxTextureImageUnits;t++)this._state.textureUnitMap[t]===e&&(this.bindTexture(null,t),this._state.textureUnitMap[t]=null)}bindFramebuffer(e,t=!1){if(t||this._state.readFramebuffer!==e||this._state.drawFramebuffer!==e){if(this._stateTracker.invalidateDrawBuffers(),e==null)return this.gl.bindFramebuffer(d.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);e.initializeAndBind(d.FRAMEBUFFER),this._state.readFramebuffer=e,this._state.drawFramebuffer=e}}bindFramebufferSeparate(e,t,s=!1){const i=t===d.READ_FRAMEBUFFER,r=i?this._state.readFramebuffer:this._state.drawFramebuffer;(s||r!==e)&&(e==null?this.gl.bindFramebuffer(t,null):e.initializeAndBind(t),i?this._state.readFramebuffer=e??null:(this._stateTracker.invalidateDrawBuffers(),this._state.drawFramebuffer=e??null))}blitFramebuffer(e,t,s=0,i=0,r=e.width,a=e.height,l=0,h=0,o=t.width,f=t.height,_=b.COLOR,c=C.NEAREST){this.bindFramebufferSeparate(e,d.READ_FRAMEBUFFER),this.bindFramebufferSeparate(t,d.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,r,a,l,h,o,f,_,c)}bindBuffer(e,t){if(e)switch(t??(t=e.bufferType),t){case n.ARRAY_BUFFER:this._state.vertexBuffer=u(this.gl,e,t,this._state.vertexBuffer);break;case n.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=u(this.gl,e,t,this._state.indexBuffer);break;case n.UNIFORM_BUFFER:this._state.uniformBuffer=u(this.gl,e,t,this._state.uniformBuffer);break;case n.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=u(this.gl,e,t,this._state.pixelPackBuffer);break;case n.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=u(this.gl,e,t,this._state.pixelUnpackBuffer);break;case n.COPY_READ_BUFFER:this._state.copyReadBuffer=u(this.gl,e,t,this._state.copyReadBuffer);break;case n.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=u(this.gl,e,t,this._state.copyWriteBuffer);break;case n.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=u(this.gl,e,t,this._state.transformFeedbackBuffer)}}bindRenderbuffer(e){const t=this.gl;e||(t.bindRenderbuffer(t.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==e&&(t.bindRenderbuffer(t.RENDERBUFFER,e.glName),this._state.renderbuffer=e)}_getBufferBinding(e,t){if(t>=this.parameters.maxUniformBufferBindings||t<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=e===n.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let i=s[t];return i==null&&(i={buffer:null,offset:0,size:0},s[t]=i),i}bindBufferBase(e,t,s){const i=this._getBufferBinding(e,t);i!=null&&(i.buffer===s&&i.offset===0&&i.size===0||(this.gl.bindBufferBase(e,t,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0))}bindBufferRange(e,t,s,i,r){const a=this._getBufferBinding(e,t);a!=null&&(a.buffer===s&&a.offset===i&&a.size===r||(i%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(e,t,s.glName,i,r),a.buffer=s,a.offset=i,a.size=r):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(e,t,s,i){t!=null?(p()&&(i??t.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),t.initialize(),s!==void 0&&i!==void 0?this.bindBufferRange(n.UNIFORM_BUFFER,e,t.buffer,s,i):this.bindBufferBase(n.UNIFORM_BUFFER,e,t.buffer)):this.bindBufferBase(n.UNIFORM_BUFFER,e,null)}unbindUBO(e){for(let t=0,s=this._state.uniformBufferBindingPoints.length;t<s;t++){const i=this._state.uniformBufferBindingPoints[t];i!=null&&i.buffer===e.buffer&&this.bindBufferBase(n.UNIFORM_BUFFER,t,null)}}unbindBuffer(e){switch(e){case n.ARRAY_BUFFER:this._state.vertexBuffer=u(this.gl,null,e,this._state.vertexBuffer);break;case n.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=u(this.gl,null,e,this._state.indexBuffer);break;case n.UNIFORM_BUFFER:this._state.uniformBuffer=u(this.gl,null,e,this._state.uniformBuffer);break;case n.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=u(this.gl,null,e,this._state.pixelPackBuffer);break;case n.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=u(this.gl,null,e,this._state.pixelUnpackBuffer);break;case n.COPY_READ_BUFFER:this._state.copyReadBuffer=u(this.gl,null,e,this._state.copyReadBuffer);break;case n.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=u(this.gl,null,e,this._state.copyWriteBuffer)}}bindVAO(e=null){e!=null?this._state.vertexArrayObject!==e&&(e.bind(),this._state.vertexArrayObject=e):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(e){const{gl:t}=this;t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,e.glName)}beginTransformFeedback(e,t){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,e.glName),s.beginTransformFeedback(t),this._transformFeedbackRequestInfo={primitiveType:t}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:e}=this;e.endTransformFeedback(),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(e=se(10)){const{gl:t}=this,s=t.fenceSync(ae.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(R.Sync,s),t.flush();do await te(e),i=t.clientWaitSync(s,0,0);while(i===W.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(R.Sync,s),t.deleteSync(s),i===W.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(e=d.FRAMEBUFFER){return e===d.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(n.ARRAY_BUFFER),this.unbindBuffer(n.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(n.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(n.PIXEL_PACK_BUFFER),this.unbindBuffer(n.PIXEL_UNPACK_BUFFER),this.unbindBuffer(n.COPY_READ_BUFFER),this.unbindBuffer(n.COPY_WRITE_BUFFER);for(let e=0;e<this.parameters.maxTextureImageUnits;++e)this.bindTexture(null,e);this.setBlendingEnabled(!1),this.setBlendFunction(m.ONE,m.ZERO),this.setBlendEquation(D.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(F.BACK),this.setFrontFace($.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(x.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(x.ALWAYS,0,0),this.setStencilOp(B.KEEP,B.KEEP,B.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setDrawBuffers([g.BACK]),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var s,i,r;const{gl:e}=this;e.bindVertexArray(null);for(let a=0;a<this.parameters.maxVertexAttributes;a++)e.disableVertexAttribArray(a);this._state.vertexBuffer?e.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):e.bindBuffer(n.ARRAY_BUFFER,null),this._state.indexBuffer?e.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):e.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?e.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):e.bindBuffer(n.UNIFORM_BUFFER,null);for(let a=0;a<this._parameters.maxUniformBufferBindings;a++){const l=this._state.uniformBufferBindingPoints[a];if(l!=null){const{buffer:h,offset:o,size:f}=l;h!==null?o===0&&f===0?e.bindBufferBase(n.UNIFORM_BUFFER,a,h.glName):e.bindBufferRange(n.UNIFORM_BUFFER,a,h.glName,o,f):e.bindBufferBase(n.UNIFORM_BUFFER,a,null)}}if(this._state.pixelPackBuffer?e.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):e.bindBuffer(n.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?e.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):e.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?e.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):e.bindBuffer(n.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?e.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):e.bindBuffer(n.COPY_WRITE_BUFFER,null),e.bindFramebuffer(d.READ_FRAMEBUFFER,null),e.readBuffer(e.BACK),this._state.readFramebuffer&&(e.bindFramebuffer(d.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),e.readBuffer(U.COLOR_ATTACHMENT0)),e.bindFramebuffer(d.DRAW_FRAMEBUFFER,((s=this._state.drawFramebuffer)==null?void 0:s.glName)??null),this._state.drawFramebuffer===null){const a=this._state.drawBuffers.defaultFramebuffer;e.drawBuffers(a??[g.BACK])}else{const a=this._state.drawBuffers.fbos.get(this._state.drawFramebuffer);e.drawBuffers(a??[U.COLOR_ATTACHMENT0])}if(this._state.vertexArrayObject){const a=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(a)}e.useProgram(((i=this._state.program)==null?void 0:i.glName)??null),e.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),e.bindRenderbuffer(e.RENDERBUFFER,((r=this._state.renderbuffer)==null?void 0:r.glName)??null),this._state.blend===!0?e.enable(this.gl.BLEND):e.disable(this.gl.BLEND),e.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),e.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),e.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),e.clearDepth(this._state.clearDepth),e.clearStencil(this._state.clearStencil),e.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),e.cullFace(this._state.cullFace),e.depthFunc(this._state.depthFunction),e.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthMask(this._state.depthWrite),e.frontFace(this._state.frontFace),e.lineWidth(1),this._state.faceCulling===!0?e.enable(e.CULL_FACE):e.disable(e.CULL_FACE),e.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),e.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST),e.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),e.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),e.stencilMask(this._state.stencilWriteMask);for(let a=0;a<this.parameters.maxTextureImageUnits;a++){e.activeTexture(v+a),e.bindTexture(A.TEXTURE_2D,null),e.bindTexture(A.TEXTURE_CUBE_MAP,null),e.bindTexture(A.TEXTURE_3D,null),e.bindTexture(A.TEXTURE_2D_ARRAY,null);const l=this._state.textureUnitMap[a];l!=null&&e.bindTexture(l.descriptor.target,l.glName)}e.activeTexture(v+this._state.activeTexture);const t=this._state.viewport;e.viewport(t.x,t.y,t.width,t.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}};function u(e,t,s,i){return t?i!==t&&e.bindBuffer(s,t.glName):e.bindBuffer(s,null),t}function H(e,t){switch(e){case E.POINTS:return 2*t;case E.TRIANGLES:return t/3;case E.TRIANGLE_STRIP:case E.TRIANGLE_FAN:return t-2;default:return 0}}const Ue=e=>{let t="";t+=e[0].toUpperCase();for(let s=1;s<e.length;s++){const i=e[s];i===i.toUpperCase()?(t+="_",t+=i):t+=i.toUpperCase()}return t},ve=e=>{const t={};for(const s in e)t[Ue(s)]=e[s];return oe(t)},He=(e,t,s,i)=>{const r=e+e.slice(Math.max(0,e.lastIndexOf("/"))),a=t+t.slice(Math.max(0,t.lastIndexOf("/"))),l=ve(i);return{attributes:s,shaders:{vertexShader:l+Y(`${r}.vert`),fragmentShader:l+Y(`${a}.frag`)}}};export{He as N,Ke as v};
