import{i as I,m as w}from"./devEnvironmentUtils-CxrVv3RG-ktR0Kqgv.js";import{h as u,bq as j,M as c,bk as S,dE as M,dF as _,bH as k,dG as $,dH as N}from"./index-aQr1pzMk.js";import{j as A,y as v,q as D,A as B,I as H}from"./styleUtils-DBPDLVBX-CubQZ8CT.js";const W=["web-gltf","web","cim"];function x(t,e,l){const o=t.name;return o==null?Promise.reject(new u("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):t.styleName==="Esri2DPointSymbolsStyle"?z(o,e,l):A(t,e,l).then(n=>O(n,o,e,H,l))}function F(t,e){return e.items.find(l=>l.name===t)}async function O(t,e,l,o,n){var h,d;const a=(l==null?void 0:l.portal)!=null?l.portal:j.getDefault(),s={portal:a,url:c(t.baseUrl)},m=F(e,t.data);if(!m)throw new u("symbolstyleutils:symbol-name-not-found",`The symbol name '${e}' could not be found`,{symbolName:e});const b=(n==null?void 0:n.acceptedFormats)??W,f=o(m,b);if(!f)throw new u("symbolstyleutils:symbol-reference-no-accepted-format",`The symbol name '${e}' does not have an accepted format (one of ${b})`,{symbolName:e});const{url:P,format:T}=f;let i=S(P,s),y=((h=m.thumbnail)==null?void 0:h.href)??null;const p=(d=m.thumbnail)==null?void 0:d.imageData;I()&&(i=w(i)??"",y=w(y));const U={portal:a,url:c(M(i)),origin:"portal-item"};return v(i,n).then(g=>{const q=T==="cim"?D(g.data):g.data,r=_(q,U);if(r&&k(r)){if(y){const E=S(y,s);r.thumbnail=new $({url:E})}else p&&(r.thumbnail=new $({url:`data:image/png;base64,${p}`}));t.styleUrl?r.styleOrigin=new N({portal:l.portal,styleUrl:t.styleUrl,name:e}):t.styleName&&(r.styleOrigin=new N({portal:l.portal,styleName:t.styleName,name:e}))}return r})}function z(t,e,l){const o=B.replaceAll(/\{SymbolName\}/gi,t),n=e.portal!=null?e.portal:j.getDefault();return v(o,l).then(a=>{const s=D(a.data);return _(s,{portal:n,url:c(M(o)),origin:"portal-item"})})}const K=Object.freeze(Object.defineProperty({__proto__:null,fetchSymbolFromStyle:O,getStyleItemFromStyle:F,resolveWebStyleSymbol:x},Symbol.toStringTag,{value:"Module"}));export{W as e,F as g,x as h,O as j,K as w};
