import{v as y,n as L,du as p,u as x,gD as m}from"./index-12gn5LMs.js";import{P as h,g as _,N as b}from"./vec32-Cj8pVsU0-DilQFd61.js";import{M as P,R as S,T}from"./lineSegment-BAWQVP9P-BOJL4uyQ.js";import{U as l,r as E,S as V}from"./sphere-zPMQWhGG-CkFwgVLE.js";import{H as w}from"./Octree-B7mLL9lS-CwTvrMK7.js";import{K as I}from"./edgeProcessing-r6PavHvX-B27NCuMM.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vectorStacks-5ZZtmT9E-CD9CakLU.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./mat4-OOmHNWi7-DxHlGyKX.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./plane-Cf3Koz3c-CRPy_shO.js";import"./BufferView-wDxx79o3-BfSW-RMy.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./deduplicate-DRKoZSEv-Ds_MxTXk.js";import"./Indices-BuIC5D20-CLqpdRyX.js";import"./InterleavedLayout-C2YUDwKf-Hsn_xbC0.js";import"./types-l27bT09Q-DE0QfIFp.js";import"./VertexAttribute-hUz6pozM-Bx3V-z96.js";import"./glUtil-0ZzWJjlL-C5xhkIWX.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./Normals-BNEsVQbp-D5Bwt1yW.js";const N=1e3;function j(t,o,e){const i=V(),n=l(i);return b(n,n,t,.5),b(n,n,o,.5),i[3]=_(n,t),h(n,n,e),i}let g=class{constructor(){this._idToComponent=new Map,this._components=new w(t=>t.bounds),this._edges=new w(t=>t.bounds),this._tmpLineSegment=P(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),x(o),await this._ensureEdgeLocations(t,o);const e=[];return this._edges.forEachNeighbor(i=>(this._addCandidates(t,i,e),e.length<N),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,o){const e=[];if(this._components.forEachNeighbor(s=>{if(s.info==null){const{id:c,uid:r}=s;e.push({id:c,uid:r})}return!0},t.bounds),!e.length)return;const i={components:e},n=await this.remoteClient.invoke("fetchAllEdgeLocations",i,o??{});for(const s of n.components)this._setFetchEdgeLocations(s)}async add(t){const o=new f(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const e=[];this._edges.forEachNeighbor(i=>(i.component===o&&e.push(i),!0),o.bounds),this._edges.remove(e),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const e=I.createView(t.locations),i=new Array(e.count),n=p(),s=p();for(let d=0;d<e.count;d++){e.position0.getVec(d,n),e.position1.getVec(d,s);const a=j(n,s,t.origin),v=new k(o,d,a);i[d]=v}this._edges.add(i);const{objectIds:c,origin:r}=t;o.info={locations:e,objectIds:c,origin:r}}_addCandidates(t,o,e){const{info:i}=o.component,{origin:n,objectIds:s}=i,c=i.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,n),h(d,d,n);const a=s[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,e),C(t,a,r,e),C(t,a,d,e)}_addEdgeCandidate(t,o,e,i,n){if(!t.returnEdge)return;const s=l(t.bounds),c=S(e,i,this._tmpLineSegment),r=T(c,s,this._tmpP3);E(t.bounds,r)&&n.push({type:"edge",objectId:o,target:m(r),distance:_(s,r),start:m(e),end:m(i)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const ct=g;function C(t,o,e,i){if(!t.returnVertex||!E(t.bounds,e))return;const n=l(t.bounds);i.push({type:"vertex",objectId:o,target:m(e),distance:_(n,e)})}const u=class u{constructor(o,e){this.id=o,this.bounds=e,this.info=null,this.uid=++u.uid}};u.uid=0;let f=u;class k{constructor(o,e,i){this.component=o,this.index=e,this.bounds=i}}export{ct as default};
