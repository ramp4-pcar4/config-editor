import{_ as D,bn as S}from"./index-CQ8-0QQp.js";import{B as A}from"./TextureFormat-Cl0ugX3E-DD0Aw8RG.js";import{u as w}from"./enums-wEDHPbCF-Cf76M5_x.js";function R(){return C??(C=(async()=>{const t=await D(()=>import("./basis_encoder-DZxp6hVo-BRH08iUs.js"),[],import.meta.url),e=await t.default({locateFile:r=>S(`esri/libs/basisu/${r}`)});return e.initializeBasis(),e})()),C}let C;function b(){return E??(E=(async()=>await(await D(async()=>{const{default:t}=await import("./dxt_encoder-P9_YitA5-DEWA6YdT.js");return{default:t}},[],import.meta.url)).default({locateFile:t=>S(`esri/libs/dxtEncoder/${t}`)}))()),E}let E,B,X,c=null,u=null;class m{constructor(e,r){this.internalFormat=e,this.compressedTexture=r}}async function j(t){var r;let e;if(e=t.data instanceof ImageBitmap?U(t.data):v(t.data,t.width,t.height,t.components,t.needsFlip),t.hasS3TC){u||await g();const i=new Uint8Array(e.length);if(u!=null&&u.encode(e,t.width,t.height,t.preMultiplyAlpha,i)){const n=Q(i,!0),l=[i.buffer];return{result:new m((n==null?void 0:n.internalFormat)??null,(n==null?void 0:n.textureData)??null),transferList:l}}return{result:new m(null,null)}}if(t.hasETC){if(c||await x(),t.preMultiplyAlpha&&!u&&await g(),t.preMultiplyAlpha){const a=new Uint8ClampedArray(e.length);u==null||u.premultiply(new Uint8Array(e),t.width,t.height,a),e=a}const i=await F(e,t.width,t.height,t.hasMipmap),n=i?await M(i):null,l=((r=n==null?void 0:n.compressedTexture)==null?void 0:r.levels.map(a=>a.buffer))||[];return{result:new m((n==null?void 0:n.internalFormat)??null,(n==null?void 0:n.compressedTexture)??null),transferList:l}}return{result:new m(null,null)}}async function x(){c||(c=await(B??(B=R())))}async function g(){u||(u=await(X??(X=b())))}async function F(t,e,r,i,n=255,l=0,a=!1,o=!1){if(!c)return null;const s=new c.BasisEncoder;s.setPerceptual(!o),s.setCheckForAlpha(!0),s.setForceAlpha(!1),s.setRenormalize(o),s.setMipGen(i),s.setMipSRGB(!o),s.setCreateKTX2File(!0),s.setKTX2SRGBTransferFunc(!o),s.setQualityLevel(n),s.setCompressionLevel(l);const d=new Uint8Array(t.byteLength);s.setSliceSourceImage(0,new Uint8Array(t),e,r,a);const f=s.encode(d),h=new Uint8Array(d.buffer,0,f),p=new c.KTX2File(new Uint8Array(h));return p.isValid()?(s.delete(),h):(p.close(),p.delete(),s.delete(),null)}async function M(t){if(!c)return new m(null,null);const e=new c.KTX2File(new Uint8Array(t));e.startTranscoding();const[r,i]=e.getHasAlpha()?[A.ETC2_RGBA,w.COMPRESSED_RGBA8_ETC2_EAC]:[A.ETC1_RGB,w.COMPRESSED_RGB8_ETC2],n=e.getLevels(),l=[];for(let a=0;a<n;a++)l.push(new Uint8Array(e.getImageTranscodedSizeInBytes(a,0,0,r))),e.transcodeImage(l[a],a,0,0,r,0,-1,-1);return e.close(),e.delete(),{internalFormat:i,compressedTexture:{type:"compressed",levels:l}}}function U(t){const e=new OffscreenCanvas(t.width,t.height),r=e.getContext("2d");return r.drawImage(t,0,0),r.getImageData(0,0,e.width,e.height).data}function v(t,e,r,i,n){const l=new Uint8ClampedArray(t).subarray(0,e*r*i);if(!n)return l;const a=new Uint8ClampedArray(l.length),o=e*i;for(let s=0;s<r;s++){const d=s*o,f=(r-s-1)*o;a.set(l.subarray(d,d+o),f)}return a}const G=31,O=1,I=2,P=3,L=4,K=7,k=21,z=131072;function T(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const $=T("DXT1"),V=T("DXT3"),H=T("DXT5");function Q(t,e){const r=new Int32Array(t.buffer,t.byteOffset,G);let i,n;switch(r[k]){case $:i=8,n=w.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case V:i=16,n=w.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case H:i=16,n=w.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,a=r[L],o=r[P];(3&a||3&o)&&(a=a+3&-4,o=o+3&-4);const s=a,d=o;let f,h;r[I]&z&&e!==!1&&(l=Math.max(1,r[K]));let p=t.byteOffset+r[O]+4;const _=[];for(let y=0;y<l;++y)h=(a+3>>2)*(o+3>>2)*i,f=new Uint8Array(t.buffer,p,h),_.push(f),p+=h,a=Math.max(1,a>>1),o=Math.max(1,o>>1);return{textureData:{type:"compressed",levels:_},internalFormat:n,width:s,height:d}}export{m as TextureCompressionWorkerOutput,j as compress,F as compressRGBADataToKTX2,M as createTextureDataKTX2,x as initializeBasisEncoder,g as initializeDXTEncoder};
