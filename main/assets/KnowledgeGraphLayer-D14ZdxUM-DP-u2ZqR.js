import{a0 as f,a1 as D,ag as _,t as S,h as l,bB as y,bM as L,a6 as c,D as b,bk as v,bA as A,dN as T,cJ as k,v as r,S as d,w as N,F as E,n as I,bL as C}from"./index-CQ8-0QQp.js";import{T as w,$ as M,j as G,I as R,E as x}from"./KnowledgeGraphSublayer-BpP550Rh-B8o97zwI.js";import{w as O}from"./MultiOriginJSONSupport-BqiFJbbt-BJ8fBC2r.js";import{r as F}from"./uuid-Dj9mdEVg-BaKSCiyT.js";import{e as K}from"./Layer-DvVVmz9x--HAWlOUX.js";import{a as U}from"./ArcGISService-B6M5rzsr-DPt0x3XT.js";import{u as $}from"./BlendLayer-DjW_5k0v-DsPLpepu.js";import{i as j}from"./CustomParametersMixin-CSMgHDaw-BN9xuOjM.js";import{u as P,i as z}from"./OperationalLayer-CbXUnTH0-DsJS3BJK.js";import{x as H}from"./PortalLayer-B34ZUA2x-D6p-4se5.js";import{T as Y}from"./RefreshableLayer-Qpvyi8qY-DShwaTY-.js";import{S as B}from"./ScaleRangeLayer-x42fwED3-BS9j8FJs.js";import{u as Z}from"./knowledgeGraphService-bSKUKu5m-B44mJjFg.js";import"./OptimizedGeometry-pzfNw1AT-Ckm1nrtQ.js";import"./memoryEstimations-DeWfxwaV-D8kkh29b.js";import"./projectionUtils-B-CplN3q-DW663dnS.js";import"./constants-5AlnYBiV-SxxbBSOD.js";import"./featureConversionUtils-Bjjlcfdo-CpGOkH2T.js";import"./OptimizedFeature-mIz_HhJg-BomJ3mxO.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./GraphicsLayer-BiEC2-gS-CG3veBcP.js";import"./GraphicsCollection-uWAVmks7-DZTgsLMB.js";import"./ElevationInfo-DE5to86a-D1mqEVyw.js";import"./lengthUtils-C61nRlXw-C-u5HD5x.js";import"./TimeExtent-Cf2Pienb-Yfjpk5DQ.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-BBqLvREw.js";import"./parser-CWccHtwJ-CeF_pdxX.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-_RgowJk9.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Relationship-CQMFhJpR-D4XzKj2X.js";import"./Query-n1aoaaFC-CzM-0Osn.js";import"./Field-BIQ-quF4-kqmmAHwF.js";import"./fieldType-PhcL4ff8-X0HNaUrC.js";import"./workers-CeRXsnNJ-N8jhRv1L.js";import"./Queue-DV3gpSdl-n6S4F6IF.js";import"./intl-BAA1onnp-CmgFU7qQ.js";import"./FeatureStore-DfjNNhD_-DUWEX2YW.js";import"./BoundsStore-DffHzOYo-DIw_d9is.js";import"./PooledRBush-DfSXIoUa-BovKEZb7.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./timeSupport-C2LrHIeW-DHvCszUH.js";import"./queryUtils-DZy8hWx3-BdCCngVM.js";import"./normalizeUtils-u00NGW3M-Cj_eBFoN.js";import"./normalizeUtilsCommon-ClagynAA-C1rBYP54.js";import"./utils-BO8hgPs3-DAcioTpx.js";import"./utils-DpLVEUvg-WAf4cKk5.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-BuRXuDwH.js";import"./QueryEngine-B7NH52mH-BiAnO5dO.js";import"./WhereClauseCache-CixYkZwn-_DfXT2n_.js";import"./LRUCache-DPWdPNTF-BhV6gJVw.js";import"./MemCache-qDGoejB7-Bz_y0gIH.js";import"./WhereClause-D4rZJkVN-BZnvVYD0.js";import"./TimeOnly-CGkId3bj-JDOpcZSO.js";import"./enum-g1DWyQyu-Ak-qLf19.js";import"./UnknownTimeZone-DxjyzFvs-Bj2Ovyjw.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-GtM-hh0K.js";import"./utils-s7ypkCzr-CVOU4kxR.js";import"./heatmapUtils-DRTN9U3a-DdUh7Ehd.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-U_7PTaOX.js";import"./timeZoneUtils-d5p0Jda1-CK3w7ysb.js";import"./utils-CKRJGBD_-kOGrCiol.js";import"./ClassBreaksDefinition-BZ4FJdWb-CxvHCnmh.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-Bq5Muhg1.js";import"./NormalizationBinParametersMixin-70JA0FRq-opRAx0sX.js";import"./FieldsIndex-Bt0Y8aWr-Dy7qhi0q.js";import"./Scheduler-BV4C4cVP-CBy-rr-e.js";import"./debugFlags-8tOwPnHK-CtShftaq.js";import"./clientSideDefaults-BoAP7ZAL-BfMFl-jN.js";import"./fieldProperties-Cgp0UdcB-Cl6Uklka.js";import"./labelingInfo-DuLk-IW_-Do7y7R5R.js";import"./asyncUtils-BPUlNCrX-C7s4Eh4u.js";import"./SimpleRenderer-C1YRhRzu-CeFdc8G6.js";import"./commonProperties-CJLeiNuA-Cwn8lkYC.js";import"./colorRamps-trM-CPFS-C8zFo3rW.js";import"./ColorStop-CL7v3R-A-DyL2CQ70.js";import"./visualVariableUtils-BTS148WR-B-CYKTwx.js";import"./UniqueValueRenderer-CLXHFtg9-DWi5KH44.js";import"./diffUtils-BxG8DCnW-B0jtYcuY.js";import"./RendererLegendOptions-Bil_IDab-763rSoqF.js";import"./styleUtils-DBPDLVBX-jec2DPp4.js";import"./RelationshipQuery-CaEbQySU-BuV07-8G.js";import"./labelUtils-Oapo6DRu-Dhl_kaoD.js";import"./DisplayFilteredLayer-DTxK0R7U-COui60zA.js";import"./scaleUtils-Br-smv3A-BbNlrp6M.js";import"./displayFilterUtils-DvWUbJDp-ChRAcdEr.js";import"./FeatureEffectLayer-BVJTjFhg-BUjmO1bf.js";import"./FeatureEffect-D3G_gJ5F-b1zbEf0S.js";import"./FeatureFilter-DXpQKGs4-CnlpMeJW.js";import"./FeatureReductionLayer-vR-evpIv-BVqvy9aG.js";import"./FeatureReductionSelection-DzXAxMK9-Bs1Y8Y83.js";import"./jsonUtils-CzRaZnmS-FjfqUTHD.js";import"./typeUtils-CB2EGBWO-NWwLrO5e.js";import"./ClassBreaksRenderer-Bq2XGpfI-B2fVwuB3.js";import"./DictionaryScriptEvaluator-DW5hOK9A-BGZ0BqN6.js";import"./Version-CnwD6MZa-BnQab16p.js";import"./ArcadeExpression-XjY3x7KV-BmzhFoaj.js";import"./utils-BfXZnjCE-CopoHYAx.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-C0O-mB4B.js";import"./OrderByInfo-SNGyPlhJ-VBfpiZRI.js";import"./TemporalLayer-lQRje9wB-qMqS8PRE.js";import"./TimeInfo-COHxjenm-CiVRL70f.js";import"./FeatureSet-BVGGhhH9-50vSm7H-.js";import"./popupUtils-B99PyAFi-CMRky_9a.js";import"./utils-Cb2uXNfG-DKAy_g3B.js";import"./cimSymbolUtils-DCedSSCN-CSq18u1I.js";import"./PortalItem-BP-IQXnZ-BVF3QtiG.js";import"./portalItemUtils-BfWDJg-S-BsNTjlW4.js";import"./networkEnums-DHCOt6o_-Cyuk9n4z.js";import"./GPMessage-KKjIcGuy-FJGeijDm.js";let o=class extends $(B(Y(U(P(H(O(j(K)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(w)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(w)),this.type="knowledge-graph",this.url=null,this.addHandles(D(()=>this.layers.concat(this.tables),(i,t)=>this._handleSublayersChange(i,t),_))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(i){S(i)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await M(this)}async _fetchMetadata(){if(!this.url)throw new l("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await Z(this.url);this.knowledgeGraph=e,this._forEachGraphType(i=>{i.name&&this._graphTypeLookup.set(i.name,i)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===y.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new G({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await R(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(i=>{const t=this._graphTypeLookup.get(i.graphTypeName);t&&!e.namedTypeDefinitions.has(t.name)&&e.namedTypeDefinitions.set(t.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,L(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:i}=e;if((i==null?void 0:i.size)>0)i.forEach((t,a)=>{const s=this._graphTypeLookup.get(a);if(!s)return c.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void i.delete(a);s.type!=="relationship"&&s.type!=="entity"&&(c.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),i.delete(a))});else if(!e.generateAllSublayers)throw new l("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var s,n;let e=[],i=[];const{inclusionModeDefinition:t}=this,a=t==null?void 0:t.namedTypeDefinitions;!t||t.generateAllSublayers?(e=((s=this.knowledgeGraph.dataModel)==null?void 0:s.entityTypes)??[],i=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,m)=>{const h=this._graphTypeLookup.get(m);switch(h==null?void 0:h.type){case"relationship":i.push(h);break;case"entity":e.push(h)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=i}_forEachGraphType(e){var i,t;[...((i=this.knowledgeGraph.dataModel)==null?void 0:i.entityTypes)??[],...((t=this.knowledgeGraph.dataModel)==null?void 0:t.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const i=new Set,t=[];for(const a of e)this._graphTypeLookup.has(a.typeName)&&(this.layers.concat(this.tables).some(s=>s.objectType.name===a.typeName)===!1&&(this.dataManager.sublayerCaches.set(a.typeName,new Map),i.add(a.typeName)),b(this.sublayerIdsCache,a.typeName,()=>new Set).add(a.id),t.push(a));this.dataManager.addToLayer(t);for(const a of i){const s=this._graphTypeLookup.get(a);s&&(this._addSublayer(s),s.type==="entity"?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a))}await M(this,Array.from(i)),this._refreshNamedTypes()}_createSublayers(e,i,t){e.forEach(a=>{const s=this._createSublayer(a);t(s)&&i.push(s),this._updateSublayerCaches(a)})}_addSublayer(e){const i=this._createSublayer(e);return i.geometryType?this.layers.push(i):this.tables.push(i),i}_createSublayer(e){return new w({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,i){i.forEach(t=>{t.parentCompositeLayer=this;const a=e.find(s=>s.type===t.graphType&&s.name===t.graphTypeName);a&&(t.objectType=a,this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const i=this.dataManager.sublayerCaches;i.has(e)||i.set(e,new Map)}_saveUrlAsNewResource(e,i,t,a){e[i]="<pending>",t.pendingOperations.push(J(this.inclusionModeDefinition).then(s=>{const n=V(a);e[i]=n.itemRelativeUrl,t.toAdd.push({resource:n,content:{type:"blob",blob:s},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:i}]of e.namedTypeDefinitions)if(!i)return!1;return!0}_handleSublayersChange(e,i){i&&(i.forEach(t=>{t.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(t=>{t.parent=this}),this.addHandles([e.on("after-add",({item:t})=>{t.parent=this}),e.on("after-remove",({item:t})=>{t.parent=null})],"sublayers-owner"))}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=y.PORTAL_ITEM&&e<y.USER}readDefinitionSetMap(e,i,t){return v(e,t)}writeDefinitionSetMap(e,i,t,a){const s=a==null?void 0:a.portalItem,n=a==null?void 0:a.resources,p=A(a==null?void 0:a.origin);if(!s||!n||p==null)return void(e&&(i[t]=T(e,a)));const{inclusionModeDefinition:m}=this;if(!m||this._displaysAllRecords(m))return void(this.definitionSetMap=null);const h=this.originIdOf("inclusionModeDefinition");if(h===y.USER||this._namedTypesModified||p<h)this._saveUrlAsNewResource(i,t,n,s);else if(p===h&&e){const g=T(e,a);k(g)?this._saveUrlAsNewResource(i,t,n,s):i[t]=g}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):c.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var i,t;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.layers.length||this.originIdOf("tables")===y.DEFAULTS?this.originIdOf("layers")===y.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers):this.layers=new f,this.tables.length||this.originIdOf("layers")===y.DEFAULTS?this.originIdOf("tables")===y.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables):this.tables=new f,(t=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null||t.forEach((a,s)=>{var p;const n=b(this.sublayerIdsCache,s,()=>new Set);(p=a.members)==null||p.forEach(m=>{n.add(m.id)})})}async addRecords(e){await this.load(),await this._handleNewRecords(e)}async createSublayerForNamedType(e){await this.load();const i=this._graphTypeLookup.get(e);if(!i)throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),b(this.sublayerIdsCache,e,()=>new Set);const t=this._addSublayer(i);return i.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),await M(this,[e]),this._refreshNamedTypes(),t}convertSublayerToDynamicData(e){var i;if(!this.dataManager.inclusionModeDefinition)throw new l("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(!this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");(i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e))!=null&&i.useAllData?c.getLogger(this).warn("This Knowledge Graph Layer already uses dynamic membership for the sublayer - no conversion was made"):(this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),this.sublayerIdsCache.delete(e),this._refreshNamedTypes())}convertSublayerToExplicitMembership(e){if(!this.dataManager.inclusionModeDefinition)throw new l("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new l("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);if(!i||i.useAllData){if(!this.dataManager.sublayerCaches.has(e))throw new l("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");this.sublayerIdsCache.set(e,new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map}),this._refreshNamedTypes()}else c.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership for the sublayer - no conversion was made")}convertToFullyDynamicData(){this.dataManager.inclusionModeDefinition||c.getLogger(this).warn("This Knowledge Graph Layer already uses fully dynamic membership - no conversion was made"),this.sublayerIdsCache.clear(),this.dataManager.inclusionModeDefinition=null,this._refreshNamedTypes()}convertToExplicitMembership(){this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.size>0&&c.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership - no conversion was made"),this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map};for(const e of this.dataManager.sublayerCaches.keys())b(this.sublayerIdsCache,e,()=>new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map});this._refreshNamedTypes()}async removeRecords(e){var t,a,s,n,p,m,h,g;await this.load();const i=[];for(const u of e)((s=(a=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null?void 0:a.get(u.typeName))==null?void 0:s.useAllData)===!1&&((h=(m=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(u.typeName))==null?void 0:m.members)!=null&&h.has(u.id))&&i.push(u);this.dataManager.removeFromLayer(i);for(const u of i)(g=this.sublayerIdsCache.get(u.typeName))==null||g.delete(u.id);return this._refreshNamedTypes(),i}};r([d()],o.prototype,"dataManager",void 0),r([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],o.prototype,"definitionSetMap",void 0),r([N("definitionSetMap")],o.prototype,"readDefinitionSetMap",null),r([E("definitionSetMap")],o.prototype,"writeDefinitionSetMap",null),r([d()],o.prototype,"inclusionModeDefinition",null),r([d()],o.prototype,"knowledgeGraph",void 0),r([d({type:f.ofType(w),json:{write:{ignoreOrigin:!0}}})],o.prototype,"layers",void 0),r([d()],o.prototype,"memberEntityTypes",void 0),r([d()],o.prototype,"memberRelationshipTypes",void 0),r([d({type:["KnowledgeGraphLayer"]})],o.prototype,"operationalLayerType",void 0),r([d()],o.prototype,"sublayerIdsCache",void 0),r([d({type:f.ofType(w),json:{write:{ignoreOrigin:!0}}})],o.prototype,"tables",void 0),r([d({json:{read:!1}})],o.prototype,"type",void 0),r([d(z)],o.prototype,"url",void 0),o=r([I("esri.layers.KnowledgeGraphLayer")],o);const nt=o;async function J(e){const i=await x(e);return new Blob([i],{type:"application/x-protobuf"})}function V(e){const i=`definitionSetMap-${F()}.dat`,t=C("knowledgeGraphLayer",i);return e.resourceFromPath(t)}export{nt as default};
