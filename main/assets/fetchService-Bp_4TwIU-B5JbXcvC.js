import{b as l}from"./index-DT_2vTqg.js";async function y(e,t){const{data:r}=await l(e,{responseType:"json",query:{f:"json",...t==null?void 0:t.customParameters,token:t==null?void 0:t.apiKey}});return r}const f=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function g(e,t){const{loadContext:r,...a}=t||{},n=r?await r.fetchServiceMetadata(e,a):await y(e,a);u(n),i(n);const c={serviceJSON:n};if((n.currentVersion??0)<10.5)return c;const o=`${e}/layers`,s=r?await r.fetchServiceMetadata(o,a):await y(o,a);return u(s),i(s),c.layersJSON={layers:s.layers,tables:s.tables},c}function L(e){const{type:t}=e;return!!t&&f.has(t)}function b(e){return e.type==="Table"}function i(e){var t,r;e.layers=(t=e.layers)==null?void 0:t.filter(L),e.tables=(r=e.tables)==null?void 0:r.filter(b)}function p(e){e.type||(e.type="Feature Layer")}function d(e){e.type||(e.type="Table")}function u(e){var t,r;(t=e.layers)==null||t.forEach(p),(r=e.tables)==null||r.forEach(d)}function m(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}export{g as L,m as g,y as o};
